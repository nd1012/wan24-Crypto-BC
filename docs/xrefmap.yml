### YamlMime:XRefMap
sorted: true
references:
- uid: wan24.Crypto.BC
  name: wan24.Crypto.BC
  href: api/wan24.Crypto.BC.html
  commentId: N:wan24.Crypto.BC
  fullName: wan24.Crypto.BC
  nameWithType: wan24.Crypto.BC
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm
  name: AsymmetricDilithiumAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm
  nameWithType: AsymmetricDilithiumAlgorithm
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.#ctor
  name: AsymmetricDilithiumAlgorithm()
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.#ctor
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.AsymmetricDilithiumAlgorithm()
  nameWithType: AsymmetricDilithiumAlgorithm.AsymmetricDilithiumAlgorithm()
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.#ctor*
  name: AsymmetricDilithiumAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.AsymmetricDilithiumAlgorithm
  nameWithType: AsymmetricDilithiumAlgorithm.AsymmetricDilithiumAlgorithm
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricDilithiumAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricDilithiumAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricDilithiumAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricDilithiumAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  nameWithType: AsymmetricDilithiumAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  nameWithType: AsymmetricDilithiumAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricDilithiumAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters
  nameWithType: AsymmetricDilithiumAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.USAGES
  nameWithType: AsymmetricDilithiumAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper
  name: AsymmetricDilithiumHelper
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricDilithiumHelper
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper
  nameWithType: AsymmetricDilithiumHelper
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumParameters)
  name: GetKeySize(DilithiumParameters)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html#wan24_Crypto_BC_AsymmetricDilithiumHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Crystals_Dilithium_DilithiumParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumParameters)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumParameters)
  nameWithType: AsymmetricDilithiumHelper.GetKeySize(DilithiumParameters)
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html#wan24_Crypto_BC_AsymmetricDilithiumHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize
  nameWithType: AsymmetricDilithiumHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters(System.Int32)
  name: GetParameters(Int32)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html#wan24_Crypto_BC_AsymmetricDilithiumHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters(System.Int32)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters(System.Int32)
  nameWithType: AsymmetricDilithiumHelper.GetParameters(Int32)
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html#wan24_Crypto_BC_AsymmetricDilithiumHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters
  nameWithType: AsymmetricDilithiumHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  name: AsymmetricDilithiumPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  nameWithType: AsymmetricDilithiumPrivateKey
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor
  name: AsymmetricDilithiumPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey()
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey()
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricDilithiumPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(System.Byte[])
  name: AsymmetricDilithiumPrivateKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(System.Byte[])
  name.vb: AsymmetricDilithiumPrivateKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(System.Byte())
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(Byte[])
  nameWithType.vb: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor*
  name: AsymmetricDilithiumPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose(System.Boolean)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose(System.Boolean)
  nameWithType: AsymmetricDilithiumPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose
  nameWithType: AsymmetricDilithiumPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  name: Explicit(Byte[] to AsymmetricDilithiumPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricDilithiumPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  name.vb: Narrowing(Byte() to AsymmetricDilithiumPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricDilithiumPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricDilithiumPrivateKey)
  nameWithType: AsymmetricDilithiumPrivateKey.Explicit(Byte[] to AsymmetricDilithiumPrivateKey)
  nameWithType.vb: AsymmetricDilithiumPrivateKey.Narrowing(Byte() to AsymmetricDilithiumPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Narrowing
  nameWithType: AsymmetricDilithiumPrivateKey.Explicit
  nameWithType.vb: AsymmetricDilithiumPrivateKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricDilithiumPrivateKey)~wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name: Implicit(AsymmetricDilithiumPrivateKey to AsymmetricDilithiumPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__wan24_Crypto_BC_AsymmetricDilithiumPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricDilithiumPrivateKey)~wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name.vb: Widening(AsymmetricDilithiumPrivateKey to AsymmetricDilithiumPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Implicit(wan24.Crypto.BC.AsymmetricDilithiumPrivateKey to wan24.Crypto.BC.AsymmetricDilithiumPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Widening(wan24.Crypto.BC.AsymmetricDilithiumPrivateKey to wan24.Crypto.BC.AsymmetricDilithiumPublicKey)
  nameWithType: AsymmetricDilithiumPrivateKey.Implicit(AsymmetricDilithiumPrivateKey to AsymmetricDilithiumPublicKey)
  nameWithType.vb: AsymmetricDilithiumPrivateKey.Widening(AsymmetricDilithiumPrivateKey to AsymmetricDilithiumPublicKey)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Implicit*
  name: Implicit
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Implicit
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Widening
  nameWithType: AsymmetricDilithiumPrivateKey.Implicit
  nameWithType.vb: AsymmetricDilithiumPrivateKey.Widening
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name: AsymmetricDilithiumPublicKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  nameWithType: AsymmetricDilithiumPublicKey
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor
  name: AsymmetricDilithiumPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey()
  nameWithType: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey()
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPublicKeyParameters)
  name: AsymmetricDilithiumPublicKey(DilithiumPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Crystals_Dilithium_DilithiumPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPublicKeyParameters)
  nameWithType: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(DilithiumPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor(System.Byte[])
  name: AsymmetricDilithiumPublicKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor(System.Byte[])
  name.vb: AsymmetricDilithiumPublicKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(System.Byte())
  nameWithType: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(Byte[])
  nameWithType.vb: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor*
  name: AsymmetricDilithiumPublicKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey
  nameWithType: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  nameWithType: AsymmetricDilithiumPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  nameWithType: AsymmetricDilithiumPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name: Explicit(Byte[] to AsymmetricDilithiumPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricDilithiumPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name.vb: Narrowing(Byte() to AsymmetricDilithiumPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricDilithiumPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricDilithiumPublicKey)
  nameWithType: AsymmetricDilithiumPublicKey.Explicit(Byte[] to AsymmetricDilithiumPublicKey)
  nameWithType.vb: AsymmetricDilithiumPublicKey.Narrowing(Byte() to AsymmetricDilithiumPublicKey)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Narrowing
  nameWithType: AsymmetricDilithiumPublicKey.Explicit
  nameWithType.vb: AsymmetricDilithiumPublicKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm
  name: AsymmetricFalconAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricFalconAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm
  nameWithType: AsymmetricFalconAlgorithm
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.#ctor
  name: AsymmetricFalconAlgorithm()
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFalconAlgorithm.#ctor
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.AsymmetricFalconAlgorithm()
  nameWithType: AsymmetricFalconAlgorithm.AsymmetricFalconAlgorithm()
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.#ctor*
  name: AsymmetricFalconAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconAlgorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.AsymmetricFalconAlgorithm
  nameWithType: AsymmetricFalconAlgorithm.AsymmetricFalconAlgorithm
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricFalconAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricFalconAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricFalconAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricFalconAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  nameWithType: AsymmetricFalconAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  nameWithType: AsymmetricFalconAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricFalconAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters
  nameWithType: AsymmetricFalconAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.USAGES
  nameWithType: AsymmetricFalconAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricFalconHelper
  name: AsymmetricFalconHelper
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricFalconHelper
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper
  nameWithType: AsymmetricFalconHelper
- uid: wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconParameters)
  name: GetKeySize(FalconParameters)
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html#wan24_Crypto_BC_AsymmetricFalconHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Falcon_FalconParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconParameters)
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconParameters)
  nameWithType: AsymmetricFalconHelper.GetKeySize(FalconParameters)
- uid: wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html#wan24_Crypto_BC_AsymmetricFalconHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize
  nameWithType: AsymmetricFalconHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters(System.Int32)
  name: GetParameters(Int32)
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html#wan24_Crypto_BC_AsymmetricFalconHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters(System.Int32)
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters(System.Int32)
  nameWithType: AsymmetricFalconHelper.GetParameters(Int32)
- uid: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html#wan24_Crypto_BC_AsymmetricFalconHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters
  nameWithType: AsymmetricFalconHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey
  name: AsymmetricFalconPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricFalconPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey
  nameWithType: AsymmetricFalconPrivateKey
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor
  name: AsymmetricFalconPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey()
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey()
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricFalconPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(System.Byte[])
  name: AsymmetricFalconPrivateKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(System.Byte[])
  name.vb: AsymmetricFalconPrivateKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(System.Byte())
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(Byte[])
  nameWithType.vb: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor*
  name: AsymmetricFalconPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose(System.Boolean)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose(System.Boolean)
  nameWithType: AsymmetricFalconPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose
  nameWithType: AsymmetricFalconPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFalconPrivateKey
  name: Explicit(Byte[] to AsymmetricFalconPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricFalconPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFalconPrivateKey
  name.vb: Narrowing(Byte() to AsymmetricFalconPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricFalconPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricFalconPrivateKey)
  nameWithType: AsymmetricFalconPrivateKey.Explicit(Byte[] to AsymmetricFalconPrivateKey)
  nameWithType.vb: AsymmetricFalconPrivateKey.Narrowing(Byte() to AsymmetricFalconPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Narrowing
  nameWithType: AsymmetricFalconPrivateKey.Explicit
  nameWithType.vb: AsymmetricFalconPrivateKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricFalconPrivateKey)~wan24.Crypto.BC.AsymmetricFalconPublicKey
  name: Implicit(AsymmetricFalconPrivateKey to AsymmetricFalconPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricFalconPrivateKey__wan24_Crypto_BC_AsymmetricFalconPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricFalconPrivateKey)~wan24.Crypto.BC.AsymmetricFalconPublicKey
  name.vb: Widening(AsymmetricFalconPrivateKey to AsymmetricFalconPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Implicit(wan24.Crypto.BC.AsymmetricFalconPrivateKey to wan24.Crypto.BC.AsymmetricFalconPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Widening(wan24.Crypto.BC.AsymmetricFalconPrivateKey to wan24.Crypto.BC.AsymmetricFalconPublicKey)
  nameWithType: AsymmetricFalconPrivateKey.Implicit(AsymmetricFalconPrivateKey to AsymmetricFalconPublicKey)
  nameWithType.vb: AsymmetricFalconPrivateKey.Widening(AsymmetricFalconPrivateKey to AsymmetricFalconPublicKey)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Implicit*
  name: Implicit
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Implicit
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Widening
  nameWithType: AsymmetricFalconPrivateKey.Implicit
  nameWithType.vb: AsymmetricFalconPrivateKey.Widening
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey
  name: AsymmetricFalconPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricFalconPublicKey
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey
  nameWithType: AsymmetricFalconPublicKey
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor
  name: AsymmetricFalconPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey()
  nameWithType: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey()
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPublicKeyParameters)
  name: AsymmetricFalconPublicKey(FalconPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Falcon_FalconPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPublicKeyParameters)
  nameWithType: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(FalconPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor(System.Byte[])
  name: AsymmetricFalconPublicKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor(System.Byte[])
  name.vb: AsymmetricFalconPublicKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(System.Byte())
  nameWithType: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(Byte[])
  nameWithType.vb: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor*
  name: AsymmetricFalconPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey
  nameWithType: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  nameWithType: AsymmetricFalconPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  nameWithType: AsymmetricFalconPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFalconPublicKey
  name: Explicit(Byte[] to AsymmetricFalconPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricFalconPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFalconPublicKey
  name.vb: Narrowing(Byte() to AsymmetricFalconPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricFalconPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricFalconPublicKey)
  nameWithType: AsymmetricFalconPublicKey.Explicit(Byte[] to AsymmetricFalconPublicKey)
  nameWithType.vb: AsymmetricFalconPublicKey.Narrowing(Byte() to AsymmetricFalconPublicKey)
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPublicKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.Narrowing
  nameWithType: AsymmetricFalconPublicKey.Explicit
  nameWithType.vb: AsymmetricFalconPublicKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm
  name: AsymmetricFrodoKemAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm
  nameWithType: AsymmetricFrodoKemAlgorithm
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.#ctor
  name: AsymmetricFrodoKemAlgorithm()
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.#ctor
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.AsymmetricFrodoKemAlgorithm()
  nameWithType: AsymmetricFrodoKemAlgorithm.AsymmetricFrodoKemAlgorithm()
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.#ctor*
  name: AsymmetricFrodoKemAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.AsymmetricFrodoKemAlgorithm
  nameWithType: AsymmetricFrodoKemAlgorithm.AsymmetricFrodoKemAlgorithm
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricFrodoKemAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricFrodoKemAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricFrodoKemAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricFrodoKemAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  nameWithType: AsymmetricFrodoKemAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  nameWithType: AsymmetricFrodoKemAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricFrodoKemAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters
  nameWithType: AsymmetricFrodoKemAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.USAGES
  nameWithType: AsymmetricFrodoKemAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper
  name: AsymmetricFrodoKemHelper
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricFrodoKemHelper
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper
  nameWithType: AsymmetricFrodoKemHelper
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoParameters)
  name: GetKeySize(FrodoParameters)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html#wan24_Crypto_BC_AsymmetricFrodoKemHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Frodo_FrodoParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoParameters)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoParameters)
  nameWithType: AsymmetricFrodoKemHelper.GetKeySize(FrodoParameters)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html#wan24_Crypto_BC_AsymmetricFrodoKemHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize
  nameWithType: AsymmetricFrodoKemHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters(System.Int32)
  name: GetParameters(Int32)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html#wan24_Crypto_BC_AsymmetricFrodoKemHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters(System.Int32)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters(System.Int32)
  nameWithType: AsymmetricFrodoKemHelper.GetParameters(Int32)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html#wan24_Crypto_BC_AsymmetricFrodoKemHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters
  nameWithType: AsymmetricFrodoKemHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  name: AsymmetricFrodoKemPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  nameWithType: AsymmetricFrodoKemPrivateKey
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor
  name: AsymmetricFrodoKemPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey()
  nameWithType: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey()
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricFrodoKemPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor(System.Byte[])
  name: AsymmetricFrodoKemPrivateKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor(System.Byte[])
  name.vb: AsymmetricFrodoKemPrivateKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(System.Byte())
  nameWithType: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(Byte[])
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor*
  name: AsymmetricFrodoKemPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey
  nameWithType: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose(System.Boolean)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose(System.Boolean)
  nameWithType: AsymmetricFrodoKemPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose
  nameWithType: AsymmetricFrodoKemPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  name: Explicit(Byte[] to AsymmetricFrodoKemPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  name.vb: Narrowing(Byte() to AsymmetricFrodoKemPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey)
  nameWithType: AsymmetricFrodoKemPrivateKey.Explicit(Byte[] to AsymmetricFrodoKemPrivateKey)
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.Narrowing(Byte() to AsymmetricFrodoKemPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Narrowing
  nameWithType: AsymmetricFrodoKemPrivateKey.Explicit
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey)~wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name: Implicit(AsymmetricFrodoKemPrivateKey to AsymmetricFrodoKemPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__wan24_Crypto_BC_AsymmetricFrodoKemPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey)~wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name.vb: Widening(AsymmetricFrodoKemPrivateKey to AsymmetricFrodoKemPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Implicit(wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey to wan24.Crypto.BC.AsymmetricFrodoKemPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Widening(wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey to wan24.Crypto.BC.AsymmetricFrodoKemPublicKey)
  nameWithType: AsymmetricFrodoKemPrivateKey.Implicit(AsymmetricFrodoKemPrivateKey to AsymmetricFrodoKemPublicKey)
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.Widening(AsymmetricFrodoKemPrivateKey to AsymmetricFrodoKemPublicKey)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Implicit*
  name: Implicit
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Implicit
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Widening
  nameWithType: AsymmetricFrodoKemPrivateKey.Implicit
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.Widening
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name: AsymmetricFrodoKemPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  nameWithType: AsymmetricFrodoKemPublicKey
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor
  name: AsymmetricFrodoKemPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey()
  nameWithType: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey()
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPublicKeyParameters)
  name: AsymmetricFrodoKemPublicKey(FrodoPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Frodo_FrodoPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPublicKeyParameters)
  nameWithType: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(FrodoPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor(System.Byte[])
  name: AsymmetricFrodoKemPublicKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor(System.Byte[])
  name.vb: AsymmetricFrodoKemPublicKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(System.Byte())
  nameWithType: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(Byte[])
  nameWithType.vb: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor*
  name: AsymmetricFrodoKemPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey
  nameWithType: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  nameWithType: AsymmetricFrodoKemPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  nameWithType: AsymmetricFrodoKemPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name: Explicit(Byte[] to AsymmetricFrodoKemPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricFrodoKemPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name.vb: Narrowing(Byte() to AsymmetricFrodoKemPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricFrodoKemPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricFrodoKemPublicKey)
  nameWithType: AsymmetricFrodoKemPublicKey.Explicit(Byte[] to AsymmetricFrodoKemPublicKey)
  nameWithType.vb: AsymmetricFrodoKemPublicKey.Narrowing(Byte() to AsymmetricFrodoKemPublicKey)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Narrowing
  nameWithType: AsymmetricFrodoKemPublicKey.Explicit
  nameWithType.vb: AsymmetricFrodoKemPublicKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm
  name: AsymmetricKyberAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricKyberAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm
  nameWithType: AsymmetricKyberAlgorithm
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.#ctor
  name: AsymmetricKyberAlgorithm()
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricKyberAlgorithm.#ctor
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.AsymmetricKyberAlgorithm()
  nameWithType: AsymmetricKyberAlgorithm.AsymmetricKyberAlgorithm()
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.#ctor*
  name: AsymmetricKyberAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberAlgorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.AsymmetricKyberAlgorithm
  nameWithType: AsymmetricKyberAlgorithm.AsymmetricKyberAlgorithm
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricKyberAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricKyberAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricKyberAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricKyberAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  nameWithType: AsymmetricKyberAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  nameWithType: AsymmetricKyberAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricKyberAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters
  nameWithType: AsymmetricKyberAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.USAGES
  nameWithType: AsymmetricKyberAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricKyberHelper
  name: AsymmetricKyberHelper
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricKyberHelper
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper
  nameWithType: AsymmetricKyberHelper
- uid: wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberParameters)
  name: GetKeySize(KyberParameters)
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html#wan24_Crypto_BC_AsymmetricKyberHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Crystals_Kyber_KyberParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberParameters)
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberParameters)
  nameWithType: AsymmetricKyberHelper.GetKeySize(KyberParameters)
- uid: wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html#wan24_Crypto_BC_AsymmetricKyberHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize
  nameWithType: AsymmetricKyberHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters(System.Int32)
  name: GetParameters(Int32)
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html#wan24_Crypto_BC_AsymmetricKyberHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters(System.Int32)
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters(System.Int32)
  nameWithType: AsymmetricKyberHelper.GetParameters(Int32)
- uid: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html#wan24_Crypto_BC_AsymmetricKyberHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters
  nameWithType: AsymmetricKyberHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey
  name: AsymmetricKyberPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricKyberPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey
  nameWithType: AsymmetricKyberPrivateKey
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor
  name: AsymmetricKyberPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey()
  nameWithType: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey()
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricKyberPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor(System.Byte[])
  name: AsymmetricKyberPrivateKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor(System.Byte[])
  name.vb: AsymmetricKyberPrivateKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(System.Byte())
  nameWithType: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(Byte[])
  nameWithType.vb: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor*
  name: AsymmetricKyberPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey
  nameWithType: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose(System.Boolean)
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose(System.Boolean)
  nameWithType: AsymmetricKyberPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose
  nameWithType: AsymmetricKyberPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricKyberPrivateKey
  name: Explicit(Byte[] to AsymmetricKyberPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricKyberPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricKyberPrivateKey
  name.vb: Narrowing(Byte() to AsymmetricKyberPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricKyberPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricKyberPrivateKey)
  nameWithType: AsymmetricKyberPrivateKey.Explicit(Byte[] to AsymmetricKyberPrivateKey)
  nameWithType.vb: AsymmetricKyberPrivateKey.Narrowing(Byte() to AsymmetricKyberPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Narrowing
  nameWithType: AsymmetricKyberPrivateKey.Explicit
  nameWithType.vb: AsymmetricKyberPrivateKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricKyberPrivateKey)~wan24.Crypto.BC.AsymmetricKyberPublicKey
  name: Implicit(AsymmetricKyberPrivateKey to AsymmetricKyberPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricKyberPrivateKey__wan24_Crypto_BC_AsymmetricKyberPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricKyberPrivateKey)~wan24.Crypto.BC.AsymmetricKyberPublicKey
  name.vb: Widening(AsymmetricKyberPrivateKey to AsymmetricKyberPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Implicit(wan24.Crypto.BC.AsymmetricKyberPrivateKey to wan24.Crypto.BC.AsymmetricKyberPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Widening(wan24.Crypto.BC.AsymmetricKyberPrivateKey to wan24.Crypto.BC.AsymmetricKyberPublicKey)
  nameWithType: AsymmetricKyberPrivateKey.Implicit(AsymmetricKyberPrivateKey to AsymmetricKyberPublicKey)
  nameWithType.vb: AsymmetricKyberPrivateKey.Widening(AsymmetricKyberPrivateKey to AsymmetricKyberPublicKey)
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Implicit*
  name: Implicit
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Implicit
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Widening
  nameWithType: AsymmetricKyberPrivateKey.Implicit
  nameWithType.vb: AsymmetricKyberPrivateKey.Widening
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey
  name: AsymmetricKyberPublicKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricKyberPublicKey
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey
  nameWithType: AsymmetricKyberPublicKey
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor
  name: AsymmetricKyberPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey()
  nameWithType: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey()
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPublicKeyParameters)
  name: AsymmetricKyberPublicKey(KyberPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Crystals_Kyber_KyberPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPublicKeyParameters)
  nameWithType: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(KyberPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor(System.Byte[])
  name: AsymmetricKyberPublicKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor(System.Byte[])
  name.vb: AsymmetricKyberPublicKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(System.Byte())
  nameWithType: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(Byte[])
  nameWithType.vb: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor*
  name: AsymmetricKyberPublicKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey
  nameWithType: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  nameWithType: AsymmetricKyberPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  nameWithType: AsymmetricKyberPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricKyberPublicKey
  name: Explicit(Byte[] to AsymmetricKyberPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricKyberPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricKyberPublicKey
  name.vb: Narrowing(Byte() to AsymmetricKyberPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricKyberPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricKyberPublicKey)
  nameWithType: AsymmetricKyberPublicKey.Explicit(Byte[] to AsymmetricKyberPublicKey)
  nameWithType.vb: AsymmetricKyberPublicKey.Narrowing(Byte() to AsymmetricKyberPublicKey)
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPublicKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.Narrowing
  nameWithType: AsymmetricKyberPublicKey.Explicit
  nameWithType.vb: AsymmetricKyberPublicKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm
  name: AsymmetricSphincsPlusAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm
  nameWithType: AsymmetricSphincsPlusAlgorithm
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.#ctor
  name: AsymmetricSphincsPlusAlgorithm()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.#ctor
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.AsymmetricSphincsPlusAlgorithm()
  nameWithType: AsymmetricSphincsPlusAlgorithm.AsymmetricSphincsPlusAlgorithm()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.#ctor*
  name: AsymmetricSphincsPlusAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.AsymmetricSphincsPlusAlgorithm
  nameWithType: AsymmetricSphincsPlusAlgorithm.AsymmetricSphincsPlusAlgorithm
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricSphincsPlusAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricSphincsPlusAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricSphincsPlusAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricSphincsPlusAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  nameWithType: AsymmetricSphincsPlusAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  nameWithType: AsymmetricSphincsPlusAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricSphincsPlusAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters
  nameWithType: AsymmetricSphincsPlusAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.USAGES
  nameWithType: AsymmetricSphincsPlusAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper
  name: AsymmetricSphincsPlusHelper
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricSphincsPlusHelper
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper
  nameWithType: AsymmetricSphincsPlusHelper
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusParameters)
  name: GetKeySize(SphincsPlusParameters)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html#wan24_Crypto_BC_AsymmetricSphincsPlusHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_SphincsPlus_SphincsPlusParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusParameters)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusParameters)
  nameWithType: AsymmetricSphincsPlusHelper.GetKeySize(SphincsPlusParameters)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html#wan24_Crypto_BC_AsymmetricSphincsPlusHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize
  nameWithType: AsymmetricSphincsPlusHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters(System.Int32)
  name: GetParameters(Int32)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html#wan24_Crypto_BC_AsymmetricSphincsPlusHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters(System.Int32)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters(System.Int32)
  nameWithType: AsymmetricSphincsPlusHelper.GetParameters(Int32)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html#wan24_Crypto_BC_AsymmetricSphincsPlusHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters
  nameWithType: AsymmetricSphincsPlusHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  name: AsymmetricSphincsPlusPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  nameWithType: AsymmetricSphincsPlusPrivateKey
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor
  name: AsymmetricSphincsPlusPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey()
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricSphincsPlusPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(System.Byte[])
  name: AsymmetricSphincsPlusPrivateKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(System.Byte[])
  name.vb: AsymmetricSphincsPlusPrivateKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(System.Byte())
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(Byte[])
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor*
  name: AsymmetricSphincsPlusPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose(System.Boolean)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose(System.Boolean)
  nameWithType: AsymmetricSphincsPlusPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose
  nameWithType: AsymmetricSphincsPlusPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  name: Explicit(Byte[] to AsymmetricSphincsPlusPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  name.vb: Narrowing(Byte() to AsymmetricSphincsPlusPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey)
  nameWithType: AsymmetricSphincsPlusPrivateKey.Explicit(Byte[] to AsymmetricSphincsPlusPrivateKey)
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.Narrowing(Byte() to AsymmetricSphincsPlusPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Narrowing
  nameWithType: AsymmetricSphincsPlusPrivateKey.Explicit
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.Narrowing
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey)~wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name: Implicit(AsymmetricSphincsPlusPrivateKey to AsymmetricSphincsPlusPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey)~wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name.vb: Widening(AsymmetricSphincsPlusPrivateKey to AsymmetricSphincsPlusPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Implicit(wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey to wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Widening(wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey to wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey)
  nameWithType: AsymmetricSphincsPlusPrivateKey.Implicit(AsymmetricSphincsPlusPrivateKey to AsymmetricSphincsPlusPublicKey)
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.Widening(AsymmetricSphincsPlusPrivateKey to AsymmetricSphincsPlusPublicKey)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Implicit*
  name: Implicit
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Implicit
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Widening
  nameWithType: AsymmetricSphincsPlusPrivateKey.Implicit
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.Widening
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name: AsymmetricSphincsPlusPublicKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  nameWithType: AsymmetricSphincsPlusPublicKey
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor
  name: AsymmetricSphincsPlusPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey()
  nameWithType: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPublicKeyParameters)
  name: AsymmetricSphincsPlusPublicKey(SphincsPlusPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_SphincsPlus_SphincsPlusPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPublicKeyParameters)
  nameWithType: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(SphincsPlusPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor(System.Byte[])
  name: AsymmetricSphincsPlusPublicKey(Byte[])
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor(System.Byte[])
  name.vb: AsymmetricSphincsPlusPublicKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(System.Byte())
  nameWithType: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(Byte[])
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor*
  name: AsymmetricSphincsPlusPublicKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey
  nameWithType: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  nameWithType: AsymmetricSphincsPlusPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  nameWithType: AsymmetricSphincsPlusPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name: Explicit(Byte[] to AsymmetricSphincsPlusPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name.vb: Narrowing(Byte() to AsymmetricSphincsPlusPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Explicit(System.Byte[] to wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Narrowing(System.Byte() to wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey)
  nameWithType: AsymmetricSphincsPlusPublicKey.Explicit(Byte[] to AsymmetricSphincsPlusPublicKey)
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.Narrowing(Byte() to AsymmetricSphincsPlusPublicKey)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.op_Explicit*
  name: Explicit
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Explicit
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Narrowing
  nameWithType: AsymmetricSphincsPlusPublicKey.Explicit
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.Narrowing
- uid: wan24.Crypto.BC.Bootstrap
  name: Bootstrap
  href: api/wan24.Crypto.BC.Bootstrap.html
  commentId: T:wan24.Crypto.BC.Bootstrap
  fullName: wan24.Crypto.BC.Bootstrap
  nameWithType: Bootstrap
- uid: wan24.Crypto.BC.Bootstrap.Boot
  name: Boot()
  href: api/wan24.Crypto.BC.Bootstrap.html#wan24_Crypto_BC_Bootstrap_Boot
  commentId: M:wan24.Crypto.BC.Bootstrap.Boot
  fullName: wan24.Crypto.BC.Bootstrap.Boot()
  nameWithType: Bootstrap.Boot()
- uid: wan24.Crypto.BC.Bootstrap.Boot*
  name: Boot
  href: api/wan24.Crypto.BC.Bootstrap.html#wan24_Crypto_BC_Bootstrap_Boot_
  commentId: Overload:wan24.Crypto.BC.Bootstrap.Boot
  isSpec: "True"
  fullName: wan24.Crypto.BC.Bootstrap.Boot
  nameWithType: Bootstrap.Boot
- uid: wan24.Crypto.BC.BouncyCastle
  name: BouncyCastle
  href: api/wan24.Crypto.BC.BouncyCastle.html
  commentId: T:wan24.Crypto.BC.BouncyCastle
  fullName: wan24.Crypto.BC.BouncyCastle
  nameWithType: BouncyCastle
- uid: wan24.Crypto.BC.BouncyCastle.SetDefaults(System.Boolean@)
  name: SetDefaults(in Boolean)
  href: api/wan24.Crypto.BC.BouncyCastle.html#wan24_Crypto_BC_BouncyCastle_SetDefaults_System_Boolean__
  commentId: M:wan24.Crypto.BC.BouncyCastle.SetDefaults(System.Boolean@)
  name.vb: SetDefaults(ByRef Boolean)
  fullName: wan24.Crypto.BC.BouncyCastle.SetDefaults(in System.Boolean)
  fullName.vb: wan24.Crypto.BC.BouncyCastle.SetDefaults(ByRef System.Boolean)
  nameWithType: BouncyCastle.SetDefaults(in Boolean)
  nameWithType.vb: BouncyCastle.SetDefaults(ByRef Boolean)
- uid: wan24.Crypto.BC.BouncyCastle.SetDefaults*
  name: SetDefaults
  href: api/wan24.Crypto.BC.BouncyCastle.html#wan24_Crypto_BC_BouncyCastle_SetDefaults_
  commentId: Overload:wan24.Crypto.BC.BouncyCastle.SetDefaults
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastle.SetDefaults
  nameWithType: BouncyCastle.SetDefaults
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1
  name: BouncyCastleAeadStreamCipherAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1
  name.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleAeadStreamCipherAlgorithmBase(String, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.BouncyCastleAeadStreamCipherAlgorithmBase(System.String, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).BouncyCastleAeadStreamCipherAlgorithmBase(System.String, System.Int32)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.BouncyCastleAeadStreamCipherAlgorithmBase(String, Int32)
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).BouncyCastleAeadStreamCipherAlgorithmBase(String, Int32)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.#ctor*
  name: BouncyCastleAeadStreamCipherAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.BouncyCastleAeadStreamCipherAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).BouncyCastleAeadStreamCipherAlgorithmBase
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.BouncyCastleAeadStreamCipherAlgorithmBase
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).BouncyCastleAeadStreamCipherAlgorithmBase
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(Boolean, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.CreateCipher(Boolean, CryptoOptions)
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.CreateCipher
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).CreateCipher
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.CreateCipher
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).CreateCipher
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(Byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.CreateParameters(System.Byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).CreateParameters(System.Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.CreateParameters(Byte[], CryptoOptions)
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.CreateParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).CreateParameters
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.CreateParameters
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).CreateParameters
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetDecryptor(Stream,wan24.Crypto.CryptoOptions)
  name: GetDecryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetDecryptor_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetDecryptor(Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetDecryptor(Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetDecryptor(Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetDecryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetDecryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetDecryptor*
  name: GetDecryptor
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetDecryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetDecryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetDecryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetDecryptor
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetDecryptor
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetDecryptor
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetDecryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  name: GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetDecryptorAsync_Stream_wan24_Crypto_CryptoOptions_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetDecryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetDecryptorAsync*
  name: GetDecryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetDecryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetDecryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetDecryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetDecryptorAsync
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetDecryptorAsync
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetDecryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetEncryptor(Stream,wan24.Crypto.CryptoOptions)
  name: GetEncryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetEncryptor_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetEncryptor(Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetEncryptor(Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetEncryptor(Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetEncryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetEncryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetEncryptor*
  name: GetEncryptor
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetEncryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetEncryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetEncryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetEncryptor
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetEncryptor
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetEncryptor
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetEncryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  name: GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetEncryptorAsync_Stream_wan24_Crypto_CryptoOptions_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetEncryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetEncryptorAsync*
  name: GetEncryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetEncryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetEncryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetEncryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetEncryptorAsync
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetEncryptorAsync
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetEncryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetValidLengthKey(System.Byte[],System.Int32)
  name: GetValidLengthKey(Byte[], Int32)
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetValidLengthKey_System_Byte___System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetValidLengthKey(System.Byte[],System.Int32)
  name.vb: GetValidLengthKey(Byte(), Int32)
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetValidLengthKey(System.Byte[], System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetValidLengthKey(System.Byte(), System.Int32)
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetValidLengthKey(Byte[], Int32)
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetValidLengthKey(Byte(), Int32)
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetValidLengthKey*
  name: GetValidLengthKey
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_GetValidLengthKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.GetValidLengthKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetValidLengthKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetValidLengthKey
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.GetValidLengthKey
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).GetValidLengthKey
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadStreamCipherAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadStreamCipherAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleAeadStreamCipherAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleAeadStreamCipherAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8
  name: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8
  name.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.#ctor(System.String,System.Int32,wan24.Crypto.AsymmetricAlgorithmUsages,System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection{System.Int32},System.Boolean,System.Int32)
  name: BouncyCastleAsymmetricAlgorithmBase(String, Int32, AsymmetricAlgorithmUsages, Boolean, ReadOnlyCollection<Int32>, Boolean, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8__ctor_System_String_System_Int32_wan24_Crypto_AsymmetricAlgorithmUsages_System_Boolean_System_Collections_ObjectModel_ReadOnlyCollection_System_Int32__System_Boolean_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.#ctor(System.String,System.Int32,wan24.Crypto.AsymmetricAlgorithmUsages,System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection{System.Int32},System.Boolean,System.Int32)
  name.vb: BouncyCastleAsymmetricAlgorithmBase(String, Int32, AsymmetricAlgorithmUsages, Boolean, ReadOnlyCollection(Of Int32), Boolean, Int32)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase(System.String, System.Int32, wan24.Crypto.AsymmetricAlgorithmUsages, System.Boolean, System.Collections.ObjectModel.ReadOnlyCollection<System.Int32>, System.Boolean, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricAlgorithmBase(System.String, System.Int32, wan24.Crypto.AsymmetricAlgorithmUsages, System.Boolean, System.Collections.ObjectModel.ReadOnlyCollection(Of System.Int32), System.Boolean, System.Int32)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase(String, Int32, AsymmetricAlgorithmUsages, Boolean, ReadOnlyCollection<Int32>, Boolean, Int32)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricAlgorithmBase(String, Int32, AsymmetricAlgorithmUsages, Boolean, ReadOnlyCollection(Of Int32), Boolean, Int32)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.#ctor*
  name: BouncyCastleAsymmetricAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricAlgorithmBase
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricAlgorithmBase
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.AllowedKeySizes
  name: AllowedKeySizes
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_AllowedKeySizes
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.AllowedKeySizes
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.AllowedKeySizes
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).AllowedKeySizes
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.AllowedKeySizes
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).AllowedKeySizes
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.AllowedKeySizes*
  name: AllowedKeySizes
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_AllowedKeySizes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.AllowedKeySizes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.AllowedKeySizes
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).AllowedKeySizes
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.AllowedKeySizes
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).AllowedKeySizes
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom,`4,wan24.Crypto.CryptoOptions)
  name: CreateKeyGenParameters(SecureRandom, tParam, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_CreateKeyGenParameters_Org_BouncyCastle_Security_SecureRandom__4_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom,`4,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom, tParam, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom, tParam, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyGenParameters(SecureRandom, tParam, CryptoOptions)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyGenParameters(SecureRandom, tParam, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyGenParameters*
  name: CreateKeyGenParameters
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_CreateKeyGenParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyGenParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyGenParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyGenParameters
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyGenParameters
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyGenParameters
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyPair(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyPair(wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyPair(CryptoOptions)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyPair
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyPair
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyPair
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyPair
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.GetEngineParameters(CryptoOptions)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.GetEngineParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).GetEngineParameters
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.GetEngineParameters
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).GetEngineParameters
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Instance
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Instance
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Instance
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Instance
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Instance
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Instance
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Instance
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.IsEllipticCurveAlgorithm
  name: IsEllipticCurveAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_IsEllipticCurveAlgorithm
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.IsEllipticCurveAlgorithm
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsEllipticCurveAlgorithm
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsEllipticCurveAlgorithm
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsEllipticCurveAlgorithm
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsEllipticCurveAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.IsEllipticCurveAlgorithm*
  name: IsEllipticCurveAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_IsEllipticCurveAlgorithm_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.IsEllipticCurveAlgorithm
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsEllipticCurveAlgorithm
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsEllipticCurveAlgorithm
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsEllipticCurveAlgorithm
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsEllipticCurveAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_IsPostQuantum
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.IsPostQuantum
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsPostQuantum
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsPostQuantum
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsPostQuantum
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsPostQuantum
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsPostQuantum
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsPostQuantum
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsPostQuantum
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsPostQuantum
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Register
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Register()
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Register()
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Register()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Register
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Register
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Register
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Usages
  name: Usages
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_Usages
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Usages
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Usages
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Usages
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Usages
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Usages
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Usages*
  name: Usages
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_Usages_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.Usages
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Usages
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Usages
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Usages
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Usages
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5
  name: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5
  name.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String)
  name: BouncyCastleAsymmetricPrivateKeyBase(String)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(System.String)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricPrivateKeyBase(System.String)
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(String)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricPrivateKeyBase(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricPrivateKeyBase(String, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(System.String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricPrivateKeyBase(System.String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(String, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricPrivateKeyBase(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPrivateKeyBase(String, Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,System.Byte[])
  name.vb: BouncyCastleAsymmetricPrivateKeyBase(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(System.String, System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricPrivateKeyBase(System.String, System.Byte())
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(String, Byte[])
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricPrivateKeyBase(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor*
  name: BouncyCastleAsymmetricPrivateKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricPrivateKeyBase
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).BouncyCastleAsymmetricPrivateKeyBase
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Bits
  name: Bits
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_Bits
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Bits
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Bits
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Bits
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Bits
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Bits
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_Bits_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Bits
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Bits
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Bits
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Bits
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData()
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Keys
  name: Keys
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_Keys
  commentId: F:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Keys
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Keys
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Keys
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Keys
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Keys
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PrivateKey
  name: PrivateKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_PrivateKey
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PrivateKey
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PrivateKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PrivateKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PrivateKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PrivateKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PrivateKey*
  name: PrivateKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_PrivateKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PrivateKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PrivateKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PrivateKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PrivateKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PrivateKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PublicKey
  name: PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_PublicKey
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PublicKey
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PublicKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PublicKey*
  name: PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_PublicKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PublicKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_SerializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData()
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7
  name: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7
  name.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal)
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.#ctor(System.String)
  name: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.#ctor(System.String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(System.String)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(System.String)
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(System.String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(System.String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String, Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.#ctor(System.String,System.Byte[])
  name.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(System.String, System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(System.String, System.Byte())
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String, Byte[])
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.#ctor*
  name: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).BouncyCastleAsymmetricPrivateKeyExchangeKeyBase
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).BouncyCastleAsymmetricPrivateKeyExchangeKeyBase
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.DeriveKey(System.Byte[])
  name: DeriveKey(Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7_DeriveKey_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.DeriveKey(System.Byte[])
  name.vb: DeriveKey(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey(System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey(System.Byte())
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey(Byte[])
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  name: DeriveKey(IAsymmetricPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7_DeriveKey_wan24_Crypto_IAsymmetricPublicKey_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey(IAsymmetricPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey(IAsymmetricPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.DeriveKey*
  name: DeriveKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7_DeriveKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.DeriveKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name: GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7_GetKeyExchangeData_wan24_Crypto_IAsymmetricPublicKey_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.GetKeyExchangeData*
  name: GetKeyExchangeData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyExchangeKeyBase_7_GetKeyExchangeData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase`7.GetKeyExchangeData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.GetKeyExchangeData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).GetKeyExchangeData
  nameWithType: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.GetKeyExchangeData
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).GetKeyExchangeData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6
  name: BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase-6.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6
  name.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
  nameWithType: BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.#ctor(System.String)
  name: BouncyCastleAsymmetricPrivateSignatureKeyBase(String)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateSignatureKeyBase_6__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.#ctor(System.String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPrivateSignatureKeyBase(System.String)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).BouncyCastleAsymmetricPrivateSignatureKeyBase(System.String)
  nameWithType: BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPrivateSignatureKeyBase(String)
  nameWithType.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).BouncyCastleAsymmetricPrivateSignatureKeyBase(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricPrivateSignatureKeyBase(String, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateSignatureKeyBase_6__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPrivateSignatureKeyBase(System.String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).BouncyCastleAsymmetricPrivateSignatureKeyBase(System.String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPrivateSignatureKeyBase(String, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).BouncyCastleAsymmetricPrivateSignatureKeyBase(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPrivateSignatureKeyBase(String, Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateSignatureKeyBase_6__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.#ctor(System.String,System.Byte[])
  name.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPrivateSignatureKeyBase(System.String, System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).BouncyCastleAsymmetricPrivateSignatureKeyBase(System.String, System.Byte())
  nameWithType: BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPrivateSignatureKeyBase(String, Byte[])
  nameWithType.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).BouncyCastleAsymmetricPrivateSignatureKeyBase(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.#ctor*
  name: BouncyCastleAsymmetricPrivateSignatureKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateSignatureKeyBase_6__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPrivateSignatureKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).BouncyCastleAsymmetricPrivateSignatureKeyBase
  nameWithType: BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPrivateSignatureKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).BouncyCastleAsymmetricPrivateSignatureKeyBase
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.SignHashRaw(System.Byte[])
  name: SignHashRaw(Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateSignatureKeyBase_6_SignHashRaw_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.SignHashRaw(System.Byte[])
  name.vb: SignHashRaw(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw(System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw(System.Byte())
  nameWithType: BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw(Byte[])
  nameWithType.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.SignHashRaw*
  name: SignHashRaw
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateSignatureKeyBase_6_SignHashRaw_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase`6.SignHashRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw
  nameWithType: BouncyCastleAsymmetricPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw
  nameWithType.vb: BouncyCastleAsymmetricPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3
  name: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3
  name.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String)
  name: BouncyCastleAsymmetricPublicKeyBase(String)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(System.String)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).BouncyCastleAsymmetricPublicKeyBase(System.String)
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(String)
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).BouncyCastleAsymmetricPublicKeyBase(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String,`1)
  name: BouncyCastleAsymmetricPublicKeyBase(String, tPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__ctor_System_String__1_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String,`1)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(System.String, tPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).BouncyCastleAsymmetricPublicKeyBase(System.String, tPublicKey)
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(String, tPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).BouncyCastleAsymmetricPublicKeyBase(String, tPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPublicKeyBase(String, Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String,System.Byte[])
  name.vb: BouncyCastleAsymmetricPublicKeyBase(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(System.String, System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).BouncyCastleAsymmetricPublicKeyBase(System.String, System.Byte())
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(String, Byte[])
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).BouncyCastleAsymmetricPublicKeyBase(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor*
  name: BouncyCastleAsymmetricPublicKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).BouncyCastleAsymmetricPublicKeyBase
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).BouncyCastleAsymmetricPublicKeyBase
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3._PublicKey
  name: _PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__PublicKey
  commentId: F:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3._PublicKey
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>._PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)._PublicKey
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>._PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)._PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.DeserializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData()
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.GetCopy
  name: GetCopy()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_GetCopy
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.GetCopy
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.GetCopy()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).GetCopy()
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.GetCopy()
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).GetCopy()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.GetCopy*
  name: GetCopy
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_GetCopy_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.GetCopy
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.GetCopy
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).GetCopy
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.GetCopy
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).GetCopy
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.PublicKey
  name: PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_PublicKey
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.PublicKey
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).PublicKey
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.PublicKey*
  name: PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_PublicKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).PublicKey
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_SerializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.SerializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData()
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4
  name: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4
  name.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.#ctor(System.String)
  name: BouncyCastleAsymmetricPublicSignatureKeyBase(String)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicSignatureKeyBase_4__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.#ctor(System.String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPublicSignatureKeyBase(System.String)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).BouncyCastleAsymmetricPublicSignatureKeyBase(System.String)
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPublicSignatureKeyBase(String)
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).BouncyCastleAsymmetricPublicSignatureKeyBase(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.#ctor(System.String,`1)
  name: BouncyCastleAsymmetricPublicSignatureKeyBase(String, tPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicSignatureKeyBase_4__ctor_System_String__1_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.#ctor(System.String,`1)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPublicSignatureKeyBase(System.String, tPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).BouncyCastleAsymmetricPublicSignatureKeyBase(System.String, tPublicKey)
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPublicSignatureKeyBase(String, tPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).BouncyCastleAsymmetricPublicSignatureKeyBase(String, tPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPublicSignatureKeyBase(String, Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicSignatureKeyBase_4__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.#ctor(System.String,System.Byte[])
  name.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPublicSignatureKeyBase(System.String, System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).BouncyCastleAsymmetricPublicSignatureKeyBase(System.String, System.Byte())
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPublicSignatureKeyBase(String, Byte[])
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).BouncyCastleAsymmetricPublicSignatureKeyBase(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.#ctor*
  name: BouncyCastleAsymmetricPublicSignatureKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicSignatureKeyBase_4__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPublicSignatureKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).BouncyCastleAsymmetricPublicSignatureKeyBase
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPublicSignatureKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).BouncyCastleAsymmetricPublicSignatureKeyBase
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name: ValidateSignatureInt(SignatureContainer, Boolean)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicSignatureKeyBase_4_ValidateSignatureInt_wan24_Crypto_SignatureContainer_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt(wan24.Crypto.SignatureContainer, System.Boolean)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt(wan24.Crypto.SignatureContainer, System.Boolean)
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt(SignatureContainer, Boolean)
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt(SignatureContainer, Boolean)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.ValidateSignatureInt*
  name: ValidateSignatureInt
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicSignatureKeyBase_4_ValidateSignatureInt_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.ValidateSignatureInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name: ValidateSignatureRaw(Byte[], Byte[], Boolean)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicSignatureKeyBase_4_ValidateSignatureRaw_System_Byte___System_Byte___System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name.vb: ValidateSignatureRaw(Byte(), Byte(), Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw(System.Byte[], System.Byte[], System.Boolean)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw(System.Byte(), System.Byte(), System.Boolean)
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw(Byte[], Byte[], Boolean)
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw(Byte(), Byte(), Boolean)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.ValidateSignatureRaw*
  name: ValidateSignatureRaw
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicSignatureKeyBase_4_ValidateSignatureRaw_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase`4.ValidateSignatureRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw
  nameWithType: BouncyCastleAsymmetricPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw
  nameWithType.vb: BouncyCastleAsymmetricPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1
  name: BouncyCastleBlockCipherAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1
  name.vb: BouncyCastleBlockCipherAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleBlockCipherAlgorithmBase(String, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.BouncyCastleBlockCipherAlgorithmBase(System.String, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).BouncyCastleBlockCipherAlgorithmBase(System.String, System.Int32)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.BouncyCastleBlockCipherAlgorithmBase(String, Int32)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).BouncyCastleBlockCipherAlgorithmBase(String, Int32)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.#ctor*
  name: BouncyCastleBlockCipherAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.BouncyCastleBlockCipherAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).BouncyCastleBlockCipherAlgorithmBase
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.BouncyCastleBlockCipherAlgorithmBase
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).BouncyCastleBlockCipherAlgorithmBase
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(Boolean, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.CreateCipher(Boolean, CryptoOptions)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.CreateCipher
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).CreateCipher
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.CreateCipher
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).CreateCipher
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(Byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.CreateParameters(System.Byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).CreateParameters(System.Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.CreateParameters(Byte[], CryptoOptions)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.CreateParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).CreateParameters
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.CreateParameters
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).CreateParameters
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptor(Stream,wan24.Crypto.CryptoOptions)
  name: GetDecryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetDecryptor_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptor(Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptor(Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptor(Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptor*
  name: GetDecryptor
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetDecryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptor
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptor
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptor
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  name: GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetDecryptorAsync_Stream_wan24_Crypto_CryptoOptions_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptorAsync*
  name: GetDecryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetDecryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptorAsync
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptorAsync
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptor(Stream,wan24.Crypto.CryptoOptions)
  name: GetEncryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetEncryptor_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptor(Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptor(Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptor(Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptor*
  name: GetEncryptor
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetEncryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptor
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptor
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptor
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  name: GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetEncryptorAsync_Stream_wan24_Crypto_CryptoOptions_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptorAsync*
  name: GetEncryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetEncryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptorAsync
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptorAsync
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetValidLengthKey(System.Byte[],System.Int32)
  name: GetValidLengthKey(Byte[], Int32)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetValidLengthKey_System_Byte___System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetValidLengthKey(System.Byte[],System.Int32)
  name.vb: GetValidLengthKey(Byte(), Int32)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetValidLengthKey(System.Byte[], System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetValidLengthKey(System.Byte(), System.Int32)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetValidLengthKey(Byte[], Int32)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetValidLengthKey(Byte(), Int32)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetValidLengthKey*
  name: GetValidLengthKey
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetValidLengthKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetValidLengthKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetValidLengthKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetValidLengthKey
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetValidLengthKey
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetValidLengthKey
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform
  name: BouncyCastleCryptoTransform
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html
  commentId: T:wan24.Crypto.BC.BouncyCastleCryptoTransform
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform
  nameWithType: BouncyCastleCryptoTransform
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  name: BouncyCastleCryptoTransform(IBlockCipher)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IBlockCipher_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IBlockCipher)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IBlockCipher)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IDigest)
  name: BouncyCastleCryptoTransform(IDigest)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IDigest_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IDigest)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IDigest)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IDigest)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IMac)
  name: BouncyCastleCryptoTransform(IMac)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IMac_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IMac)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IMac)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IMac)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IStreamCipher)
  name: BouncyCastleCryptoTransform(IStreamCipher)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IStreamCipher_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IStreamCipher)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IStreamCipher)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IStreamCipher)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher)
  name: BouncyCastleCryptoTransform(IAeadBlockCipher)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_Modes_IAeadBlockCipher_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IAeadBlockCipher)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor*
  name: BouncyCastleCryptoTransform
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.AeadStreamCipher
  name: AeadStreamCipher
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_AeadStreamCipher
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.AeadStreamCipher
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.AeadStreamCipher
  nameWithType: BouncyCastleCryptoTransform.AeadStreamCipher
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.BlockCipher
  name: BlockCipher
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_BlockCipher
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.BlockCipher
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BlockCipher
  nameWithType: BouncyCastleCryptoTransform.BlockCipher
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  name: CanReuseTransform
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_CanReuseTransform
  commentId: P:wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  nameWithType: BouncyCastleCryptoTransform.CanReuseTransform
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform*
  name: CanReuseTransform
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_CanReuseTransform_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  nameWithType: BouncyCastleCryptoTransform.CanReuseTransform
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  name: CanTransformMultipleBlocks
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_CanTransformMultipleBlocks
  commentId: P:wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  nameWithType: BouncyCastleCryptoTransform.CanTransformMultipleBlocks
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks*
  name: CanTransformMultipleBlocks
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_CanTransformMultipleBlocks_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  nameWithType: BouncyCastleCryptoTransform.CanTransformMultipleBlocks
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.Digest
  name: Digest
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_Digest
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.Digest
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.Digest
  nameWithType: BouncyCastleCryptoTransform.Digest
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose(System.Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose(System.Boolean)
  nameWithType: BouncyCastleCryptoTransform.Dispose(Boolean)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_Dispose_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose
  nameWithType: BouncyCastleCryptoTransform.Dispose
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  name: InputBlockSize
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_InputBlockSize
  commentId: P:wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  nameWithType: BouncyCastleCryptoTransform.InputBlockSize
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize*
  name: InputBlockSize
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_InputBlockSize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  nameWithType: BouncyCastleCryptoTransform.InputBlockSize
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.Mac
  name: Mac
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_Mac
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.Mac
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.Mac
  nameWithType: BouncyCastleCryptoTransform.Mac
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  name: OutputBlockSize
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_OutputBlockSize
  commentId: P:wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  nameWithType: BouncyCastleCryptoTransform.OutputBlockSize
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize*
  name: OutputBlockSize
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_OutputBlockSize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  nameWithType: BouncyCastleCryptoTransform.OutputBlockSize
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.StreamCipher
  name: StreamCipher
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_StreamCipher
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.StreamCipher
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.StreamCipher
  nameWithType: BouncyCastleCryptoTransform.StreamCipher
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_TransformBlock_System_Byte___System_Int32_System_Int32_System_Byte___System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  name.vb: TransformBlock(Byte(), Int32, Int32, Byte(), Int32)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  nameWithType: BouncyCastleCryptoTransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType.vb: BouncyCastleCryptoTransform.TransformBlock(Byte(), Int32, Int32, Byte(), Int32)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock*
  name: TransformBlock
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_TransformBlock_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock
  nameWithType: BouncyCastleCryptoTransform.TransformBlock
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  name: TransformFinalBlock(Byte[], Int32, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_TransformFinalBlock_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  name.vb: TransformFinalBlock(Byte(), Int32, Int32)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock(System.Byte[], System.Int32, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock(System.Byte(), System.Int32, System.Int32)
  nameWithType: BouncyCastleCryptoTransform.TransformFinalBlock(Byte[], Int32, Int32)
  nameWithType.vb: BouncyCastleCryptoTransform.TransformFinalBlock(Byte(), Int32, Int32)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock*
  name: TransformFinalBlock
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_TransformFinalBlock_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock
  nameWithType: BouncyCastleCryptoTransform.TransformFinalBlock
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm
  name: BouncyCastleHashAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html
  commentId: T:wan24.Crypto.BC.BouncyCastleHashAlgorithm
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm
  nameWithType: BouncyCastleHashAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.#ctor(Org.BouncyCastle.Crypto.IDigest)
  name: BouncyCastleHashAlgorithm(IDigest)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm__ctor_Org_BouncyCastle_Crypto_IDigest_
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.#ctor(Org.BouncyCastle.Crypto.IDigest)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.BouncyCastleHashAlgorithm(Org.BouncyCastle.Crypto.IDigest)
  nameWithType: BouncyCastleHashAlgorithm.BouncyCastleHashAlgorithm(IDigest)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.#ctor*
  name: BouncyCastleHashAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.BouncyCastleHashAlgorithm
  nameWithType: BouncyCastleHashAlgorithm.BouncyCastleHashAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose(System.Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose(System.Boolean)
  nameWithType: BouncyCastleHashAlgorithm.Dispose(Boolean)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Dispose_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose
  nameWithType: BouncyCastleHashAlgorithm.Dispose
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(ReadOnlySpan{System.Byte})
  name: HashCore(ReadOnlySpan<Byte>)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashCore_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(ReadOnlySpan{System.Byte})
  name.vb: HashCore(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(ReadOnlySpan<System.Byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(ReadOnlySpan(Of System.Byte))
  nameWithType: BouncyCastleHashAlgorithm.HashCore(ReadOnlySpan<Byte>)
  nameWithType.vb: BouncyCastleHashAlgorithm.HashCore(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  name: HashCore(Byte[], Int32, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashCore_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  name.vb: HashCore(Byte(), Int32, Int32)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.Byte[], System.Int32, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.Byte(), System.Int32, System.Int32)
  nameWithType: BouncyCastleHashAlgorithm.HashCore(Byte[], Int32, Int32)
  nameWithType.vb: BouncyCastleHashAlgorithm.HashCore(Byte(), Int32, Int32)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore*
  name: HashCore
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashCore_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore
  nameWithType: BouncyCastleHashAlgorithm.HashCore
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal
  name: HashFinal()
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashFinal
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal()
  nameWithType: BouncyCastleHashAlgorithm.HashFinal()
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal*
  name: HashFinal
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashFinal_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal
  nameWithType: BouncyCastleHashAlgorithm.HashFinal
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize
  name: Initialize()
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Initialize
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize()
  nameWithType: BouncyCastleHashAlgorithm.Initialize()
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize*
  name: Initialize
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Initialize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize
  nameWithType: BouncyCastleHashAlgorithm.Initialize
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal(Span{System.Byte},System.Int32@)
  name: TryHashFinal(Span<Byte>, out Int32)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_TryHashFinal_Span_System_Byte__System_Int32__
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal(Span{System.Byte},System.Int32@)
  name.vb: TryHashFinal(Span(Of Byte), ByRef Int32)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal(Span<System.Byte>, out System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal(Span(Of System.Byte), ByRef System.Int32)
  nameWithType: BouncyCastleHashAlgorithm.TryHashFinal(Span<Byte>, out Int32)
  nameWithType.vb: BouncyCastleHashAlgorithm.TryHashFinal(Span(Of Byte), ByRef Int32)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal*
  name: TryHashFinal
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_TryHashFinal_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal
  nameWithType: BouncyCastleHashAlgorithm.TryHashFinal
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1
  name: BouncyCastleHashAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1
  name.vb: BouncyCastleHashAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T)
  nameWithType: BouncyCastleHashAlgorithmBase<T>
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleHashAlgorithmBase(String, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.#ctor(System.String,System.Int32)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.BouncyCastleHashAlgorithmBase(System.String, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).BouncyCastleHashAlgorithmBase(System.String, System.Int32)
  nameWithType: BouncyCastleHashAlgorithmBase<T>.BouncyCastleHashAlgorithmBase(String, Int32)
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).BouncyCastleHashAlgorithmBase(String, Int32)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.#ctor*
  name: BouncyCastleHashAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.BouncyCastleHashAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).BouncyCastleHashAlgorithmBase
  nameWithType: BouncyCastleHashAlgorithmBase<T>.BouncyCastleHashAlgorithmBase
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).BouncyCastleHashAlgorithmBase
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleHashAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleHashAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleHashAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleHashAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm
  name: BouncyCastleHmacAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html
  commentId: T:wan24.Crypto.BC.BouncyCastleHmacAlgorithm
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm
  nameWithType: BouncyCastleHmacAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.#ctor(Org.BouncyCastle.Crypto.IMac)
  name: BouncyCastleHmacAlgorithm(IMac)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm__ctor_Org_BouncyCastle_Crypto_IMac_
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.#ctor(Org.BouncyCastle.Crypto.IMac)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.BouncyCastleHmacAlgorithm(Org.BouncyCastle.Crypto.IMac)
  nameWithType: BouncyCastleHmacAlgorithm.BouncyCastleHmacAlgorithm(IMac)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.#ctor*
  name: BouncyCastleHmacAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.BouncyCastleHmacAlgorithm
  nameWithType: BouncyCastleHmacAlgorithm.BouncyCastleHmacAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose(System.Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose(System.Boolean)
  nameWithType: BouncyCastleHmacAlgorithm.Dispose(Boolean)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Dispose_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose
  nameWithType: BouncyCastleHmacAlgorithm.Dispose
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(ReadOnlySpan{System.Byte})
  name: HashCore(ReadOnlySpan<Byte>)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashCore_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(ReadOnlySpan{System.Byte})
  name.vb: HashCore(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(ReadOnlySpan<System.Byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(ReadOnlySpan(Of System.Byte))
  nameWithType: BouncyCastleHmacAlgorithm.HashCore(ReadOnlySpan<Byte>)
  nameWithType.vb: BouncyCastleHmacAlgorithm.HashCore(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  name: HashCore(Byte[], Int32, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashCore_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  name.vb: HashCore(Byte(), Int32, Int32)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.Byte[], System.Int32, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.Byte(), System.Int32, System.Int32)
  nameWithType: BouncyCastleHmacAlgorithm.HashCore(Byte[], Int32, Int32)
  nameWithType.vb: BouncyCastleHmacAlgorithm.HashCore(Byte(), Int32, Int32)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore*
  name: HashCore
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashCore_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore
  nameWithType: BouncyCastleHmacAlgorithm.HashCore
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal
  name: HashFinal()
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashFinal
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal()
  nameWithType: BouncyCastleHmacAlgorithm.HashFinal()
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal*
  name: HashFinal
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashFinal_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal
  nameWithType: BouncyCastleHmacAlgorithm.HashFinal
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize
  name: Initialize()
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Initialize
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize()
  nameWithType: BouncyCastleHmacAlgorithm.Initialize()
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize*
  name: Initialize
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Initialize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize
  nameWithType: BouncyCastleHmacAlgorithm.Initialize
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal(Span{System.Byte},System.Int32@)
  name: TryHashFinal(Span<Byte>, out Int32)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_TryHashFinal_Span_System_Byte__System_Int32__
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal(Span{System.Byte},System.Int32@)
  name.vb: TryHashFinal(Span(Of Byte), ByRef Int32)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal(Span<System.Byte>, out System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal(Span(Of System.Byte), ByRef System.Int32)
  nameWithType: BouncyCastleHmacAlgorithm.TryHashFinal(Span<Byte>, out Int32)
  nameWithType.vb: BouncyCastleHmacAlgorithm.TryHashFinal(Span(Of Byte), ByRef Int32)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal*
  name: TryHashFinal
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_TryHashFinal_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal
  nameWithType: BouncyCastleHmacAlgorithm.TryHashFinal
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1
  name: BouncyCastleHmacAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1
  name.vb: BouncyCastleHmacAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T)
  nameWithType: BouncyCastleHmacAlgorithmBase<T>
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleHmacAlgorithmBase(String, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.#ctor(System.String,System.Int32)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.BouncyCastleHmacAlgorithmBase(System.String, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).BouncyCastleHmacAlgorithmBase(System.String, System.Int32)
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.BouncyCastleHmacAlgorithmBase(String, Int32)
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).BouncyCastleHmacAlgorithmBase(String, Int32)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.#ctor*
  name: BouncyCastleHmacAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.BouncyCastleHmacAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).BouncyCastleHmacAlgorithmBase
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.BouncyCastleHmacAlgorithmBase
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).BouncyCastleHmacAlgorithmBase
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator
  name: BouncyCastleRandomGenerator
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html
  commentId: T:wan24.Crypto.BC.BouncyCastleRandomGenerator
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator
  nameWithType: BouncyCastleRandomGenerator
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.#ctor
  name: BouncyCastleRandomGenerator()
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator__ctor
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.#ctor
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.BouncyCastleRandomGenerator()
  nameWithType: BouncyCastleRandomGenerator.BouncyCastleRandomGenerator()
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.#ctor*
  name: BouncyCastleRandomGenerator
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.BouncyCastleRandomGenerator
  nameWithType: BouncyCastleRandomGenerator.BouncyCastleRandomGenerator
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<Byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedMaterial_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(ReadOnlySpan<System.Byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(ReadOnlySpan(Of System.Byte))
  nameWithType: BouncyCastleRandomGenerator.AddSeedMaterial(ReadOnlySpan<Byte>)
  nameWithType.vb: BouncyCastleRandomGenerator.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Byte())
  nameWithType: BouncyCastleRandomGenerator.AddSeedMaterial(Byte[])
  nameWithType.vb: BouncyCastleRandomGenerator.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(Int64)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Int64)
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Int64)
  nameWithType: BouncyCastleRandomGenerator.AddSeedMaterial(Int64)
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial
  nameWithType: BouncyCastleRandomGenerator.AddSeedMaterial
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  nameWithType: BouncyCastleRandomGenerator.Instance
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  nameWithType: BouncyCastleRandomGenerator.Instance
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(Span{System.Byte})
  name: NextBytes(Span<Byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_NextBytes_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(Span<System.Byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(Span(Of System.Byte))
  nameWithType: BouncyCastleRandomGenerator.NextBytes(Span<Byte>)
  nameWithType.vb: BouncyCastleRandomGenerator.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[])
  name: NextBytes(Byte[])
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte())
  nameWithType: BouncyCastleRandomGenerator.NextBytes(Byte[])
  nameWithType.vb: BouncyCastleRandomGenerator.NextBytes(Byte())
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(Byte[], Int32, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Int32, Int32)
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[], System.Int32, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte(), System.Int32, System.Int32)
  nameWithType: BouncyCastleRandomGenerator.NextBytes(Byte[], Int32, Int32)
  nameWithType.vb: BouncyCastleRandomGenerator.NextBytes(Byte(), Int32, Int32)
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_NextBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes
  nameWithType: BouncyCastleRandomGenerator.NextBytes
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1
  name: BouncyCastleStreamCipherAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1
  name.vb: BouncyCastleStreamCipherAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleStreamCipherAlgorithmBase(String, Int32)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.BouncyCastleStreamCipherAlgorithmBase(System.String, System.Int32)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).BouncyCastleStreamCipherAlgorithmBase(System.String, System.Int32)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.BouncyCastleStreamCipherAlgorithmBase(String, Int32)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).BouncyCastleStreamCipherAlgorithmBase(String, Int32)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.#ctor*
  name: BouncyCastleStreamCipherAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.BouncyCastleStreamCipherAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).BouncyCastleStreamCipherAlgorithmBase
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.BouncyCastleStreamCipherAlgorithmBase
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).BouncyCastleStreamCipherAlgorithmBase
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(Boolean, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.CreateCipher(Boolean, CryptoOptions)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.CreateCipher
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).CreateCipher
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.CreateCipher
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).CreateCipher
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(Byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.CreateParameters(System.Byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).CreateParameters(System.Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.CreateParameters(Byte[], CryptoOptions)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.CreateParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).CreateParameters
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.CreateParameters
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).CreateParameters
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptor(Stream,wan24.Crypto.CryptoOptions)
  name: GetDecryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetDecryptor_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptor(Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptor(Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptor(Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptor*
  name: GetDecryptor
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetDecryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptor
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptor
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptor
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  name: GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetDecryptorAsync_Stream_wan24_Crypto_CryptoOptions_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptorAsync*
  name: GetDecryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetDecryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptorAsync
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptorAsync
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptor(Stream,wan24.Crypto.CryptoOptions)
  name: GetEncryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetEncryptor_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptor(Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptor(Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptor(Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptor*
  name: GetEncryptor
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetEncryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptor
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptor
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptor
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  name: GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetEncryptorAsync_Stream_wan24_Crypto_CryptoOptions_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptorAsync(Stream,wan24.Crypto.CryptoOptions,CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, wan24.Crypto.CryptoOptions, CancellationToken)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptorAsync*
  name: GetEncryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetEncryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptorAsync
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptorAsync
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm
  name: EncryptionAes256GcmAlgorithm
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm
  nameWithType: EncryptionAes256GcmAlgorithm
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.#ctor
  name: EncryptionAes256GcmAlgorithm()
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm__ctor
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.#ctor
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EncryptionAes256GcmAlgorithm()
  nameWithType: EncryptionAes256GcmAlgorithm.EncryptionAes256GcmAlgorithm()
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.#ctor*
  name: EncryptionAes256GcmAlgorithm
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EncryptionAes256GcmAlgorithm
  nameWithType: EncryptionAes256GcmAlgorithm.EncryptionAes256GcmAlgorithm
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_NAME
  nameWithType: EncryptionAes256GcmAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_VALUE
  nameWithType: EncryptionAes256GcmAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BLOCK_SIZE
  nameWithType: EncryptionAes256GcmAlgorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  nameWithType: EncryptionAes256GcmAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  nameWithType: EncryptionAes256GcmAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  name: CreateAes(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_CreateAes_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionAes256GcmAlgorithm.CreateAes(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes*
  name: CreateAes
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_CreateAes_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes
  nameWithType: EncryptionAes256GcmAlgorithm.CreateAes
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(Boolean, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionAes256GcmAlgorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher
  nameWithType: EncryptionAes256GcmAlgorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DISPLAY_NAME
  nameWithType: EncryptionAes256GcmAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  nameWithType: EncryptionAes256GcmAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  nameWithType: EncryptionAes256GcmAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(Byte[])
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(System.Byte())
  nameWithType: EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(Byte[])
  nameWithType.vb: EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength
  nameWithType: EncryptionAes256GcmAlgorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(Int32)
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  nameWithType: EncryptionAes256GcmAlgorithm.IsKeyLengthValid(Int32)
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid
  nameWithType: EncryptionAes256GcmAlgorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  nameWithType: EncryptionAes256GcmAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  nameWithType: EncryptionAes256GcmAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IV_SIZE
  nameWithType: EncryptionAes256GcmAlgorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  nameWithType: EncryptionAes256GcmAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  nameWithType: EncryptionAes256GcmAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KEY_SIZE
  nameWithType: EncryptionAes256GcmAlgorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  nameWithType: EncryptionAes256GcmAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  nameWithType: EncryptionAes256GcmAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.PROFILE_AES256GCM_RAW
  name: PROFILE_AES256GCM_RAW
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_PROFILE_AES256GCM_RAW
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.PROFILE_AES256GCM_RAW
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.PROFILE_AES256GCM_RAW
  nameWithType: EncryptionAes256GcmAlgorithm.PROFILE_AES256GCM_RAW
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionAes256GcmAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionAes256GcmAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm
  name: EncryptionChaCha20Algorithm
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionChaCha20Algorithm
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm
  nameWithType: EncryptionChaCha20Algorithm
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.#ctor
  name: EncryptionChaCha20Algorithm()
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm__ctor
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.#ctor
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EncryptionChaCha20Algorithm()
  nameWithType: EncryptionChaCha20Algorithm.EncryptionChaCha20Algorithm()
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.#ctor*
  name: EncryptionChaCha20Algorithm
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EncryptionChaCha20Algorithm
  nameWithType: EncryptionChaCha20Algorithm.EncryptionChaCha20Algorithm
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_NAME
  nameWithType: EncryptionChaCha20Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_VALUE
  nameWithType: EncryptionChaCha20Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BLOCK_SIZE
  nameWithType: EncryptionChaCha20Algorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  nameWithType: EncryptionChaCha20Algorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  nameWithType: EncryptionChaCha20Algorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha(wan24.Crypto.CryptoOptions)
  name: CreateChaCha(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_CreateChaCha_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionChaCha20Algorithm.CreateChaCha(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha*
  name: CreateChaCha
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_CreateChaCha_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha
  nameWithType: EncryptionChaCha20Algorithm.CreateChaCha
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(Boolean, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionChaCha20Algorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher
  nameWithType: EncryptionChaCha20Algorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DISPLAY_NAME
  nameWithType: EncryptionChaCha20Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  nameWithType: EncryptionChaCha20Algorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  nameWithType: EncryptionChaCha20Algorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(Byte[])
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength(System.Byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength(System.Byte())
  nameWithType: EncryptionChaCha20Algorithm.EnsureValidKeyLength(Byte[])
  nameWithType.vb: EncryptionChaCha20Algorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength
  nameWithType: EncryptionChaCha20Algorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(Int32)
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid(System.Int32)
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid(System.Int32)
  nameWithType: EncryptionChaCha20Algorithm.IsKeyLengthValid(Int32)
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid
  nameWithType: EncryptionChaCha20Algorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  nameWithType: EncryptionChaCha20Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  nameWithType: EncryptionChaCha20Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IV_SIZE
  nameWithType: EncryptionChaCha20Algorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  nameWithType: EncryptionChaCha20Algorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  nameWithType: EncryptionChaCha20Algorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KEY_SIZE
  nameWithType: EncryptionChaCha20Algorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  nameWithType: EncryptionChaCha20Algorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  nameWithType: EncryptionChaCha20Algorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.PROFILE_CHACHA20_RAW
  name: PROFILE_CHACHA20_RAW
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_PROFILE_CHACHA20_RAW
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.PROFILE_CHACHA20_RAW
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.PROFILE_CHACHA20_RAW
  nameWithType: EncryptionChaCha20Algorithm.PROFILE_CHACHA20_RAW
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  nameWithType: EncryptionChaCha20Algorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  nameWithType: EncryptionChaCha20Algorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm
  name: EncryptionXSalsa20Algorithm
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionXSalsa20Algorithm
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm
  nameWithType: EncryptionXSalsa20Algorithm
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.#ctor
  name: EncryptionXSalsa20Algorithm()
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm__ctor
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.#ctor
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EncryptionXSalsa20Algorithm()
  nameWithType: EncryptionXSalsa20Algorithm.EncryptionXSalsa20Algorithm()
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.#ctor*
  name: EncryptionXSalsa20Algorithm
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EncryptionXSalsa20Algorithm
  nameWithType: EncryptionXSalsa20Algorithm.EncryptionXSalsa20Algorithm
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_NAME
  nameWithType: EncryptionXSalsa20Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_VALUE
  nameWithType: EncryptionXSalsa20Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BLOCK_SIZE
  nameWithType: EncryptionXSalsa20Algorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  nameWithType: EncryptionXSalsa20Algorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  nameWithType: EncryptionXSalsa20Algorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(Boolean, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher(System.Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionXSalsa20Algorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher
  nameWithType: EncryptionXSalsa20Algorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20(wan24.Crypto.CryptoOptions)
  name: CreateXSalsa20(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_CreateXSalsa20_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionXSalsa20Algorithm.CreateXSalsa20(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20*
  name: CreateXSalsa20
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_CreateXSalsa20_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20
  nameWithType: EncryptionXSalsa20Algorithm.CreateXSalsa20
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DISPLAY_NAME
  nameWithType: EncryptionXSalsa20Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  nameWithType: EncryptionXSalsa20Algorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  nameWithType: EncryptionXSalsa20Algorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(Byte[])
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength(System.Byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength(System.Byte())
  nameWithType: EncryptionXSalsa20Algorithm.EnsureValidKeyLength(Byte[])
  nameWithType.vb: EncryptionXSalsa20Algorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength
  nameWithType: EncryptionXSalsa20Algorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(Int32)
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid(System.Int32)
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid(System.Int32)
  nameWithType: EncryptionXSalsa20Algorithm.IsKeyLengthValid(Int32)
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid
  nameWithType: EncryptionXSalsa20Algorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  nameWithType: EncryptionXSalsa20Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  nameWithType: EncryptionXSalsa20Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IV_SIZE
  nameWithType: EncryptionXSalsa20Algorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  nameWithType: EncryptionXSalsa20Algorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  nameWithType: EncryptionXSalsa20Algorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KEY_SIZE
  nameWithType: EncryptionXSalsa20Algorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  nameWithType: EncryptionXSalsa20Algorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  nameWithType: EncryptionXSalsa20Algorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.PROFILE_XSALSA20_RAW
  name: PROFILE_XSALSA20_RAW
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_PROFILE_XSALSA20_RAW
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.PROFILE_XSALSA20_RAW
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.PROFILE_XSALSA20_RAW
  nameWithType: EncryptionXSalsa20Algorithm.PROFILE_XSALSA20_RAW
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  nameWithType: EncryptionXSalsa20Algorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  nameWithType: EncryptionXSalsa20Algorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.HashSha3_256Algorithm
  name: HashSha3_256Algorithm
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html
  commentId: T:wan24.Crypto.BC.HashSha3_256Algorithm
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm
  nameWithType: HashSha3_256Algorithm
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.#ctor
  name: HashSha3_256Algorithm()
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm__ctor
  commentId: M:wan24.Crypto.BC.HashSha3_256Algorithm.#ctor
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.HashSha3_256Algorithm()
  nameWithType: HashSha3_256Algorithm.HashSha3_256Algorithm()
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.#ctor*
  name: HashSha3_256Algorithm
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.HashSha3_256Algorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.HashSha3_256Algorithm
  nameWithType: HashSha3_256Algorithm.HashSha3_256Algorithm
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.HashSha3_256Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.ALGORITHM_NAME
  nameWithType: HashSha3_256Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.HashSha3_256Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.ALGORITHM_VALUE
  nameWithType: HashSha3_256Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.HashSha3_256Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.DISPLAY_NAME
  nameWithType: HashSha3_256Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.HashSha3_256Algorithm.DisplayName
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.DisplayName
  nameWithType: HashSha3_256Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.HashSha3_256Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.DisplayName
  nameWithType: HashSha3_256Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name: GetHashAlgorithmInt(CryptoOptions)
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_GetHashAlgorithmInt_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.HashSha3_256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  nameWithType: HashSha3_256Algorithm.GetHashAlgorithmInt(CryptoOptions)
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.GetHashAlgorithmInt*
  name: GetHashAlgorithmInt
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_GetHashAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.HashSha3_256Algorithm.GetHashAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.GetHashAlgorithmInt
  nameWithType: HashSha3_256Algorithm.GetHashAlgorithmInt
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.HASH_LENGTH
  name: HASH_LENGTH
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_HASH_LENGTH
  commentId: F:wan24.Crypto.BC.HashSha3_256Algorithm.HASH_LENGTH
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.HASH_LENGTH
  nameWithType: HashSha3_256Algorithm.HASH_LENGTH
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.HashLength
  name: HashLength
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_HashLength
  commentId: P:wan24.Crypto.BC.HashSha3_256Algorithm.HashLength
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.HashLength
  nameWithType: HashSha3_256Algorithm.HashLength
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.HashLength*
  name: HashLength
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_HashLength_
  commentId: Overload:wan24.Crypto.BC.HashSha3_256Algorithm.HashLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.HashLength
  nameWithType: HashSha3_256Algorithm.HashLength
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.HashSha3_256Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.IsPostQuantum
  nameWithType: HashSha3_256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashSha3_256Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashSha3_256Algorithm.html#wan24_Crypto_BC_HashSha3_256Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.HashSha3_256Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_256Algorithm.IsPostQuantum
  nameWithType: HashSha3_256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashSha3_384Algorithm
  name: HashSha3_384Algorithm
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html
  commentId: T:wan24.Crypto.BC.HashSha3_384Algorithm
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm
  nameWithType: HashSha3_384Algorithm
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.#ctor
  name: HashSha3_384Algorithm()
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm__ctor
  commentId: M:wan24.Crypto.BC.HashSha3_384Algorithm.#ctor
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.HashSha3_384Algorithm()
  nameWithType: HashSha3_384Algorithm.HashSha3_384Algorithm()
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.#ctor*
  name: HashSha3_384Algorithm
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.HashSha3_384Algorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.HashSha3_384Algorithm
  nameWithType: HashSha3_384Algorithm.HashSha3_384Algorithm
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.HashSha3_384Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.ALGORITHM_NAME
  nameWithType: HashSha3_384Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.HashSha3_384Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.ALGORITHM_VALUE
  nameWithType: HashSha3_384Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.HashSha3_384Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.DISPLAY_NAME
  nameWithType: HashSha3_384Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.HashSha3_384Algorithm.DisplayName
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.DisplayName
  nameWithType: HashSha3_384Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.HashSha3_384Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.DisplayName
  nameWithType: HashSha3_384Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name: GetHashAlgorithmInt(CryptoOptions)
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_GetHashAlgorithmInt_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.HashSha3_384Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  nameWithType: HashSha3_384Algorithm.GetHashAlgorithmInt(CryptoOptions)
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.GetHashAlgorithmInt*
  name: GetHashAlgorithmInt
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_GetHashAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.HashSha3_384Algorithm.GetHashAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.GetHashAlgorithmInt
  nameWithType: HashSha3_384Algorithm.GetHashAlgorithmInt
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.HASH_LENGTH
  name: HASH_LENGTH
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_HASH_LENGTH
  commentId: F:wan24.Crypto.BC.HashSha3_384Algorithm.HASH_LENGTH
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.HASH_LENGTH
  nameWithType: HashSha3_384Algorithm.HASH_LENGTH
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.HashLength
  name: HashLength
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_HashLength
  commentId: P:wan24.Crypto.BC.HashSha3_384Algorithm.HashLength
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.HashLength
  nameWithType: HashSha3_384Algorithm.HashLength
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.HashLength*
  name: HashLength
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_HashLength_
  commentId: Overload:wan24.Crypto.BC.HashSha3_384Algorithm.HashLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.HashLength
  nameWithType: HashSha3_384Algorithm.HashLength
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.HashSha3_384Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.IsPostQuantum
  nameWithType: HashSha3_384Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashSha3_384Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashSha3_384Algorithm.html#wan24_Crypto_BC_HashSha3_384Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.HashSha3_384Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_384Algorithm.IsPostQuantum
  nameWithType: HashSha3_384Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashSha3_512Algorithm
  name: HashSha3_512Algorithm
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html
  commentId: T:wan24.Crypto.BC.HashSha3_512Algorithm
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm
  nameWithType: HashSha3_512Algorithm
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.#ctor
  name: HashSha3_512Algorithm()
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm__ctor
  commentId: M:wan24.Crypto.BC.HashSha3_512Algorithm.#ctor
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.HashSha3_512Algorithm()
  nameWithType: HashSha3_512Algorithm.HashSha3_512Algorithm()
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.#ctor*
  name: HashSha3_512Algorithm
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.HashSha3_512Algorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.HashSha3_512Algorithm
  nameWithType: HashSha3_512Algorithm.HashSha3_512Algorithm
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.HashSha3_512Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.ALGORITHM_NAME
  nameWithType: HashSha3_512Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.HashSha3_512Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.ALGORITHM_VALUE
  nameWithType: HashSha3_512Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.HashSha3_512Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.DISPLAY_NAME
  nameWithType: HashSha3_512Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.HashSha3_512Algorithm.DisplayName
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.DisplayName
  nameWithType: HashSha3_512Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.HashSha3_512Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.DisplayName
  nameWithType: HashSha3_512Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name: GetHashAlgorithmInt(CryptoOptions)
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_GetHashAlgorithmInt_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.HashSha3_512Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  nameWithType: HashSha3_512Algorithm.GetHashAlgorithmInt(CryptoOptions)
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.GetHashAlgorithmInt*
  name: GetHashAlgorithmInt
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_GetHashAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.HashSha3_512Algorithm.GetHashAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.GetHashAlgorithmInt
  nameWithType: HashSha3_512Algorithm.GetHashAlgorithmInt
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.HASH_LENGTH
  name: HASH_LENGTH
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_HASH_LENGTH
  commentId: F:wan24.Crypto.BC.HashSha3_512Algorithm.HASH_LENGTH
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.HASH_LENGTH
  nameWithType: HashSha3_512Algorithm.HASH_LENGTH
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.HashLength
  name: HashLength
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_HashLength
  commentId: P:wan24.Crypto.BC.HashSha3_512Algorithm.HashLength
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.HashLength
  nameWithType: HashSha3_512Algorithm.HashLength
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.HashLength*
  name: HashLength
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_HashLength_
  commentId: Overload:wan24.Crypto.BC.HashSha3_512Algorithm.HashLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.HashLength
  nameWithType: HashSha3_512Algorithm.HashLength
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.HashSha3_512Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.IsPostQuantum
  nameWithType: HashSha3_512Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashSha3_512Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashSha3_512Algorithm.html#wan24_Crypto_BC_HashSha3_512Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.HashSha3_512Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashSha3_512Algorithm.IsPostQuantum
  nameWithType: HashSha3_512Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm
  name: MacHmacSha3_256Algorithm
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html
  commentId: T:wan24.Crypto.BC.MacHmacSha3_256Algorithm
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm
  nameWithType: MacHmacSha3_256Algorithm
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.#ctor
  name: MacHmacSha3_256Algorithm()
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm__ctor
  commentId: M:wan24.Crypto.BC.MacHmacSha3_256Algorithm.#ctor
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.MacHmacSha3_256Algorithm()
  nameWithType: MacHmacSha3_256Algorithm.MacHmacSha3_256Algorithm()
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.#ctor*
  name: MacHmacSha3_256Algorithm
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_256Algorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.MacHmacSha3_256Algorithm
  nameWithType: MacHmacSha3_256Algorithm.MacHmacSha3_256Algorithm
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.MacHmacSha3_256Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.ALGORITHM_NAME
  nameWithType: MacHmacSha3_256Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.MacHmacSha3_256Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.ALGORITHM_VALUE
  nameWithType: MacHmacSha3_256Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.MacHmacSha3_256Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.DISPLAY_NAME
  nameWithType: MacHmacSha3_256Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.MacHmacSha3_256Algorithm.DisplayName
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.DisplayName
  nameWithType: MacHmacSha3_256Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_256Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.DisplayName
  nameWithType: MacHmacSha3_256Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name: GetMacAlgorithmInt(Byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_GetMacAlgorithmInt_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.MacHmacSha3_256Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: GetMacAlgorithmInt(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.GetMacAlgorithmInt(System.Byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.MacHmacSha3_256Algorithm.GetMacAlgorithmInt(System.Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: MacHmacSha3_256Algorithm.GetMacAlgorithmInt(Byte[], CryptoOptions)
  nameWithType.vb: MacHmacSha3_256Algorithm.GetMacAlgorithmInt(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.GetMacAlgorithmInt*
  name: GetMacAlgorithmInt
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_GetMacAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_256Algorithm.GetMacAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.GetMacAlgorithmInt
  nameWithType: MacHmacSha3_256Algorithm.GetMacAlgorithmInt
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.MacHmacSha3_256Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.IsPostQuantum
  nameWithType: MacHmacSha3_256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_256Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.IsPostQuantum
  nameWithType: MacHmacSha3_256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.MAC_LENGTH
  name: MAC_LENGTH
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_MAC_LENGTH
  commentId: F:wan24.Crypto.BC.MacHmacSha3_256Algorithm.MAC_LENGTH
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.MAC_LENGTH
  nameWithType: MacHmacSha3_256Algorithm.MAC_LENGTH
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.MacLength
  name: MacLength
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_MacLength
  commentId: P:wan24.Crypto.BC.MacHmacSha3_256Algorithm.MacLength
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.MacLength
  nameWithType: MacHmacSha3_256Algorithm.MacLength
- uid: wan24.Crypto.BC.MacHmacSha3_256Algorithm.MacLength*
  name: MacLength
  href: api/wan24.Crypto.BC.MacHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacHmacSha3_256Algorithm_MacLength_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_256Algorithm.MacLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_256Algorithm.MacLength
  nameWithType: MacHmacSha3_256Algorithm.MacLength
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm
  name: MacHmacSha3_384Algorithm
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html
  commentId: T:wan24.Crypto.BC.MacHmacSha3_384Algorithm
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm
  nameWithType: MacHmacSha3_384Algorithm
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.#ctor
  name: MacHmacSha3_384Algorithm()
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm__ctor
  commentId: M:wan24.Crypto.BC.MacHmacSha3_384Algorithm.#ctor
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.MacHmacSha3_384Algorithm()
  nameWithType: MacHmacSha3_384Algorithm.MacHmacSha3_384Algorithm()
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.#ctor*
  name: MacHmacSha3_384Algorithm
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_384Algorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.MacHmacSha3_384Algorithm
  nameWithType: MacHmacSha3_384Algorithm.MacHmacSha3_384Algorithm
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.MacHmacSha3_384Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.ALGORITHM_NAME
  nameWithType: MacHmacSha3_384Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.MacHmacSha3_384Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.ALGORITHM_VALUE
  nameWithType: MacHmacSha3_384Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.MacHmacSha3_384Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.DISPLAY_NAME
  nameWithType: MacHmacSha3_384Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.MacHmacSha3_384Algorithm.DisplayName
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.DisplayName
  nameWithType: MacHmacSha3_384Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_384Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.DisplayName
  nameWithType: MacHmacSha3_384Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name: GetMacAlgorithmInt(Byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_GetMacAlgorithmInt_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.MacHmacSha3_384Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: GetMacAlgorithmInt(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.GetMacAlgorithmInt(System.Byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.MacHmacSha3_384Algorithm.GetMacAlgorithmInt(System.Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: MacHmacSha3_384Algorithm.GetMacAlgorithmInt(Byte[], CryptoOptions)
  nameWithType.vb: MacHmacSha3_384Algorithm.GetMacAlgorithmInt(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.GetMacAlgorithmInt*
  name: GetMacAlgorithmInt
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_GetMacAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_384Algorithm.GetMacAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.GetMacAlgorithmInt
  nameWithType: MacHmacSha3_384Algorithm.GetMacAlgorithmInt
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.MacHmacSha3_384Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.IsPostQuantum
  nameWithType: MacHmacSha3_384Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_384Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.IsPostQuantum
  nameWithType: MacHmacSha3_384Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.MAC_LENGTH
  name: MAC_LENGTH
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_MAC_LENGTH
  commentId: F:wan24.Crypto.BC.MacHmacSha3_384Algorithm.MAC_LENGTH
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.MAC_LENGTH
  nameWithType: MacHmacSha3_384Algorithm.MAC_LENGTH
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.MacLength
  name: MacLength
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_MacLength
  commentId: P:wan24.Crypto.BC.MacHmacSha3_384Algorithm.MacLength
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.MacLength
  nameWithType: MacHmacSha3_384Algorithm.MacLength
- uid: wan24.Crypto.BC.MacHmacSha3_384Algorithm.MacLength*
  name: MacLength
  href: api/wan24.Crypto.BC.MacHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacHmacSha3_384Algorithm_MacLength_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_384Algorithm.MacLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_384Algorithm.MacLength
  nameWithType: MacHmacSha3_384Algorithm.MacLength
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm
  name: MacHmacSha3_512Algorithm
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html
  commentId: T:wan24.Crypto.BC.MacHmacSha3_512Algorithm
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm
  nameWithType: MacHmacSha3_512Algorithm
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.#ctor
  name: MacHmacSha3_512Algorithm()
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm__ctor
  commentId: M:wan24.Crypto.BC.MacHmacSha3_512Algorithm.#ctor
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.MacHmacSha3_512Algorithm()
  nameWithType: MacHmacSha3_512Algorithm.MacHmacSha3_512Algorithm()
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.#ctor*
  name: MacHmacSha3_512Algorithm
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_512Algorithm.#ctor
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.MacHmacSha3_512Algorithm
  nameWithType: MacHmacSha3_512Algorithm.MacHmacSha3_512Algorithm
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.MacHmacSha3_512Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.ALGORITHM_NAME
  nameWithType: MacHmacSha3_512Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.MacHmacSha3_512Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.ALGORITHM_VALUE
  nameWithType: MacHmacSha3_512Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.MacHmacSha3_512Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.DISPLAY_NAME
  nameWithType: MacHmacSha3_512Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.MacHmacSha3_512Algorithm.DisplayName
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.DisplayName
  nameWithType: MacHmacSha3_512Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_512Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.DisplayName
  nameWithType: MacHmacSha3_512Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name: GetMacAlgorithmInt(Byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_GetMacAlgorithmInt_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.MacHmacSha3_512Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: GetMacAlgorithmInt(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.GetMacAlgorithmInt(System.Byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.MacHmacSha3_512Algorithm.GetMacAlgorithmInt(System.Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: MacHmacSha3_512Algorithm.GetMacAlgorithmInt(Byte[], CryptoOptions)
  nameWithType.vb: MacHmacSha3_512Algorithm.GetMacAlgorithmInt(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.GetMacAlgorithmInt*
  name: GetMacAlgorithmInt
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_GetMacAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_512Algorithm.GetMacAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.GetMacAlgorithmInt
  nameWithType: MacHmacSha3_512Algorithm.GetMacAlgorithmInt
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.MacHmacSha3_512Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.IsPostQuantum
  nameWithType: MacHmacSha3_512Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_512Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.IsPostQuantum
  nameWithType: MacHmacSha3_512Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.MAC_LENGTH
  name: MAC_LENGTH
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_MAC_LENGTH
  commentId: F:wan24.Crypto.BC.MacHmacSha3_512Algorithm.MAC_LENGTH
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.MAC_LENGTH
  nameWithType: MacHmacSha3_512Algorithm.MAC_LENGTH
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.MacLength
  name: MacLength
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_MacLength
  commentId: P:wan24.Crypto.BC.MacHmacSha3_512Algorithm.MacLength
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.MacLength
  nameWithType: MacHmacSha3_512Algorithm.MacLength
- uid: wan24.Crypto.BC.MacHmacSha3_512Algorithm.MacLength*
  name: MacLength
  href: api/wan24.Crypto.BC.MacHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacHmacSha3_512Algorithm_MacLength_
  commentId: Overload:wan24.Crypto.BC.MacHmacSha3_512Algorithm.MacLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacHmacSha3_512Algorithm.MacLength
  nameWithType: MacHmacSha3_512Algorithm.MacLength
