### YamlMime:XRefMap
sorted: true
references:
- uid: wan24.Crypto.BC
  name: wan24.Crypto.BC
  href: api/wan24.Crypto.BC.html
  commentId: N:wan24.Crypto.BC
  fullName: wan24.Crypto.BC
  nameWithType: wan24.Crypto.BC
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm
  name: AsymmetricBcEcDiffieHellmanAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom,Org.BouncyCastle.Crypto.Parameters.ECDomainParameters,wan24.Crypto.CryptoOptions)
  name: CreateKeyGenParameters(SecureRandom, ECDomainParameters, CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_CreateKeyGenParameters_Org_BouncyCastle_Security_SecureRandom_Org_BouncyCastle_Crypto_Parameters_ECDomainParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom,Org.BouncyCastle.Crypto.Parameters.ECDomainParameters,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom, Org.BouncyCastle.Crypto.Parameters.ECDomainParameters, wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.CreateKeyGenParameters(SecureRandom, ECDomainParameters, CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.CreateKeyGenParameters*
  name: CreateKeyGenParameters
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_CreateKeyGenParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.CreateKeyGenParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.CreateKeyGenParameters
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.CreateKeyGenParameters
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DisplayName
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.DisplayName
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.GetEngineParameters
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanAlgorithm.USAGES
  nameWithType: AsymmetricBcEcDiffieHellmanAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey
  name: AsymmetricBcEcDiffieHellmanPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor
  name: AsymmetricBcEcDiffieHellmanPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.New()
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey()
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricBcEcDiffieHellmanPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  name: AsymmetricBcEcDiffieHellmanPrivateKey(ECPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey__ctor_Org_BouncyCastle_Crypto_Parameters_ECPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  name.vb: New(ECPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.New(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey(ECPrivateKeyParameters)
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.New(ECPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor(System.Byte[])
  name: AsymmetricBcEcDiffieHellmanPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.New(Byte())
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey(byte[])
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor*
  name: AsymmetricBcEcDiffieHellmanPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.New
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.AsymmetricBcEcDiffieHellmanPrivateKey
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(System.Byte[])
  name: DeriveKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_DeriveKey_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(System.Byte[])
  name.vb: DeriveKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(Byte())
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(byte[])
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  name: DeriveKey(IAsymmetricPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_DeriveKey_wan24_Crypto_IAsymmetricPublicKey_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey(IAsymmetricPublicKey)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey*
  name: DeriveKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_DeriveKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.DeriveKey
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.Dispose
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DisposeCore()
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.DisposeCore
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name: GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_GetKeyExchangeData_wan24_Crypto_IAsymmetricPublicKey_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name.vb: GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey?, wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey, wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData*
  name: GetKeyExchangeData
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_GetKeyExchangeData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.GetKeyExchangeData
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  name: GetPublicKey(ECPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_GetPublicKey_Org_BouncyCastle_Crypto_Parameters_ECPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.GetPublicKey(ECPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.GetPublicKey
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey
  name: explicit operator AsymmetricBcEcDiffieHellmanPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.CType(Byte())
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.explicit operator AsymmetricBcEcDiffieHellmanPrivateKey(byte[])
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.CType
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.explicit operator
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey)~wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey
  name: implicit operator AsymmetricBcEcDiffieHellmanPublicKey(AsymmetricBcEcDiffieHellmanPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey__wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey)~wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey
  name.vb: CType(AsymmetricBcEcDiffieHellmanPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey(wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.CType(wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey)
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.implicit operator AsymmetricBcEcDiffieHellmanPublicKey(AsymmetricBcEcDiffieHellmanPrivateKey)
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.CType(AsymmetricBcEcDiffieHellmanPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPrivateKey.CType
  nameWithType: AsymmetricBcEcDiffieHellmanPrivateKey.implicit operator
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey
  name: AsymmetricBcEcDiffieHellmanPublicKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.#ctor
  name: AsymmetricBcEcDiffieHellmanPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.AsymmetricBcEcDiffieHellmanPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.New()
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey.AsymmetricBcEcDiffieHellmanPublicKey()
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters)
  name: AsymmetricBcEcDiffieHellmanPublicKey(ECPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_ECPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters)
  name.vb: New(ECPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.AsymmetricBcEcDiffieHellmanPublicKey(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.New(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters)
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey.AsymmetricBcEcDiffieHellmanPublicKey(ECPublicKeyParameters)
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPublicKey.New(ECPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.#ctor(System.Byte[])
  name: AsymmetricBcEcDiffieHellmanPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.AsymmetricBcEcDiffieHellmanPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.New(Byte())
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey.AsymmetricBcEcDiffieHellmanPublicKey(byte[])
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.#ctor*
  name: AsymmetricBcEcDiffieHellmanPublicKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.AsymmetricBcEcDiffieHellmanPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.New
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey.AsymmetricBcEcDiffieHellmanPublicKey
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.Bits
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.Bits
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey
  name: explicit operator AsymmetricBcEcDiffieHellmanPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.explicit operator wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.CType(Byte())
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey.explicit operator AsymmetricBcEcDiffieHellmanPublicKey(byte[])
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDiffieHellmanPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDiffieHellmanPublicKey.CType
  nameWithType: AsymmetricBcEcDiffieHellmanPublicKey.explicit operator
  nameWithType.vb: AsymmetricBcEcDiffieHellmanPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm
  name: AsymmetricBcEcDsaAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm
  nameWithType: AsymmetricBcEcDsaAlgorithm
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricBcEcDsaAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricBcEcDsaAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom,Org.BouncyCastle.Crypto.Parameters.ECDomainParameters,wan24.Crypto.CryptoOptions)
  name: CreateKeyGenParameters(SecureRandom, ECDomainParameters, CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_CreateKeyGenParameters_Org_BouncyCastle_Security_SecureRandom_Org_BouncyCastle_Crypto_Parameters_ECDomainParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom,Org.BouncyCastle.Crypto.Parameters.ECDomainParameters,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom, Org.BouncyCastle.Crypto.Parameters.ECDomainParameters, wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricBcEcDsaAlgorithm.CreateKeyGenParameters(SecureRandom, ECDomainParameters, CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.CreateKeyGenParameters*
  name: CreateKeyGenParameters
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_CreateKeyGenParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.CreateKeyGenParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.CreateKeyGenParameters
  nameWithType: AsymmetricBcEcDsaAlgorithm.CreateKeyGenParameters
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricBcEcDsaAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricBcEcDsaAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DisplayName
  nameWithType: AsymmetricBcEcDsaAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.DisplayName
  nameWithType: AsymmetricBcEcDsaAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricBcEcDsaAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.GetEngineParameters
  nameWithType: AsymmetricBcEcDsaAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricBcEcDsaAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricBcEcDsaAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricBcEcDsaAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricBcEcDsaAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricBcEcDsaAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.html#wan24_Crypto_BC_AsymmetricBcEcDsaAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaAlgorithm.USAGES
  nameWithType: AsymmetricBcEcDsaAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey
  name: AsymmetricBcEcDsaPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey
  nameWithType: AsymmetricBcEcDsaPrivateKey
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor
  name: AsymmetricBcEcDsaPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.New()
  nameWithType: AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey()
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricBcEcDsaPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  name: AsymmetricBcEcDsaPrivateKey(ECPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey__ctor_Org_BouncyCastle_Crypto_Parameters_ECPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  name.vb: New(ECPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.New(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  nameWithType: AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey(ECPrivateKeyParameters)
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.New(ECPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor(System.Byte[])
  name: AsymmetricBcEcDsaPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.New(Byte())
  nameWithType: AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey(byte[])
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor*
  name: AsymmetricBcEcDsaPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.New
  nameWithType: AsymmetricBcEcDsaPrivateKey.AsymmetricBcEcDsaPrivateKey
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricBcEcDsaPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.Dispose
  nameWithType: AsymmetricBcEcDsaPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.DisposeCore()
  nameWithType: AsymmetricBcEcDsaPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.DisposeCore
  nameWithType: AsymmetricBcEcDsaPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  name: GetPublicKey(ECPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_GetPublicKey_Org_BouncyCastle_Crypto_Parameters_ECPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters)
  nameWithType: AsymmetricBcEcDsaPrivateKey.GetPublicKey(ECPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.GetPublicKey
  nameWithType: AsymmetricBcEcDsaPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.SignHashRaw(System.Byte[])
  name: SignHashRaw(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_SignHashRaw_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.SignHashRaw(System.Byte[])
  name.vb: SignHashRaw(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.SignHashRaw(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.SignHashRaw(Byte())
  nameWithType: AsymmetricBcEcDsaPrivateKey.SignHashRaw(byte[])
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.SignHashRaw(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.SignHashRaw*
  name: SignHashRaw
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_SignHashRaw_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.SignHashRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.SignHashRaw
  nameWithType: AsymmetricBcEcDsaPrivateKey.SignHashRaw
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey
  name: explicit operator AsymmetricBcEcDsaPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.CType(Byte())
  nameWithType: AsymmetricBcEcDsaPrivateKey.explicit operator AsymmetricBcEcDsaPrivateKey(byte[])
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.CType
  nameWithType: AsymmetricBcEcDsaPrivateKey.explicit operator
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey)~wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey
  name: implicit operator AsymmetricBcEcDsaPublicKey(AsymmetricBcEcDsaPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey__wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey)~wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey
  name.vb: CType(AsymmetricBcEcDsaPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey(wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.CType(wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey)
  nameWithType: AsymmetricBcEcDsaPrivateKey.implicit operator AsymmetricBcEcDsaPublicKey(AsymmetricBcEcDsaPrivateKey)
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.CType(AsymmetricBcEcDsaPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPrivateKey.CType
  nameWithType: AsymmetricBcEcDsaPrivateKey.implicit operator
  nameWithType.vb: AsymmetricBcEcDsaPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey
  name: AsymmetricBcEcDsaPublicKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey
  nameWithType: AsymmetricBcEcDsaPublicKey
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.#ctor
  name: AsymmetricBcEcDsaPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.AsymmetricBcEcDsaPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.New()
  nameWithType: AsymmetricBcEcDsaPublicKey.AsymmetricBcEcDsaPublicKey()
  nameWithType.vb: AsymmetricBcEcDsaPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters)
  name: AsymmetricBcEcDsaPublicKey(ECPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_ECPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters)
  name.vb: New(ECPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.AsymmetricBcEcDsaPublicKey(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.New(Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters)
  nameWithType: AsymmetricBcEcDsaPublicKey.AsymmetricBcEcDsaPublicKey(ECPublicKeyParameters)
  nameWithType.vb: AsymmetricBcEcDsaPublicKey.New(ECPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.#ctor(System.Byte[])
  name: AsymmetricBcEcDsaPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.AsymmetricBcEcDsaPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.New(Byte())
  nameWithType: AsymmetricBcEcDsaPublicKey.AsymmetricBcEcDsaPublicKey(byte[])
  nameWithType.vb: AsymmetricBcEcDsaPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.#ctor*
  name: AsymmetricBcEcDsaPublicKey
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.AsymmetricBcEcDsaPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.New
  nameWithType: AsymmetricBcEcDsaPublicKey.AsymmetricBcEcDsaPublicKey
  nameWithType.vb: AsymmetricBcEcDsaPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.Bits
  nameWithType: AsymmetricBcEcDsaPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.Bits
  nameWithType: AsymmetricBcEcDsaPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name: ValidateSignatureInt(SignatureContainer, bool)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey_ValidateSignatureInt_wan24_Crypto_SignatureContainer_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name.vb: ValidateSignatureInt(SignatureContainer, Boolean)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureInt(wan24.Crypto.SignatureContainer, bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureInt(wan24.Crypto.SignatureContainer, Boolean)
  nameWithType: AsymmetricBcEcDsaPublicKey.ValidateSignatureInt(SignatureContainer, bool)
  nameWithType.vb: AsymmetricBcEcDsaPublicKey.ValidateSignatureInt(SignatureContainer, Boolean)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureInt*
  name: ValidateSignatureInt
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey_ValidateSignatureInt_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureInt
  nameWithType: AsymmetricBcEcDsaPublicKey.ValidateSignatureInt
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name: ValidateSignatureRaw(byte[], byte[], bool)
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey_ValidateSignatureRaw_System_Byte___System_Byte___System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name.vb: ValidateSignatureRaw(Byte(), Byte(), Boolean)
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw(byte[], byte[], bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw(Byte(), Byte(), Boolean)
  nameWithType: AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw(byte[], byte[], bool)
  nameWithType.vb: AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw(Byte(), Byte(), Boolean)
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw*
  name: ValidateSignatureRaw
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey_ValidateSignatureRaw_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw
  nameWithType: AsymmetricBcEcDsaPublicKey.ValidateSignatureRaw
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey
  name: explicit operator AsymmetricBcEcDsaPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.explicit operator wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.CType(Byte())
  nameWithType: AsymmetricBcEcDsaPublicKey.explicit operator AsymmetricBcEcDsaPublicKey(byte[])
  nameWithType.vb: AsymmetricBcEcDsaPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.html#wan24_Crypto_BC_AsymmetricBcEcDsaPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBcEcDsaPublicKey.CType
  nameWithType: AsymmetricBcEcDsaPublicKey.explicit operator
  nameWithType.vb: AsymmetricBcEcDsaPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm
  name: AsymmetricBikeAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricBikeAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm
  nameWithType: AsymmetricBikeAlgorithm
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricBikeAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricBikeAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricBikeAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricBikeAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricBikeAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricBikeAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricBikeAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricBikeAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricBikeAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.DisplayName
  nameWithType: AsymmetricBikeAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikeAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.DisplayName
  nameWithType: AsymmetricBikeAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricBikeAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricBikeAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikeAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.GetEngineParameters
  nameWithType: AsymmetricBikeAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricBikeAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricBikeAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikeAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricBikeAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricBikeAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricBikeAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricBikeAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricBikeAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikeAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricBikeAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricBikeAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricBikeAlgorithm.html#wan24_Crypto_BC_AsymmetricBikeAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricBikeAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricBikeAlgorithm.USAGES
  nameWithType: AsymmetricBikeAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricBikeHelper
  name: AsymmetricBikeHelper
  href: api/wan24.Crypto.BC.AsymmetricBikeHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricBikeHelper
  fullName: wan24.Crypto.BC.AsymmetricBikeHelper
  nameWithType: AsymmetricBikeHelper
- uid: wan24.Crypto.BC.AsymmetricBikeHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Bike.BikeParameters)
  name: GetKeySize(BikeParameters)
  href: api/wan24.Crypto.BC.AsymmetricBikeHelper.html#wan24_Crypto_BC_AsymmetricBikeHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Bike_BikeParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBikeHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Bike.BikeParameters)
  fullName: wan24.Crypto.BC.AsymmetricBikeHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Bike.BikeParameters)
  nameWithType: AsymmetricBikeHelper.GetKeySize(BikeParameters)
- uid: wan24.Crypto.BC.AsymmetricBikeHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricBikeHelper.html#wan24_Crypto_BC_AsymmetricBikeHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikeHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikeHelper.GetKeySize
  nameWithType: AsymmetricBikeHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricBikeHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricBikeHelper.html#wan24_Crypto_BC_AsymmetricBikeHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricBikeHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricBikeHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricBikeHelper.GetParameters(Integer)
  nameWithType: AsymmetricBikeHelper.GetParameters(int)
  nameWithType.vb: AsymmetricBikeHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricBikeHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricBikeHelper.html#wan24_Crypto_BC_AsymmetricBikeHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikeHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikeHelper.GetParameters
  nameWithType: AsymmetricBikeHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey
  name: AsymmetricBikePrivateKey
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricBikePrivateKey
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey
  nameWithType: AsymmetricBikePrivateKey
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.#ctor
  name: AsymmetricBikePrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.AsymmetricBikePrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.New()
  nameWithType: AsymmetricBikePrivateKey.AsymmetricBikePrivateKey()
  nameWithType.vb: AsymmetricBikePrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricBikePrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.AsymmetricBikePrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricBikePrivateKey.AsymmetricBikePrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricBikePrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.#ctor(System.Byte[])
  name: AsymmetricBikePrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.AsymmetricBikePrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.New(Byte())
  nameWithType: AsymmetricBikePrivateKey.AsymmetricBikePrivateKey(byte[])
  nameWithType.vb: AsymmetricBikePrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.#ctor*
  name: AsymmetricBikePrivateKey
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.AsymmetricBikePrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.New
  nameWithType: AsymmetricBikePrivateKey.AsymmetricBikePrivateKey
  nameWithType.vb: AsymmetricBikePrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.DeserializeKeyData()
  nameWithType: AsymmetricBikePrivateKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.DeserializeKeyData
  nameWithType: AsymmetricBikePrivateKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricBikePrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricBikePrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.Dispose
  nameWithType: AsymmetricBikePrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.DisposeCore()
  nameWithType: AsymmetricBikePrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.DisposeCore
  nameWithType: AsymmetricBikePrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Bike.BikePrivateKeyParameters)
  name: GetPublicKey(BikePrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_Bike_BikePrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Bike.BikePrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Bike.BikePrivateKeyParameters)
  nameWithType: AsymmetricBikePrivateKey.GetPublicKey(BikePrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.GetPublicKey
  nameWithType: AsymmetricBikePrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricBikePrivateKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricBikePrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricBikePrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.SerializeKeyData()
  nameWithType: AsymmetricBikePrivateKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.SerializeKeyData
  nameWithType: AsymmetricBikePrivateKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBikePrivateKey
  name: explicit operator AsymmetricBikePrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricBikePrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBikePrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.explicit operator wan24.Crypto.BC.AsymmetricBikePrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.CType(Byte())
  nameWithType: AsymmetricBikePrivateKey.explicit operator AsymmetricBikePrivateKey(byte[])
  nameWithType.vb: AsymmetricBikePrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.CType
  nameWithType: AsymmetricBikePrivateKey.explicit operator
  nameWithType.vb: AsymmetricBikePrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricBikePrivateKey)~wan24.Crypto.BC.AsymmetricBikePublicKey
  name: implicit operator AsymmetricBikePublicKey(AsymmetricBikePrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricBikePrivateKey__wan24_Crypto_BC_AsymmetricBikePublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricBikePrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricBikePrivateKey)~wan24.Crypto.BC.AsymmetricBikePublicKey
  name.vb: CType(AsymmetricBikePrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.implicit operator wan24.Crypto.BC.AsymmetricBikePublicKey(wan24.Crypto.BC.AsymmetricBikePrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.CType(wan24.Crypto.BC.AsymmetricBikePrivateKey)
  nameWithType: AsymmetricBikePrivateKey.implicit operator AsymmetricBikePublicKey(AsymmetricBikePrivateKey)
  nameWithType.vb: AsymmetricBikePrivateKey.CType(AsymmetricBikePrivateKey)
- uid: wan24.Crypto.BC.AsymmetricBikePrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricBikePrivateKey.html#wan24_Crypto_BC_AsymmetricBikePrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBikePrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePrivateKey.CType
  nameWithType: AsymmetricBikePrivateKey.implicit operator
  nameWithType.vb: AsymmetricBikePrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey
  name: AsymmetricBikePublicKey
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricBikePublicKey
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey
  nameWithType: AsymmetricBikePublicKey
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.#ctor
  name: AsymmetricBikePublicKey()
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricBikePublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.AsymmetricBikePublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePublicKey.New()
  nameWithType: AsymmetricBikePublicKey.AsymmetricBikePublicKey()
  nameWithType.vb: AsymmetricBikePublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Bike.BikePublicKeyParameters)
  name: AsymmetricBikePublicKey(BikePublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Bike_BikePublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricBikePublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Bike.BikePublicKeyParameters)
  name.vb: New(BikePublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.AsymmetricBikePublicKey(Org.BouncyCastle.Pqc.Crypto.Bike.BikePublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePublicKey.New(Org.BouncyCastle.Pqc.Crypto.Bike.BikePublicKeyParameters)
  nameWithType: AsymmetricBikePublicKey.AsymmetricBikePublicKey(BikePublicKeyParameters)
  nameWithType.vb: AsymmetricBikePublicKey.New(BikePublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.#ctor(System.Byte[])
  name: AsymmetricBikePublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricBikePublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.AsymmetricBikePublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePublicKey.New(Byte())
  nameWithType: AsymmetricBikePublicKey.AsymmetricBikePublicKey(byte[])
  nameWithType.vb: AsymmetricBikePublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.#ctor*
  name: AsymmetricBikePublicKey
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.AsymmetricBikePublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePublicKey.New
  nameWithType: AsymmetricBikePublicKey.AsymmetricBikePublicKey
  nameWithType.vb: AsymmetricBikePublicKey.New
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricBikePublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.Bits
  nameWithType: AsymmetricBikePublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.Bits
  nameWithType: AsymmetricBikePublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricBikePublicKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricBikePublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePublicKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricBikePublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBikePublicKey
  name: explicit operator AsymmetricBikePublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricBikePublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricBikePublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricBikePublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.explicit operator wan24.Crypto.BC.AsymmetricBikePublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePublicKey.CType(Byte())
  nameWithType: AsymmetricBikePublicKey.explicit operator AsymmetricBikePublicKey(byte[])
  nameWithType.vb: AsymmetricBikePublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricBikePublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricBikePublicKey.html#wan24_Crypto_BC_AsymmetricBikePublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricBikePublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricBikePublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricBikePublicKey.CType
  nameWithType: AsymmetricBikePublicKey.explicit operator
  nameWithType.vb: AsymmetricBikePublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm
  name: AsymmetricDilithiumAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm
  nameWithType: AsymmetricDilithiumAlgorithm
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricDilithiumAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricDilithiumAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricDilithiumAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricDilithiumAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  nameWithType: AsymmetricDilithiumAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.DisplayName
  nameWithType: AsymmetricDilithiumAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricDilithiumAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.GetEngineParameters
  nameWithType: AsymmetricDilithiumAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricDilithiumAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricDilithiumAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricDilithiumAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricDilithiumAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricDilithiumAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.html#wan24_Crypto_BC_AsymmetricDilithiumAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricDilithiumAlgorithm.USAGES
  nameWithType: AsymmetricDilithiumAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper
  name: AsymmetricDilithiumHelper
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricDilithiumHelper
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper
  nameWithType: AsymmetricDilithiumHelper
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumParameters)
  name: GetKeySize(DilithiumParameters)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html#wan24_Crypto_BC_AsymmetricDilithiumHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Crystals_Dilithium_DilithiumParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumParameters)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumParameters)
  nameWithType: AsymmetricDilithiumHelper.GetKeySize(DilithiumParameters)
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html#wan24_Crypto_BC_AsymmetricDilithiumHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetKeySize
  nameWithType: AsymmetricDilithiumHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html#wan24_Crypto_BC_AsymmetricDilithiumHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters(Integer)
  nameWithType: AsymmetricDilithiumHelper.GetParameters(int)
  nameWithType.vb: AsymmetricDilithiumHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricDilithiumHelper.html#wan24_Crypto_BC_AsymmetricDilithiumHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumHelper.GetParameters
  nameWithType: AsymmetricDilithiumHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  name: AsymmetricDilithiumPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  nameWithType: AsymmetricDilithiumPrivateKey
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor
  name: AsymmetricDilithiumPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.New()
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey()
  nameWithType.vb: AsymmetricDilithiumPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricDilithiumPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricDilithiumPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPrivateKeyParameters)
  name: AsymmetricDilithiumPrivateKey(DilithiumPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor_Org_BouncyCastle_Pqc_Crypto_Crystals_Dilithium_DilithiumPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPrivateKeyParameters)
  name.vb: New(DilithiumPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.New(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPrivateKeyParameters)
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(DilithiumPrivateKeyParameters)
  nameWithType.vb: AsymmetricDilithiumPrivateKey.New(DilithiumPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(System.Byte[])
  name: AsymmetricDilithiumPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.New(Byte())
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey(byte[])
  nameWithType.vb: AsymmetricDilithiumPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor*
  name: AsymmetricDilithiumPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.New
  nameWithType: AsymmetricDilithiumPrivateKey.AsymmetricDilithiumPrivateKey
  nameWithType.vb: AsymmetricDilithiumPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricDilithiumPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricDilithiumPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.Dispose
  nameWithType: AsymmetricDilithiumPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.DisposeCore()
  nameWithType: AsymmetricDilithiumPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.DisposeCore
  nameWithType: AsymmetricDilithiumPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPrivateKeyParameters)
  name: GetPublicKey(DilithiumPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_Crystals_Dilithium_DilithiumPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPrivateKeyParameters)
  nameWithType: AsymmetricDilithiumPrivateKey.GetPublicKey(DilithiumPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.GetPublicKey
  nameWithType: AsymmetricDilithiumPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  name: explicit operator AsymmetricDilithiumPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricDilithiumPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricDilithiumPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricDilithiumPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.CType(Byte())
  nameWithType: AsymmetricDilithiumPrivateKey.explicit operator AsymmetricDilithiumPrivateKey(byte[])
  nameWithType.vb: AsymmetricDilithiumPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.CType
  nameWithType: AsymmetricDilithiumPrivateKey.explicit operator
  nameWithType.vb: AsymmetricDilithiumPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricDilithiumPrivateKey)~wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name: implicit operator AsymmetricDilithiumPublicKey(AsymmetricDilithiumPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricDilithiumPrivateKey__wan24_Crypto_BC_AsymmetricDilithiumPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricDilithiumPrivateKey)~wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name.vb: CType(AsymmetricDilithiumPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricDilithiumPublicKey(wan24.Crypto.BC.AsymmetricDilithiumPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.CType(wan24.Crypto.BC.AsymmetricDilithiumPrivateKey)
  nameWithType: AsymmetricDilithiumPrivateKey.implicit operator AsymmetricDilithiumPublicKey(AsymmetricDilithiumPrivateKey)
  nameWithType.vb: AsymmetricDilithiumPrivateKey.CType(AsymmetricDilithiumPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.html#wan24_Crypto_BC_AsymmetricDilithiumPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPrivateKey.CType
  nameWithType: AsymmetricDilithiumPrivateKey.implicit operator
  nameWithType.vb: AsymmetricDilithiumPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name: AsymmetricDilithiumPublicKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  nameWithType: AsymmetricDilithiumPublicKey
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor
  name: AsymmetricDilithiumPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.New()
  nameWithType: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey()
  nameWithType.vb: AsymmetricDilithiumPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPublicKeyParameters)
  name: AsymmetricDilithiumPublicKey(DilithiumPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Crystals_Dilithium_DilithiumPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPublicKeyParameters)
  name.vb: New(DilithiumPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.New(Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium.DilithiumPublicKeyParameters)
  nameWithType: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(DilithiumPublicKeyParameters)
  nameWithType.vb: AsymmetricDilithiumPublicKey.New(DilithiumPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor(System.Byte[])
  name: AsymmetricDilithiumPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.New(Byte())
  nameWithType: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey(byte[])
  nameWithType.vb: AsymmetricDilithiumPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor*
  name: AsymmetricDilithiumPublicKey
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.New
  nameWithType: AsymmetricDilithiumPublicKey.AsymmetricDilithiumPublicKey
  nameWithType.vb: AsymmetricDilithiumPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  nameWithType: AsymmetricDilithiumPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.Bits
  nameWithType: AsymmetricDilithiumPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name: explicit operator AsymmetricDilithiumPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricDilithiumPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricDilithiumPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.explicit operator wan24.Crypto.BC.AsymmetricDilithiumPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.CType(Byte())
  nameWithType: AsymmetricDilithiumPublicKey.explicit operator AsymmetricDilithiumPublicKey(byte[])
  nameWithType.vb: AsymmetricDilithiumPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricDilithiumPublicKey.html#wan24_Crypto_BC_AsymmetricDilithiumPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricDilithiumPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricDilithiumPublicKey.CType
  nameWithType: AsymmetricDilithiumPublicKey.explicit operator
  nameWithType.vb: AsymmetricDilithiumPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm
  name: AsymmetricEd25519Algorithm
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricEd25519Algorithm
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm
  nameWithType: AsymmetricEd25519Algorithm
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricEd25519Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.ALGORITHM_NAME
  nameWithType: AsymmetricEd25519Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricEd25519Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricEd25519Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name.vb: CreateKeyPair(CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricEd25519Algorithm.CreateKeyPair(CryptoOptions?)
  nameWithType.vb: AsymmetricEd25519Algorithm.CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519Algorithm.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.CreateKeyPair
  nameWithType: AsymmetricEd25519Algorithm.CreateKeyPair
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricEd25519Algorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricEd25519Algorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricEd25519Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.DISPLAY_NAME
  nameWithType: AsymmetricEd25519Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricEd25519Algorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.DisplayName
  nameWithType: AsymmetricEd25519Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.DisplayName
  nameWithType: AsymmetricEd25519Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricEd25519Algorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519Algorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.GetEngineParameters
  nameWithType: AsymmetricEd25519Algorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricEd25519Algorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricEd25519Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519Algorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricEd25519Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricEd25519Algorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricEd25519Algorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricEd25519Algorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricEd25519Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519Algorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricEd25519Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricEd25519Algorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricEd25519Algorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricEd25519Algorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricEd25519Algorithm.USAGES
  nameWithType: AsymmetricEd25519Algorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey
  name: AsymmetricEd25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricEd25519PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey
  nameWithType: AsymmetricEd25519PrivateKey
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor
  name: AsymmetricEd25519PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.New()
  nameWithType: AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey()
  nameWithType.vb: AsymmetricEd25519PrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricEd25519PrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricEd25519PrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  name: AsymmetricEd25519PrivateKey(Ed25519PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed25519PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  name.vb: New(Ed25519PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.New(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  nameWithType: AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey(Ed25519PrivateKeyParameters)
  nameWithType.vb: AsymmetricEd25519PrivateKey.New(Ed25519PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor(System.Byte[])
  name: AsymmetricEd25519PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.New(Byte())
  nameWithType: AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey(byte[])
  nameWithType.vb: AsymmetricEd25519PrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor*
  name: AsymmetricEd25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.New
  nameWithType: AsymmetricEd25519PrivateKey.AsymmetricEd25519PrivateKey
  nameWithType.vb: AsymmetricEd25519PrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CreateXEd25519PrivateKey
  name: CreateXEd25519PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_CreateXEd25519PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CreateXEd25519PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CreateXEd25519PrivateKey()
  nameWithType: AsymmetricEd25519PrivateKey.CreateXEd25519PrivateKey()
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CreateXEd25519PrivateKey*
  name: CreateXEd25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_CreateXEd25519PrivateKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CreateXEd25519PrivateKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CreateXEd25519PrivateKey
  nameWithType: AsymmetricEd25519PrivateKey.CreateXEd25519PrivateKey
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricEd25519PrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricEd25519PrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.Dispose
  nameWithType: AsymmetricEd25519PrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.DisposeCore()
  nameWithType: AsymmetricEd25519PrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.DisposeCore
  nameWithType: AsymmetricEd25519PrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  name: GetPublicKey(Ed25519PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_GetPublicKey_Org_BouncyCastle_Crypto_Parameters_Ed25519PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  nameWithType: AsymmetricEd25519PrivateKey.GetPublicKey(Ed25519PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.GetPublicKey
  nameWithType: AsymmetricEd25519PrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricEd25519PrivateKey
  name: explicit operator AsymmetricEd25519PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricEd25519PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricEd25519PrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.explicit operator wan24.Crypto.BC.AsymmetricEd25519PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CType(Byte())
  nameWithType: AsymmetricEd25519PrivateKey.explicit operator AsymmetricEd25519PrivateKey(byte[])
  nameWithType.vb: AsymmetricEd25519PrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CType
  nameWithType: AsymmetricEd25519PrivateKey.explicit operator
  nameWithType.vb: AsymmetricEd25519PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricEd25519PrivateKey)~wan24.Crypto.BC.AsymmetricEd25519PublicKey
  name: implicit operator AsymmetricEd25519PublicKey(AsymmetricEd25519PrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricEd25519PrivateKey__wan24_Crypto_BC_AsymmetricEd25519PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricEd25519PrivateKey)~wan24.Crypto.BC.AsymmetricEd25519PublicKey
  name.vb: CType(AsymmetricEd25519PrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.implicit operator wan24.Crypto.BC.AsymmetricEd25519PublicKey(wan24.Crypto.BC.AsymmetricEd25519PrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CType(wan24.Crypto.BC.AsymmetricEd25519PrivateKey)
  nameWithType: AsymmetricEd25519PrivateKey.implicit operator AsymmetricEd25519PublicKey(AsymmetricEd25519PrivateKey)
  nameWithType.vb: AsymmetricEd25519PrivateKey.CType(AsymmetricEd25519PrivateKey)
- uid: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricEd25519PrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PrivateKey.CType
  nameWithType: AsymmetricEd25519PrivateKey.implicit operator
  nameWithType.vb: AsymmetricEd25519PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey
  name: AsymmetricEd25519PublicKey
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricEd25519PublicKey
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey
  nameWithType: AsymmetricEd25519PublicKey
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey.#ctor
  name: AsymmetricEd25519PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricEd25519PublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey.AsymmetricEd25519PublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PublicKey.New()
  nameWithType: AsymmetricEd25519PublicKey.AsymmetricEd25519PublicKey()
  nameWithType.vb: AsymmetricEd25519PublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters)
  name: AsymmetricEd25519PublicKey(Ed25519PublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricEd25519PublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed25519PublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters)
  name.vb: New(Ed25519PublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey.AsymmetricEd25519PublicKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PublicKey.New(Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters)
  nameWithType: AsymmetricEd25519PublicKey.AsymmetricEd25519PublicKey(Ed25519PublicKeyParameters)
  nameWithType.vb: AsymmetricEd25519PublicKey.New(Ed25519PublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey.#ctor(System.Byte[])
  name: AsymmetricEd25519PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricEd25519PublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey.AsymmetricEd25519PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PublicKey.New(Byte())
  nameWithType: AsymmetricEd25519PublicKey.AsymmetricEd25519PublicKey(byte[])
  nameWithType.vb: AsymmetricEd25519PublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey.#ctor*
  name: AsymmetricEd25519PublicKey
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricEd25519PublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey.AsymmetricEd25519PublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PublicKey.New
  nameWithType: AsymmetricEd25519PublicKey.AsymmetricEd25519PublicKey
  nameWithType.vb: AsymmetricEd25519PublicKey.New
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricEd25519PublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricEd25519PublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey.Bits
  nameWithType: AsymmetricEd25519PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricEd25519PublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey.Bits
  nameWithType: AsymmetricEd25519PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricEd25519PublicKey
  name: explicit operator AsymmetricEd25519PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricEd25519PublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricEd25519PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricEd25519PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricEd25519PublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey.explicit operator wan24.Crypto.BC.AsymmetricEd25519PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PublicKey.CType(Byte())
  nameWithType: AsymmetricEd25519PublicKey.explicit operator AsymmetricEd25519PublicKey(byte[])
  nameWithType.vb: AsymmetricEd25519PublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricEd25519PublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricEd25519PublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd25519PublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricEd25519PublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricEd25519PublicKey.CType
  nameWithType: AsymmetricEd25519PublicKey.explicit operator
  nameWithType.vb: AsymmetricEd25519PublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm
  name: AsymmetricEd448Algorithm
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricEd448Algorithm
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm
  nameWithType: AsymmetricEd448Algorithm
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricEd448Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.ALGORITHM_NAME
  nameWithType: AsymmetricEd448Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricEd448Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricEd448Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricEd448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name.vb: CreateKeyPair(CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricEd448Algorithm.CreateKeyPair(CryptoOptions?)
  nameWithType.vb: AsymmetricEd448Algorithm.CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448Algorithm.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.CreateKeyPair
  nameWithType: AsymmetricEd448Algorithm.CreateKeyPair
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricEd448Algorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricEd448Algorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricEd448Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.DISPLAY_NAME
  nameWithType: AsymmetricEd448Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricEd448Algorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.DisplayName
  nameWithType: AsymmetricEd448Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.DisplayName
  nameWithType: AsymmetricEd448Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricEd448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricEd448Algorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448Algorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.GetEngineParameters
  nameWithType: AsymmetricEd448Algorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricEd448Algorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricEd448Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448Algorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricEd448Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricEd448Algorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricEd448Algorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricEd448Algorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricEd448Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448Algorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricEd448Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricEd448Algorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricEd448Algorithm.html#wan24_Crypto_BC_AsymmetricEd448Algorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricEd448Algorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricEd448Algorithm.USAGES
  nameWithType: AsymmetricEd448Algorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey
  name: AsymmetricEd448PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricEd448PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey
  nameWithType: AsymmetricEd448PrivateKey
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor
  name: AsymmetricEd448PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.New()
  nameWithType: AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey()
  nameWithType.vb: AsymmetricEd448PrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricEd448PrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricEd448PrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  name: AsymmetricEd448PrivateKey(Ed448PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed448PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  name.vb: New(Ed448PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.New(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  nameWithType: AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey(Ed448PrivateKeyParameters)
  nameWithType.vb: AsymmetricEd448PrivateKey.New(Ed448PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor(System.Byte[])
  name: AsymmetricEd448PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.New(Byte())
  nameWithType: AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey(byte[])
  nameWithType.vb: AsymmetricEd448PrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor*
  name: AsymmetricEd448PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.New
  nameWithType: AsymmetricEd448PrivateKey.AsymmetricEd448PrivateKey
  nameWithType.vb: AsymmetricEd448PrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricEd448PrivateKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Bits
  nameWithType: AsymmetricEd448PrivateKey.Bits
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PrivateKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Bits
  nameWithType: AsymmetricEd448PrivateKey.Bits
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.CreateXEd448PrivateKey
  name: CreateXEd448PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_CreateXEd448PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.CreateXEd448PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.CreateXEd448PrivateKey()
  nameWithType: AsymmetricEd448PrivateKey.CreateXEd448PrivateKey()
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.CreateXEd448PrivateKey*
  name: CreateXEd448PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_CreateXEd448PrivateKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PrivateKey.CreateXEd448PrivateKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.CreateXEd448PrivateKey
  nameWithType: AsymmetricEd448PrivateKey.CreateXEd448PrivateKey
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricEd448PrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricEd448PrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.Dispose
  nameWithType: AsymmetricEd448PrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.DisposeCore()
  nameWithType: AsymmetricEd448PrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.DisposeCore
  nameWithType: AsymmetricEd448PrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  name: GetPublicKey(Ed448PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_GetPublicKey_Org_BouncyCastle_Crypto_Parameters_Ed448PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  nameWithType: AsymmetricEd448PrivateKey.GetPublicKey(Ed448PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.GetPublicKey
  nameWithType: AsymmetricEd448PrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricEd448PrivateKey
  name: explicit operator AsymmetricEd448PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricEd448PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricEd448PrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.explicit operator wan24.Crypto.BC.AsymmetricEd448PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.CType(Byte())
  nameWithType: AsymmetricEd448PrivateKey.explicit operator AsymmetricEd448PrivateKey(byte[])
  nameWithType.vb: AsymmetricEd448PrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.CType
  nameWithType: AsymmetricEd448PrivateKey.explicit operator
  nameWithType.vb: AsymmetricEd448PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricEd448PrivateKey)~wan24.Crypto.BC.AsymmetricEd448PublicKey
  name: implicit operator AsymmetricEd448PublicKey(AsymmetricEd448PrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricEd448PrivateKey__wan24_Crypto_BC_AsymmetricEd448PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricEd448PrivateKey)~wan24.Crypto.BC.AsymmetricEd448PublicKey
  name.vb: CType(AsymmetricEd448PrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.implicit operator wan24.Crypto.BC.AsymmetricEd448PublicKey(wan24.Crypto.BC.AsymmetricEd448PrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.CType(wan24.Crypto.BC.AsymmetricEd448PrivateKey)
  nameWithType: AsymmetricEd448PrivateKey.implicit operator AsymmetricEd448PublicKey(AsymmetricEd448PrivateKey)
  nameWithType.vb: AsymmetricEd448PrivateKey.CType(AsymmetricEd448PrivateKey)
- uid: wan24.Crypto.BC.AsymmetricEd448PrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricEd448PrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricEd448PrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PrivateKey.CType
  nameWithType: AsymmetricEd448PrivateKey.implicit operator
  nameWithType.vb: AsymmetricEd448PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey
  name: AsymmetricEd448PublicKey
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricEd448PublicKey
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey
  nameWithType: AsymmetricEd448PublicKey
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey.#ctor
  name: AsymmetricEd448PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html#wan24_Crypto_BC_AsymmetricEd448PublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey.AsymmetricEd448PublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PublicKey.New()
  nameWithType: AsymmetricEd448PublicKey.AsymmetricEd448PublicKey()
  nameWithType.vb: AsymmetricEd448PublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters)
  name: AsymmetricEd448PublicKey(Ed448PublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html#wan24_Crypto_BC_AsymmetricEd448PublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed448PublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters)
  name.vb: New(Ed448PublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey.AsymmetricEd448PublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PublicKey.New(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters)
  nameWithType: AsymmetricEd448PublicKey.AsymmetricEd448PublicKey(Ed448PublicKeyParameters)
  nameWithType.vb: AsymmetricEd448PublicKey.New(Ed448PublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey.#ctor(System.Byte[])
  name: AsymmetricEd448PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html#wan24_Crypto_BC_AsymmetricEd448PublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey.AsymmetricEd448PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PublicKey.New(Byte())
  nameWithType: AsymmetricEd448PublicKey.AsymmetricEd448PublicKey(byte[])
  nameWithType.vb: AsymmetricEd448PublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey.#ctor*
  name: AsymmetricEd448PublicKey
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html#wan24_Crypto_BC_AsymmetricEd448PublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey.AsymmetricEd448PublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PublicKey.New
  nameWithType: AsymmetricEd448PublicKey.AsymmetricEd448PublicKey
  nameWithType.vb: AsymmetricEd448PublicKey.New
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html#wan24_Crypto_BC_AsymmetricEd448PublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricEd448PublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey.Bits
  nameWithType: AsymmetricEd448PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html#wan24_Crypto_BC_AsymmetricEd448PublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey.Bits
  nameWithType: AsymmetricEd448PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricEd448PublicKey
  name: explicit operator AsymmetricEd448PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html#wan24_Crypto_BC_AsymmetricEd448PublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricEd448PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricEd448PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricEd448PublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey.explicit operator wan24.Crypto.BC.AsymmetricEd448PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PublicKey.CType(Byte())
  nameWithType: AsymmetricEd448PublicKey.explicit operator AsymmetricEd448PublicKey(byte[])
  nameWithType.vb: AsymmetricEd448PublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricEd448PublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricEd448PublicKey.html#wan24_Crypto_BC_AsymmetricEd448PublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricEd448PublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricEd448PublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricEd448PublicKey.CType
  nameWithType: AsymmetricEd448PublicKey.explicit operator
  nameWithType.vb: AsymmetricEd448PublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm
  name: AsymmetricFalconAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricFalconAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm
  nameWithType: AsymmetricFalconAlgorithm
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricFalconAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricFalconAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricFalconAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricFalconAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  nameWithType: AsymmetricFalconAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.DisplayName
  nameWithType: AsymmetricFalconAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricFalconAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.GetEngineParameters
  nameWithType: AsymmetricFalconAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricFalconAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricFalconAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricFalconAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricFalconAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricFalconAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricFalconAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricFalconAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricFalconAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricFalconAlgorithm.html#wan24_Crypto_BC_AsymmetricFalconAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricFalconAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricFalconAlgorithm.USAGES
  nameWithType: AsymmetricFalconAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricFalconHelper
  name: AsymmetricFalconHelper
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricFalconHelper
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper
  nameWithType: AsymmetricFalconHelper
- uid: wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconParameters)
  name: GetKeySize(FalconParameters)
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html#wan24_Crypto_BC_AsymmetricFalconHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Falcon_FalconParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconParameters)
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconParameters)
  nameWithType: AsymmetricFalconHelper.GetKeySize(FalconParameters)
- uid: wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html#wan24_Crypto_BC_AsymmetricFalconHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper.GetKeySize
  nameWithType: AsymmetricFalconHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html#wan24_Crypto_BC_AsymmetricFalconHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters(Integer)
  nameWithType: AsymmetricFalconHelper.GetParameters(int)
  nameWithType.vb: AsymmetricFalconHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricFalconHelper.html#wan24_Crypto_BC_AsymmetricFalconHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconHelper.GetParameters
  nameWithType: AsymmetricFalconHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey
  name: AsymmetricFalconPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricFalconPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey
  nameWithType: AsymmetricFalconPrivateKey
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor
  name: AsymmetricFalconPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.New()
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey()
  nameWithType.vb: AsymmetricFalconPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricFalconPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricFalconPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPrivateKeyParameters)
  name: AsymmetricFalconPrivateKey(FalconPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor_Org_BouncyCastle_Pqc_Crypto_Falcon_FalconPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPrivateKeyParameters)
  name.vb: New(FalconPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.New(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPrivateKeyParameters)
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(FalconPrivateKeyParameters)
  nameWithType.vb: AsymmetricFalconPrivateKey.New(FalconPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(System.Byte[])
  name: AsymmetricFalconPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.New(Byte())
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey(byte[])
  nameWithType.vb: AsymmetricFalconPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor*
  name: AsymmetricFalconPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.New
  nameWithType: AsymmetricFalconPrivateKey.AsymmetricFalconPrivateKey
  nameWithType.vb: AsymmetricFalconPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricFalconPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricFalconPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.Dispose
  nameWithType: AsymmetricFalconPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.DisposeCore()
  nameWithType: AsymmetricFalconPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.DisposeCore
  nameWithType: AsymmetricFalconPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPrivateKeyParameters)
  name: GetPublicKey(FalconPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_Falcon_FalconPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPrivateKeyParameters)
  nameWithType: AsymmetricFalconPrivateKey.GetPublicKey(FalconPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.GetPublicKey
  nameWithType: AsymmetricFalconPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFalconPrivateKey
  name: explicit operator AsymmetricFalconPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricFalconPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFalconPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricFalconPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.CType(Byte())
  nameWithType: AsymmetricFalconPrivateKey.explicit operator AsymmetricFalconPrivateKey(byte[])
  nameWithType.vb: AsymmetricFalconPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.CType
  nameWithType: AsymmetricFalconPrivateKey.explicit operator
  nameWithType.vb: AsymmetricFalconPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricFalconPrivateKey)~wan24.Crypto.BC.AsymmetricFalconPublicKey
  name: implicit operator AsymmetricFalconPublicKey(AsymmetricFalconPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricFalconPrivateKey__wan24_Crypto_BC_AsymmetricFalconPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricFalconPrivateKey)~wan24.Crypto.BC.AsymmetricFalconPublicKey
  name.vb: CType(AsymmetricFalconPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricFalconPublicKey(wan24.Crypto.BC.AsymmetricFalconPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.CType(wan24.Crypto.BC.AsymmetricFalconPrivateKey)
  nameWithType: AsymmetricFalconPrivateKey.implicit operator AsymmetricFalconPublicKey(AsymmetricFalconPrivateKey)
  nameWithType.vb: AsymmetricFalconPrivateKey.CType(AsymmetricFalconPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricFalconPrivateKey.html#wan24_Crypto_BC_AsymmetricFalconPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricFalconPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPrivateKey.CType
  nameWithType: AsymmetricFalconPrivateKey.implicit operator
  nameWithType.vb: AsymmetricFalconPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey
  name: AsymmetricFalconPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricFalconPublicKey
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey
  nameWithType: AsymmetricFalconPublicKey
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor
  name: AsymmetricFalconPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.New()
  nameWithType: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey()
  nameWithType.vb: AsymmetricFalconPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPublicKeyParameters)
  name: AsymmetricFalconPublicKey(FalconPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Falcon_FalconPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPublicKeyParameters)
  name.vb: New(FalconPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.New(Org.BouncyCastle.Pqc.Crypto.Falcon.FalconPublicKeyParameters)
  nameWithType: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(FalconPublicKeyParameters)
  nameWithType.vb: AsymmetricFalconPublicKey.New(FalconPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor(System.Byte[])
  name: AsymmetricFalconPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.New(Byte())
  nameWithType: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey(byte[])
  nameWithType.vb: AsymmetricFalconPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor*
  name: AsymmetricFalconPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.AsymmetricFalconPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.New
  nameWithType: AsymmetricFalconPublicKey.AsymmetricFalconPublicKey
  nameWithType.vb: AsymmetricFalconPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  nameWithType: AsymmetricFalconPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.Bits
  nameWithType: AsymmetricFalconPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFalconPublicKey
  name: explicit operator AsymmetricFalconPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricFalconPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricFalconPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFalconPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.explicit operator wan24.Crypto.BC.AsymmetricFalconPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.CType(Byte())
  nameWithType: AsymmetricFalconPublicKey.explicit operator AsymmetricFalconPublicKey(byte[])
  nameWithType.vb: AsymmetricFalconPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricFalconPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricFalconPublicKey.html#wan24_Crypto_BC_AsymmetricFalconPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFalconPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricFalconPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricFalconPublicKey.CType
  nameWithType: AsymmetricFalconPublicKey.explicit operator
  nameWithType.vb: AsymmetricFalconPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm
  name: AsymmetricFrodoKemAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm
  nameWithType: AsymmetricFrodoKemAlgorithm
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricFrodoKemAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricFrodoKemAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricFrodoKemAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricFrodoKemAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  nameWithType: AsymmetricFrodoKemAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.DisplayName
  nameWithType: AsymmetricFrodoKemAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricFrodoKemAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.GetEngineParameters
  nameWithType: AsymmetricFrodoKemAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricFrodoKemAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricFrodoKemAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricFrodoKemAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricFrodoKemAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricFrodoKemAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.html#wan24_Crypto_BC_AsymmetricFrodoKemAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemAlgorithm.USAGES
  nameWithType: AsymmetricFrodoKemAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper
  name: AsymmetricFrodoKemHelper
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricFrodoKemHelper
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper
  nameWithType: AsymmetricFrodoKemHelper
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoParameters)
  name: GetKeySize(FrodoParameters)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html#wan24_Crypto_BC_AsymmetricFrodoKemHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Frodo_FrodoParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoParameters)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoParameters)
  nameWithType: AsymmetricFrodoKemHelper.GetKeySize(FrodoParameters)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html#wan24_Crypto_BC_AsymmetricFrodoKemHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetKeySize
  nameWithType: AsymmetricFrodoKemHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html#wan24_Crypto_BC_AsymmetricFrodoKemHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters(Integer)
  nameWithType: AsymmetricFrodoKemHelper.GetParameters(int)
  nameWithType.vb: AsymmetricFrodoKemHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemHelper.html#wan24_Crypto_BC_AsymmetricFrodoKemHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemHelper.GetParameters
  nameWithType: AsymmetricFrodoKemHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  name: AsymmetricFrodoKemPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  nameWithType: AsymmetricFrodoKemPrivateKey
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor
  name: AsymmetricFrodoKemPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.New()
  nameWithType: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey()
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricFrodoKemPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor(System.Byte[])
  name: AsymmetricFrodoKemPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.New(Byte())
  nameWithType: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey(byte[])
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor*
  name: AsymmetricFrodoKemPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.New
  nameWithType: AsymmetricFrodoKemPrivateKey.AsymmetricFrodoKemPrivateKey
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DeserializeKeyData()
  nameWithType: AsymmetricFrodoKemPrivateKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DeserializeKeyData
  nameWithType: AsymmetricFrodoKemPrivateKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricFrodoKemPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.Dispose
  nameWithType: AsymmetricFrodoKemPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DisposeCore()
  nameWithType: AsymmetricFrodoKemPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.DisposeCore
  nameWithType: AsymmetricFrodoKemPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPrivateKeyParameters)
  name: GetPublicKey(FrodoPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_Frodo_FrodoPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPrivateKeyParameters)
  nameWithType: AsymmetricFrodoKemPrivateKey.GetPublicKey(FrodoPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.GetPublicKey
  nameWithType: AsymmetricFrodoKemPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricFrodoKemPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricFrodoKemPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.SerializeKeyData()
  nameWithType: AsymmetricFrodoKemPrivateKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.SerializeKeyData
  nameWithType: AsymmetricFrodoKemPrivateKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  name: explicit operator AsymmetricFrodoKemPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.CType(Byte())
  nameWithType: AsymmetricFrodoKemPrivateKey.explicit operator AsymmetricFrodoKemPrivateKey(byte[])
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.CType
  nameWithType: AsymmetricFrodoKemPrivateKey.explicit operator
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey)~wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name: implicit operator AsymmetricFrodoKemPublicKey(AsymmetricFrodoKemPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey__wan24_Crypto_BC_AsymmetricFrodoKemPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey)~wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name.vb: CType(AsymmetricFrodoKemPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricFrodoKemPublicKey(wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.CType(wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey)
  nameWithType: AsymmetricFrodoKemPrivateKey.implicit operator AsymmetricFrodoKemPublicKey(AsymmetricFrodoKemPrivateKey)
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.CType(AsymmetricFrodoKemPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPrivateKey.CType
  nameWithType: AsymmetricFrodoKemPrivateKey.implicit operator
  nameWithType.vb: AsymmetricFrodoKemPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name: AsymmetricFrodoKemPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  nameWithType: AsymmetricFrodoKemPublicKey
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor
  name: AsymmetricFrodoKemPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.New()
  nameWithType: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey()
  nameWithType.vb: AsymmetricFrodoKemPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPublicKeyParameters)
  name: AsymmetricFrodoKemPublicKey(FrodoPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Frodo_FrodoPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPublicKeyParameters)
  name.vb: New(FrodoPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.New(Org.BouncyCastle.Pqc.Crypto.Frodo.FrodoPublicKeyParameters)
  nameWithType: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(FrodoPublicKeyParameters)
  nameWithType.vb: AsymmetricFrodoKemPublicKey.New(FrodoPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor(System.Byte[])
  name: AsymmetricFrodoKemPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.New(Byte())
  nameWithType: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey(byte[])
  nameWithType.vb: AsymmetricFrodoKemPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor*
  name: AsymmetricFrodoKemPublicKey
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.New
  nameWithType: AsymmetricFrodoKemPublicKey.AsymmetricFrodoKemPublicKey
  nameWithType.vb: AsymmetricFrodoKemPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  nameWithType: AsymmetricFrodoKemPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.Bits
  nameWithType: AsymmetricFrodoKemPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricFrodoKemPublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricFrodoKemPublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name: explicit operator AsymmetricFrodoKemPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricFrodoKemPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricFrodoKemPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.explicit operator wan24.Crypto.BC.AsymmetricFrodoKemPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.CType(Byte())
  nameWithType: AsymmetricFrodoKemPublicKey.explicit operator AsymmetricFrodoKemPublicKey(byte[])
  nameWithType.vb: AsymmetricFrodoKemPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.html#wan24_Crypto_BC_AsymmetricFrodoKemPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricFrodoKemPublicKey.CType
  nameWithType: AsymmetricFrodoKemPublicKey.explicit operator
  nameWithType.vb: AsymmetricFrodoKemPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm
  name: AsymmetricHqcAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricHqcAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm
  nameWithType: AsymmetricHqcAlgorithm
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricHqcAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricHqcAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricHqcAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricHqcAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricHqcAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricHqcAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricHqcAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricHqcAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricHqcAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.DisplayName
  nameWithType: AsymmetricHqcAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.DisplayName
  nameWithType: AsymmetricHqcAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricHqcAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricHqcAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.GetEngineParameters
  nameWithType: AsymmetricHqcAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricHqcAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricHqcAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricHqcAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricHqcAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricHqcAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricHqcAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricHqcAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricHqcAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricHqcAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricHqcAlgorithm.html#wan24_Crypto_BC_AsymmetricHqcAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricHqcAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricHqcAlgorithm.USAGES
  nameWithType: AsymmetricHqcAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricHqcHelper
  name: AsymmetricHqcHelper
  href: api/wan24.Crypto.BC.AsymmetricHqcHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricHqcHelper
  fullName: wan24.Crypto.BC.AsymmetricHqcHelper
  nameWithType: AsymmetricHqcHelper
- uid: wan24.Crypto.BC.AsymmetricHqcHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcParameters)
  name: GetKeySize(HqcParameters)
  href: api/wan24.Crypto.BC.AsymmetricHqcHelper.html#wan24_Crypto_BC_AsymmetricHqcHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Hqc_HqcParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricHqcHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcParameters)
  fullName: wan24.Crypto.BC.AsymmetricHqcHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcParameters)
  nameWithType: AsymmetricHqcHelper.GetKeySize(HqcParameters)
- uid: wan24.Crypto.BC.AsymmetricHqcHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricHqcHelper.html#wan24_Crypto_BC_AsymmetricHqcHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcHelper.GetKeySize
  nameWithType: AsymmetricHqcHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricHqcHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricHqcHelper.html#wan24_Crypto_BC_AsymmetricHqcHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricHqcHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricHqcHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcHelper.GetParameters(Integer)
  nameWithType: AsymmetricHqcHelper.GetParameters(int)
  nameWithType.vb: AsymmetricHqcHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricHqcHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricHqcHelper.html#wan24_Crypto_BC_AsymmetricHqcHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcHelper.GetParameters
  nameWithType: AsymmetricHqcHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey
  name: AsymmetricHqcPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricHqcPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey
  nameWithType: AsymmetricHqcPrivateKey
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.#ctor
  name: AsymmetricHqcPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.AsymmetricHqcPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.New()
  nameWithType: AsymmetricHqcPrivateKey.AsymmetricHqcPrivateKey()
  nameWithType.vb: AsymmetricHqcPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricHqcPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.AsymmetricHqcPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricHqcPrivateKey.AsymmetricHqcPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricHqcPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.#ctor(System.Byte[])
  name: AsymmetricHqcPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.AsymmetricHqcPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.New(Byte())
  nameWithType: AsymmetricHqcPrivateKey.AsymmetricHqcPrivateKey(byte[])
  nameWithType.vb: AsymmetricHqcPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.#ctor*
  name: AsymmetricHqcPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.AsymmetricHqcPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.New
  nameWithType: AsymmetricHqcPrivateKey.AsymmetricHqcPrivateKey
  nameWithType.vb: AsymmetricHqcPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.DeserializeKeyData()
  nameWithType: AsymmetricHqcPrivateKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.DeserializeKeyData
  nameWithType: AsymmetricHqcPrivateKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricHqcPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricHqcPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.Dispose
  nameWithType: AsymmetricHqcPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.DisposeCore()
  nameWithType: AsymmetricHqcPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.DisposeCore
  nameWithType: AsymmetricHqcPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcPrivateKeyParameters)
  name: GetPublicKey(HqcPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_Hqc_HqcPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcPrivateKeyParameters)
  nameWithType: AsymmetricHqcPrivateKey.GetPublicKey(HqcPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.GetPublicKey
  nameWithType: AsymmetricHqcPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricHqcPrivateKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricHqcPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricHqcPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.SerializeKeyData()
  nameWithType: AsymmetricHqcPrivateKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.SerializeKeyData
  nameWithType: AsymmetricHqcPrivateKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricHqcPrivateKey
  name: explicit operator AsymmetricHqcPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricHqcPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricHqcPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricHqcPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.CType(Byte())
  nameWithType: AsymmetricHqcPrivateKey.explicit operator AsymmetricHqcPrivateKey(byte[])
  nameWithType.vb: AsymmetricHqcPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.CType
  nameWithType: AsymmetricHqcPrivateKey.explicit operator
  nameWithType.vb: AsymmetricHqcPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricHqcPrivateKey)~wan24.Crypto.BC.AsymmetricHqcPublicKey
  name: implicit operator AsymmetricHqcPublicKey(AsymmetricHqcPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricHqcPrivateKey__wan24_Crypto_BC_AsymmetricHqcPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricHqcPrivateKey)~wan24.Crypto.BC.AsymmetricHqcPublicKey
  name.vb: CType(AsymmetricHqcPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricHqcPublicKey(wan24.Crypto.BC.AsymmetricHqcPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.CType(wan24.Crypto.BC.AsymmetricHqcPrivateKey)
  nameWithType: AsymmetricHqcPrivateKey.implicit operator AsymmetricHqcPublicKey(AsymmetricHqcPrivateKey)
  nameWithType.vb: AsymmetricHqcPrivateKey.CType(AsymmetricHqcPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricHqcPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricHqcPrivateKey.html#wan24_Crypto_BC_AsymmetricHqcPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricHqcPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPrivateKey.CType
  nameWithType: AsymmetricHqcPrivateKey.implicit operator
  nameWithType.vb: AsymmetricHqcPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey
  name: AsymmetricHqcPublicKey
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricHqcPublicKey
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey
  nameWithType: AsymmetricHqcPublicKey
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.#ctor
  name: AsymmetricHqcPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.AsymmetricHqcPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPublicKey.New()
  nameWithType: AsymmetricHqcPublicKey.AsymmetricHqcPublicKey()
  nameWithType.vb: AsymmetricHqcPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcPublicKeyParameters)
  name: AsymmetricHqcPublicKey(HqcPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Hqc_HqcPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcPublicKeyParameters)
  name.vb: New(HqcPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.AsymmetricHqcPublicKey(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPublicKey.New(Org.BouncyCastle.Pqc.Crypto.Hqc.HqcPublicKeyParameters)
  nameWithType: AsymmetricHqcPublicKey.AsymmetricHqcPublicKey(HqcPublicKeyParameters)
  nameWithType.vb: AsymmetricHqcPublicKey.New(HqcPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.#ctor(System.Byte[])
  name: AsymmetricHqcPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.AsymmetricHqcPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPublicKey.New(Byte())
  nameWithType: AsymmetricHqcPublicKey.AsymmetricHqcPublicKey(byte[])
  nameWithType.vb: AsymmetricHqcPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.#ctor*
  name: AsymmetricHqcPublicKey
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.AsymmetricHqcPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPublicKey.New
  nameWithType: AsymmetricHqcPublicKey.AsymmetricHqcPublicKey
  nameWithType.vb: AsymmetricHqcPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricHqcPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.Bits
  nameWithType: AsymmetricHqcPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.Bits
  nameWithType: AsymmetricHqcPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricHqcPublicKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricHqcPublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPublicKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricHqcPublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricHqcPublicKey
  name: explicit operator AsymmetricHqcPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricHqcPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricHqcPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricHqcPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.explicit operator wan24.Crypto.BC.AsymmetricHqcPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPublicKey.CType(Byte())
  nameWithType: AsymmetricHqcPublicKey.explicit operator AsymmetricHqcPublicKey(byte[])
  nameWithType.vb: AsymmetricHqcPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricHqcPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricHqcPublicKey.html#wan24_Crypto_BC_AsymmetricHqcPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricHqcPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricHqcPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricHqcPublicKey.CType
  nameWithType: AsymmetricHqcPublicKey.explicit operator
  nameWithType.vb: AsymmetricHqcPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm
  name: AsymmetricKyberAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricKyberAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm
  nameWithType: AsymmetricKyberAlgorithm
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricKyberAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricKyberAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricKyberAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricKyberAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  nameWithType: AsymmetricKyberAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.DisplayName
  nameWithType: AsymmetricKyberAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricKyberAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.GetEngineParameters
  nameWithType: AsymmetricKyberAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricKyberAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricKyberAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricKyberAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricKyberAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricKyberAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricKyberAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricKyberAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricKyberAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricKyberAlgorithm.html#wan24_Crypto_BC_AsymmetricKyberAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricKyberAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricKyberAlgorithm.USAGES
  nameWithType: AsymmetricKyberAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricKyberHelper
  name: AsymmetricKyberHelper
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricKyberHelper
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper
  nameWithType: AsymmetricKyberHelper
- uid: wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberParameters)
  name: GetKeySize(KyberParameters)
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html#wan24_Crypto_BC_AsymmetricKyberHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Crystals_Kyber_KyberParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberParameters)
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberParameters)
  nameWithType: AsymmetricKyberHelper.GetKeySize(KyberParameters)
- uid: wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html#wan24_Crypto_BC_AsymmetricKyberHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper.GetKeySize
  nameWithType: AsymmetricKyberHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html#wan24_Crypto_BC_AsymmetricKyberHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters(Integer)
  nameWithType: AsymmetricKyberHelper.GetParameters(int)
  nameWithType.vb: AsymmetricKyberHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricKyberHelper.html#wan24_Crypto_BC_AsymmetricKyberHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberHelper.GetParameters
  nameWithType: AsymmetricKyberHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey
  name: AsymmetricKyberPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricKyberPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey
  nameWithType: AsymmetricKyberPrivateKey
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor
  name: AsymmetricKyberPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.New()
  nameWithType: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey()
  nameWithType.vb: AsymmetricKyberPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricKyberPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricKyberPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor(System.Byte[])
  name: AsymmetricKyberPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.New(Byte())
  nameWithType: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey(byte[])
  nameWithType.vb: AsymmetricKyberPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor*
  name: AsymmetricKyberPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.New
  nameWithType: AsymmetricKyberPrivateKey.AsymmetricKyberPrivateKey
  nameWithType.vb: AsymmetricKyberPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.DeserializeKeyData()
  nameWithType: AsymmetricKyberPrivateKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.DeserializeKeyData
  nameWithType: AsymmetricKyberPrivateKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricKyberPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricKyberPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.Dispose
  nameWithType: AsymmetricKyberPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.DisposeCore()
  nameWithType: AsymmetricKyberPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.DisposeCore
  nameWithType: AsymmetricKyberPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPrivateKeyParameters)
  name: GetPublicKey(KyberPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_Crystals_Kyber_KyberPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPrivateKeyParameters)
  nameWithType: AsymmetricKyberPrivateKey.GetPublicKey(KyberPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.GetPublicKey
  nameWithType: AsymmetricKyberPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricKyberPrivateKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricKyberPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricKyberPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.SerializeKeyData()
  nameWithType: AsymmetricKyberPrivateKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.SerializeKeyData
  nameWithType: AsymmetricKyberPrivateKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricKyberPrivateKey
  name: explicit operator AsymmetricKyberPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricKyberPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricKyberPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricKyberPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.CType(Byte())
  nameWithType: AsymmetricKyberPrivateKey.explicit operator AsymmetricKyberPrivateKey(byte[])
  nameWithType.vb: AsymmetricKyberPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.CType
  nameWithType: AsymmetricKyberPrivateKey.explicit operator
  nameWithType.vb: AsymmetricKyberPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricKyberPrivateKey)~wan24.Crypto.BC.AsymmetricKyberPublicKey
  name: implicit operator AsymmetricKyberPublicKey(AsymmetricKyberPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricKyberPrivateKey__wan24_Crypto_BC_AsymmetricKyberPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricKyberPrivateKey)~wan24.Crypto.BC.AsymmetricKyberPublicKey
  name.vb: CType(AsymmetricKyberPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricKyberPublicKey(wan24.Crypto.BC.AsymmetricKyberPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.CType(wan24.Crypto.BC.AsymmetricKyberPrivateKey)
  nameWithType: AsymmetricKyberPrivateKey.implicit operator AsymmetricKyberPublicKey(AsymmetricKyberPrivateKey)
  nameWithType.vb: AsymmetricKyberPrivateKey.CType(AsymmetricKyberPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricKyberPrivateKey.html#wan24_Crypto_BC_AsymmetricKyberPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricKyberPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPrivateKey.CType
  nameWithType: AsymmetricKyberPrivateKey.implicit operator
  nameWithType.vb: AsymmetricKyberPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey
  name: AsymmetricKyberPublicKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricKyberPublicKey
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey
  nameWithType: AsymmetricKyberPublicKey
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor
  name: AsymmetricKyberPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.New()
  nameWithType: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey()
  nameWithType.vb: AsymmetricKyberPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPublicKeyParameters)
  name: AsymmetricKyberPublicKey(KyberPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Crystals_Kyber_KyberPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPublicKeyParameters)
  name.vb: New(KyberPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.New(Org.BouncyCastle.Pqc.Crypto.Crystals.Kyber.KyberPublicKeyParameters)
  nameWithType: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(KyberPublicKeyParameters)
  nameWithType.vb: AsymmetricKyberPublicKey.New(KyberPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor(System.Byte[])
  name: AsymmetricKyberPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.New(Byte())
  nameWithType: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey(byte[])
  nameWithType.vb: AsymmetricKyberPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor*
  name: AsymmetricKyberPublicKey
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.AsymmetricKyberPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.New
  nameWithType: AsymmetricKyberPublicKey.AsymmetricKyberPublicKey
  nameWithType.vb: AsymmetricKyberPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  nameWithType: AsymmetricKyberPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.Bits
  nameWithType: AsymmetricKyberPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricKyberPublicKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricKyberPublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPublicKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricKyberPublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricKyberPublicKey
  name: explicit operator AsymmetricKyberPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricKyberPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricKyberPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricKyberPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.explicit operator wan24.Crypto.BC.AsymmetricKyberPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.CType(Byte())
  nameWithType: AsymmetricKyberPublicKey.explicit operator AsymmetricKyberPublicKey(byte[])
  nameWithType.vb: AsymmetricKyberPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricKyberPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricKyberPublicKey.html#wan24_Crypto_BC_AsymmetricKyberPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricKyberPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricKyberPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricKyberPublicKey.CType
  nameWithType: AsymmetricKyberPublicKey.explicit operator
  nameWithType.vb: AsymmetricKyberPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm
  name: AsymmetricNtruEncryptAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm
  nameWithType: AsymmetricNtruEncryptAlgorithm
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricNtruEncryptAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricNtruEncryptAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricNtruEncryptAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricNtruEncryptAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DisplayName
  nameWithType: AsymmetricNtruEncryptAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.DisplayName
  nameWithType: AsymmetricNtruEncryptAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricNtruEncryptAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.GetEngineParameters
  nameWithType: AsymmetricNtruEncryptAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricNtruEncryptAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricNtruEncryptAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricNtruEncryptAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricNtruEncryptAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricNtruEncryptAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.html#wan24_Crypto_BC_AsymmetricNtruEncryptAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptAlgorithm.USAGES
  nameWithType: AsymmetricNtruEncryptAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey
  name: AsymmetricNtruEncryptPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey
  nameWithType: AsymmetricNtruEncryptPrivateKey
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.#ctor
  name: AsymmetricNtruEncryptPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.AsymmetricNtruEncryptPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.New()
  nameWithType: AsymmetricNtruEncryptPrivateKey.AsymmetricNtruEncryptPrivateKey()
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricNtruEncryptPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.AsymmetricNtruEncryptPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricNtruEncryptPrivateKey.AsymmetricNtruEncryptPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.#ctor(System.Byte[])
  name: AsymmetricNtruEncryptPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.AsymmetricNtruEncryptPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.New(Byte())
  nameWithType: AsymmetricNtruEncryptPrivateKey.AsymmetricNtruEncryptPrivateKey(byte[])
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.#ctor*
  name: AsymmetricNtruEncryptPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.AsymmetricNtruEncryptPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.New
  nameWithType: AsymmetricNtruEncryptPrivateKey.AsymmetricNtruEncryptPrivateKey
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DeserializeKeyData()
  nameWithType: AsymmetricNtruEncryptPrivateKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DeserializeKeyData
  nameWithType: AsymmetricNtruEncryptPrivateKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricNtruEncryptPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.Dispose
  nameWithType: AsymmetricNtruEncryptPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DisposeCore()
  nameWithType: AsymmetricNtruEncryptPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.DisposeCore
  nameWithType: AsymmetricNtruEncryptPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruPrivateKeyParameters)
  name: GetPublicKey(NtruPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_Ntru_NtruPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruPrivateKeyParameters)
  nameWithType: AsymmetricNtruEncryptPrivateKey.GetPublicKey(NtruPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.GetPublicKey
  nameWithType: AsymmetricNtruEncryptPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricNtruEncryptPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricNtruEncryptPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.SerializeKeyData()
  nameWithType: AsymmetricNtruEncryptPrivateKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.SerializeKeyData
  nameWithType: AsymmetricNtruEncryptPrivateKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey
  name: explicit operator AsymmetricNtruEncryptPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.CType(Byte())
  nameWithType: AsymmetricNtruEncryptPrivateKey.explicit operator AsymmetricNtruEncryptPrivateKey(byte[])
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.CType
  nameWithType: AsymmetricNtruEncryptPrivateKey.explicit operator
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey)~wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey
  name: implicit operator AsymmetricNtruEncryptPublicKey(AsymmetricNtruEncryptPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey__wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey)~wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey
  name.vb: CType(AsymmetricNtruEncryptPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey(wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.CType(wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey)
  nameWithType: AsymmetricNtruEncryptPrivateKey.implicit operator AsymmetricNtruEncryptPublicKey(AsymmetricNtruEncryptPrivateKey)
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.CType(AsymmetricNtruEncryptPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPrivateKey.CType
  nameWithType: AsymmetricNtruEncryptPrivateKey.implicit operator
  nameWithType.vb: AsymmetricNtruEncryptPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey
  name: AsymmetricNtruEncryptPublicKey
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey
  nameWithType: AsymmetricNtruEncryptPublicKey
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.#ctor
  name: AsymmetricNtruEncryptPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.AsymmetricNtruEncryptPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.New()
  nameWithType: AsymmetricNtruEncryptPublicKey.AsymmetricNtruEncryptPublicKey()
  nameWithType.vb: AsymmetricNtruEncryptPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruPublicKeyParameters)
  name: AsymmetricNtruEncryptPublicKey(NtruPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Ntru_NtruPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruPublicKeyParameters)
  name.vb: New(NtruPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.AsymmetricNtruEncryptPublicKey(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.New(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruPublicKeyParameters)
  nameWithType: AsymmetricNtruEncryptPublicKey.AsymmetricNtruEncryptPublicKey(NtruPublicKeyParameters)
  nameWithType.vb: AsymmetricNtruEncryptPublicKey.New(NtruPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.#ctor(System.Byte[])
  name: AsymmetricNtruEncryptPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.AsymmetricNtruEncryptPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.New(Byte())
  nameWithType: AsymmetricNtruEncryptPublicKey.AsymmetricNtruEncryptPublicKey(byte[])
  nameWithType.vb: AsymmetricNtruEncryptPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.#ctor*
  name: AsymmetricNtruEncryptPublicKey
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.AsymmetricNtruEncryptPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.New
  nameWithType: AsymmetricNtruEncryptPublicKey.AsymmetricNtruEncryptPublicKey
  nameWithType.vb: AsymmetricNtruEncryptPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.Bits
  nameWithType: AsymmetricNtruEncryptPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.Bits
  nameWithType: AsymmetricNtruEncryptPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.DeserializeKeyData()
  nameWithType: AsymmetricNtruEncryptPublicKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.DeserializeKeyData
  nameWithType: AsymmetricNtruEncryptPublicKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricNtruEncryptPublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricNtruEncryptPublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.SerializeKeyData()
  nameWithType: AsymmetricNtruEncryptPublicKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.SerializeKeyData
  nameWithType: AsymmetricNtruEncryptPublicKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey
  name: explicit operator AsymmetricNtruEncryptPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.explicit operator wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.CType(Byte())
  nameWithType: AsymmetricNtruEncryptPublicKey.explicit operator AsymmetricNtruEncryptPublicKey(byte[])
  nameWithType.vb: AsymmetricNtruEncryptPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.html#wan24_Crypto_BC_AsymmetricNtruEncryptPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruEncryptPublicKey.CType
  nameWithType: AsymmetricNtruEncryptPublicKey.explicit operator
  nameWithType.vb: AsymmetricNtruEncryptPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricNtruHelper
  name: AsymmetricNtruHelper
  href: api/wan24.Crypto.BC.AsymmetricNtruHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricNtruHelper
  fullName: wan24.Crypto.BC.AsymmetricNtruHelper
  nameWithType: AsymmetricNtruHelper
- uid: wan24.Crypto.BC.AsymmetricNtruHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruParameters)
  name: GetKeySize(NtruParameters)
  href: api/wan24.Crypto.BC.AsymmetricNtruHelper.html#wan24_Crypto_BC_AsymmetricNtruHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Ntru_NtruParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricNtruHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruParameters)
  fullName: wan24.Crypto.BC.AsymmetricNtruHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Ntru.NtruParameters)
  nameWithType: AsymmetricNtruHelper.GetKeySize(NtruParameters)
- uid: wan24.Crypto.BC.AsymmetricNtruHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricNtruHelper.html#wan24_Crypto_BC_AsymmetricNtruHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruHelper.GetKeySize
  nameWithType: AsymmetricNtruHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricNtruHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricNtruHelper.html#wan24_Crypto_BC_AsymmetricNtruHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricNtruHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricNtruHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricNtruHelper.GetParameters(Integer)
  nameWithType: AsymmetricNtruHelper.GetParameters(int)
  nameWithType.vb: AsymmetricNtruHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricNtruHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricNtruHelper.html#wan24_Crypto_BC_AsymmetricNtruHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricNtruHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricNtruHelper.GetParameters
  nameWithType: AsymmetricNtruHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm
  name: AsymmetricPicnicAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricPicnicAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm
  nameWithType: AsymmetricPicnicAlgorithm
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricPicnicAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricPicnicAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricPicnicAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricPicnicAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DisplayName
  nameWithType: AsymmetricPicnicAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.DisplayName
  nameWithType: AsymmetricPicnicAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricPicnicAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.GetEngineParameters
  nameWithType: AsymmetricPicnicAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricPicnicAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricPicnicAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricPicnicAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricPicnicAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricPicnicAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricPicnicAlgorithm.html#wan24_Crypto_BC_AsymmetricPicnicAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricPicnicAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricPicnicAlgorithm.USAGES
  nameWithType: AsymmetricPicnicAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricPicnicHelper
  name: AsymmetricPicnicHelper
  href: api/wan24.Crypto.BC.AsymmetricPicnicHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricPicnicHelper
  fullName: wan24.Crypto.BC.AsymmetricPicnicHelper
  nameWithType: AsymmetricPicnicHelper
- uid: wan24.Crypto.BC.AsymmetricPicnicHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicParameters)
  name: GetKeySize(PicnicParameters)
  href: api/wan24.Crypto.BC.AsymmetricPicnicHelper.html#wan24_Crypto_BC_AsymmetricPicnicHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_Picnic_PicnicParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicParameters)
  fullName: wan24.Crypto.BC.AsymmetricPicnicHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicParameters)
  nameWithType: AsymmetricPicnicHelper.GetKeySize(PicnicParameters)
- uid: wan24.Crypto.BC.AsymmetricPicnicHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricPicnicHelper.html#wan24_Crypto_BC_AsymmetricPicnicHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicHelper.GetKeySize
  nameWithType: AsymmetricPicnicHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricPicnicHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricPicnicHelper.html#wan24_Crypto_BC_AsymmetricPicnicHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricPicnicHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicHelper.GetParameters(Integer)
  nameWithType: AsymmetricPicnicHelper.GetParameters(int)
  nameWithType.vb: AsymmetricPicnicHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricPicnicHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricPicnicHelper.html#wan24_Crypto_BC_AsymmetricPicnicHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicHelper.GetParameters
  nameWithType: AsymmetricPicnicHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey
  name: AsymmetricPicnicPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricPicnicPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey
  nameWithType: AsymmetricPicnicPrivateKey
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.#ctor
  name: AsymmetricPicnicPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.AsymmetricPicnicPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.New()
  nameWithType: AsymmetricPicnicPrivateKey.AsymmetricPicnicPrivateKey()
  nameWithType.vb: AsymmetricPicnicPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricPicnicPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.AsymmetricPicnicPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricPicnicPrivateKey.AsymmetricPicnicPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricPicnicPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.#ctor(System.Byte[])
  name: AsymmetricPicnicPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.AsymmetricPicnicPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.New(Byte())
  nameWithType: AsymmetricPicnicPrivateKey.AsymmetricPicnicPrivateKey(byte[])
  nameWithType.vb: AsymmetricPicnicPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.#ctor*
  name: AsymmetricPicnicPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.AsymmetricPicnicPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.New
  nameWithType: AsymmetricPicnicPrivateKey.AsymmetricPicnicPrivateKey
  nameWithType.vb: AsymmetricPicnicPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DeserializeKeyData()
  nameWithType: AsymmetricPicnicPrivateKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DeserializeKeyData
  nameWithType: AsymmetricPicnicPrivateKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricPicnicPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricPicnicPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.Dispose
  nameWithType: AsymmetricPicnicPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DisposeCore()
  nameWithType: AsymmetricPicnicPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.DisposeCore
  nameWithType: AsymmetricPicnicPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicPrivateKeyParameters)
  name: GetPublicKey(PicnicPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_Picnic_PicnicPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicPrivateKeyParameters)
  nameWithType: AsymmetricPicnicPrivateKey.GetPublicKey(PicnicPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.GetPublicKey
  nameWithType: AsymmetricPicnicPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricPicnicPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricPicnicPrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.SerializeKeyData()
  nameWithType: AsymmetricPicnicPrivateKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.SerializeKeyData
  nameWithType: AsymmetricPicnicPrivateKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricPicnicPrivateKey
  name: explicit operator AsymmetricPicnicPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricPicnicPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricPicnicPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricPicnicPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.CType(Byte())
  nameWithType: AsymmetricPicnicPrivateKey.explicit operator AsymmetricPicnicPrivateKey(byte[])
  nameWithType.vb: AsymmetricPicnicPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.CType
  nameWithType: AsymmetricPicnicPrivateKey.explicit operator
  nameWithType.vb: AsymmetricPicnicPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricPicnicPrivateKey)~wan24.Crypto.BC.AsymmetricPicnicPublicKey
  name: implicit operator AsymmetricPicnicPublicKey(AsymmetricPicnicPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricPicnicPrivateKey__wan24_Crypto_BC_AsymmetricPicnicPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricPicnicPrivateKey)~wan24.Crypto.BC.AsymmetricPicnicPublicKey
  name.vb: CType(AsymmetricPicnicPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricPicnicPublicKey(wan24.Crypto.BC.AsymmetricPicnicPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.CType(wan24.Crypto.BC.AsymmetricPicnicPrivateKey)
  nameWithType: AsymmetricPicnicPrivateKey.implicit operator AsymmetricPicnicPublicKey(AsymmetricPicnicPrivateKey)
  nameWithType.vb: AsymmetricPicnicPrivateKey.CType(AsymmetricPicnicPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricPicnicPrivateKey.html#wan24_Crypto_BC_AsymmetricPicnicPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPrivateKey.CType
  nameWithType: AsymmetricPicnicPrivateKey.implicit operator
  nameWithType.vb: AsymmetricPicnicPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey
  name: AsymmetricPicnicPublicKey
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricPicnicPublicKey
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey
  nameWithType: AsymmetricPicnicPublicKey
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey.#ctor
  name: AsymmetricPicnicPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html#wan24_Crypto_BC_AsymmetricPicnicPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey.AsymmetricPicnicPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPublicKey.New()
  nameWithType: AsymmetricPicnicPublicKey.AsymmetricPicnicPublicKey()
  nameWithType.vb: AsymmetricPicnicPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicPublicKeyParameters)
  name: AsymmetricPicnicPublicKey(PicnicPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html#wan24_Crypto_BC_AsymmetricPicnicPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_Picnic_PicnicPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicPublicKeyParameters)
  name.vb: New(PicnicPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey.AsymmetricPicnicPublicKey(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPublicKey.New(Org.BouncyCastle.Pqc.Crypto.Picnic.PicnicPublicKeyParameters)
  nameWithType: AsymmetricPicnicPublicKey.AsymmetricPicnicPublicKey(PicnicPublicKeyParameters)
  nameWithType.vb: AsymmetricPicnicPublicKey.New(PicnicPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey.#ctor(System.Byte[])
  name: AsymmetricPicnicPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html#wan24_Crypto_BC_AsymmetricPicnicPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey.AsymmetricPicnicPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPublicKey.New(Byte())
  nameWithType: AsymmetricPicnicPublicKey.AsymmetricPicnicPublicKey(byte[])
  nameWithType.vb: AsymmetricPicnicPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey.#ctor*
  name: AsymmetricPicnicPublicKey
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html#wan24_Crypto_BC_AsymmetricPicnicPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey.AsymmetricPicnicPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPublicKey.New
  nameWithType: AsymmetricPicnicPublicKey.AsymmetricPicnicPublicKey
  nameWithType.vb: AsymmetricPicnicPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html#wan24_Crypto_BC_AsymmetricPicnicPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricPicnicPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey.Bits
  nameWithType: AsymmetricPicnicPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html#wan24_Crypto_BC_AsymmetricPicnicPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey.Bits
  nameWithType: AsymmetricPicnicPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricPicnicPublicKey
  name: explicit operator AsymmetricPicnicPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html#wan24_Crypto_BC_AsymmetricPicnicPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricPicnicPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricPicnicPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricPicnicPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey.explicit operator wan24.Crypto.BC.AsymmetricPicnicPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPublicKey.CType(Byte())
  nameWithType: AsymmetricPicnicPublicKey.explicit operator AsymmetricPicnicPublicKey(byte[])
  nameWithType.vb: AsymmetricPicnicPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricPicnicPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricPicnicPublicKey.html#wan24_Crypto_BC_AsymmetricPicnicPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricPicnicPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricPicnicPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricPicnicPublicKey.CType
  nameWithType: AsymmetricPicnicPublicKey.explicit operator
  nameWithType.vb: AsymmetricPicnicPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm
  name: AsymmetricSNtruPrimeAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm
  nameWithType: AsymmetricSNtruPrimeAlgorithm
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricSNtruPrimeAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricSNtruPrimeAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name.vb: CreateKeyPair(CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.CreateKeyPair(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricSNtruPrimeAlgorithm.CreateKeyPair(CryptoOptions?)
  nameWithType.vb: AsymmetricSNtruPrimeAlgorithm.CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.CreateKeyPair
  nameWithType: AsymmetricSNtruPrimeAlgorithm.CreateKeyPair
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricSNtruPrimeAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricSNtruPrimeAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DisplayName
  nameWithType: AsymmetricSNtruPrimeAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.DisplayName
  nameWithType: AsymmetricSNtruPrimeAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricSNtruPrimeAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.GetEngineParameters
  nameWithType: AsymmetricSNtruPrimeAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricSNtruPrimeAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricSNtruPrimeAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricSNtruPrimeAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricSNtruPrimeAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricSNtruPrimeAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.html#wan24_Crypto_BC_AsymmetricSNtruPrimeAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeAlgorithm.USAGES
  nameWithType: AsymmetricSNtruPrimeAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper
  name: AsymmetricSNtruPrimeHelper
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricSNtruPrimeHelper
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper
  nameWithType: AsymmetricSNtruPrimeHelper
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimeParameters)
  name: GetKeySize(SNtruPrimeParameters)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.html#wan24_Crypto_BC_AsymmetricSNtruPrimeHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_NtruPrime_SNtruPrimeParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimeParameters)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimeParameters)
  nameWithType: AsymmetricSNtruPrimeHelper.GetKeySize(SNtruPrimeParameters)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.html#wan24_Crypto_BC_AsymmetricSNtruPrimeHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetKeySize
  nameWithType: AsymmetricSNtruPrimeHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.html#wan24_Crypto_BC_AsymmetricSNtruPrimeHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetParameters(Integer)
  nameWithType: AsymmetricSNtruPrimeHelper.GetParameters(int)
  nameWithType.vb: AsymmetricSNtruPrimeHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.html#wan24_Crypto_BC_AsymmetricSNtruPrimeHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimeHelper.GetParameters
  nameWithType: AsymmetricSNtruPrimeHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey
  name: AsymmetricSNtruPrimePrivateKey
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey
  nameWithType: AsymmetricSNtruPrimePrivateKey
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.#ctor
  name: AsymmetricSNtruPrimePrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.AsymmetricSNtruPrimePrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.New()
  nameWithType: AsymmetricSNtruPrimePrivateKey.AsymmetricSNtruPrimePrivateKey()
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricSNtruPrimePrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.AsymmetricSNtruPrimePrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricSNtruPrimePrivateKey.AsymmetricSNtruPrimePrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.#ctor(System.Byte[])
  name: AsymmetricSNtruPrimePrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.AsymmetricSNtruPrimePrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.New(Byte())
  nameWithType: AsymmetricSNtruPrimePrivateKey.AsymmetricSNtruPrimePrivateKey(byte[])
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.#ctor*
  name: AsymmetricSNtruPrimePrivateKey
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.AsymmetricSNtruPrimePrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.New
  nameWithType: AsymmetricSNtruPrimePrivateKey.AsymmetricSNtruPrimePrivateKey
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DeserializeKeyData()
  nameWithType: AsymmetricSNtruPrimePrivateKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DeserializeKeyData
  nameWithType: AsymmetricSNtruPrimePrivateKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricSNtruPrimePrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.Dispose
  nameWithType: AsymmetricSNtruPrimePrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DisposeCore()
  nameWithType: AsymmetricSNtruPrimePrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.DisposeCore
  nameWithType: AsymmetricSNtruPrimePrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimePrivateKeyParameters)
  name: GetPublicKey(SNtruPrimePrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_NtruPrime_SNtruPrimePrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimePrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimePrivateKeyParameters)
  nameWithType: AsymmetricSNtruPrimePrivateKey.GetPublicKey(SNtruPrimePrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.GetPublicKey
  nameWithType: AsymmetricSNtruPrimePrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricSNtruPrimePrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.IsBcImportExportImplemented
  nameWithType: AsymmetricSNtruPrimePrivateKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.SerializeKeyData()
  nameWithType: AsymmetricSNtruPrimePrivateKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.SerializeKeyData
  nameWithType: AsymmetricSNtruPrimePrivateKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey
  name: explicit operator AsymmetricSNtruPrimePrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.explicit operator wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.CType(Byte())
  nameWithType: AsymmetricSNtruPrimePrivateKey.explicit operator AsymmetricSNtruPrimePrivateKey(byte[])
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.CType
  nameWithType: AsymmetricSNtruPrimePrivateKey.explicit operator
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey)~wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey
  name: implicit operator AsymmetricSNtruPrimePublicKey(AsymmetricSNtruPrimePrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey__wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey)~wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey
  name.vb: CType(AsymmetricSNtruPrimePrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.implicit operator wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey(wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.CType(wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey)
  nameWithType: AsymmetricSNtruPrimePrivateKey.implicit operator AsymmetricSNtruPrimePublicKey(AsymmetricSNtruPrimePrivateKey)
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.CType(AsymmetricSNtruPrimePrivateKey)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePrivateKey.CType
  nameWithType: AsymmetricSNtruPrimePrivateKey.implicit operator
  nameWithType.vb: AsymmetricSNtruPrimePrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey
  name: AsymmetricSNtruPrimePublicKey
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey
  nameWithType: AsymmetricSNtruPrimePublicKey
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.#ctor
  name: AsymmetricSNtruPrimePublicKey()
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.AsymmetricSNtruPrimePublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.New()
  nameWithType: AsymmetricSNtruPrimePublicKey.AsymmetricSNtruPrimePublicKey()
  nameWithType.vb: AsymmetricSNtruPrimePublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimePublicKeyParameters)
  name: AsymmetricSNtruPrimePublicKey(SNtruPrimePublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_NtruPrime_SNtruPrimePublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimePublicKeyParameters)
  name.vb: New(SNtruPrimePublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.AsymmetricSNtruPrimePublicKey(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimePublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.New(Org.BouncyCastle.Pqc.Crypto.NtruPrime.SNtruPrimePublicKeyParameters)
  nameWithType: AsymmetricSNtruPrimePublicKey.AsymmetricSNtruPrimePublicKey(SNtruPrimePublicKeyParameters)
  nameWithType.vb: AsymmetricSNtruPrimePublicKey.New(SNtruPrimePublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.#ctor(System.Byte[])
  name: AsymmetricSNtruPrimePublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.AsymmetricSNtruPrimePublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.New(Byte())
  nameWithType: AsymmetricSNtruPrimePublicKey.AsymmetricSNtruPrimePublicKey(byte[])
  nameWithType.vb: AsymmetricSNtruPrimePublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.#ctor*
  name: AsymmetricSNtruPrimePublicKey
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.AsymmetricSNtruPrimePublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.New
  nameWithType: AsymmetricSNtruPrimePublicKey.AsymmetricSNtruPrimePublicKey
  nameWithType.vb: AsymmetricSNtruPrimePublicKey.New
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.Bits
  nameWithType: AsymmetricSNtruPrimePublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.Bits
  nameWithType: AsymmetricSNtruPrimePublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.DeserializeKeyData()
  nameWithType: AsymmetricSNtruPrimePublicKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.DeserializeKeyData
  nameWithType: AsymmetricSNtruPrimePublicKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricSNtruPrimePublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricSNtruPrimePublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.SerializeKeyData()
  nameWithType: AsymmetricSNtruPrimePublicKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.SerializeKeyData
  nameWithType: AsymmetricSNtruPrimePublicKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey
  name: explicit operator AsymmetricSNtruPrimePublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.explicit operator wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.CType(Byte())
  nameWithType: AsymmetricSNtruPrimePublicKey.explicit operator AsymmetricSNtruPrimePublicKey(byte[])
  nameWithType.vb: AsymmetricSNtruPrimePublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.html#wan24_Crypto_BC_AsymmetricSNtruPrimePublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricSNtruPrimePublicKey.CType
  nameWithType: AsymmetricSNtruPrimePublicKey.explicit operator
  nameWithType.vb: AsymmetricSNtruPrimePublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm
  name: AsymmetricSphincsPlusAlgorithm
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm
  nameWithType: AsymmetricSphincsPlusAlgorithm
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_NAME
  nameWithType: AsymmetricSphincsPlusAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricSphincsPlusAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricSphincsPlusAlgorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DISPLAY_NAME
  nameWithType: AsymmetricSphincsPlusAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  nameWithType: AsymmetricSphincsPlusAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.DisplayName
  nameWithType: AsymmetricSphincsPlusAlgorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricSphincsPlusAlgorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.GetEngineParameters
  nameWithType: AsymmetricSphincsPlusAlgorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricSphincsPlusAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricSphincsPlusAlgorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricSphincsPlusAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricSphincsPlusAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.MaxKeyUsageCount
  nameWithType: AsymmetricSphincsPlusAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.html#wan24_Crypto_BC_AsymmetricSphincsPlusAlgorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusAlgorithm.USAGES
  nameWithType: AsymmetricSphincsPlusAlgorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper
  name: AsymmetricSphincsPlusHelper
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html
  commentId: T:wan24.Crypto.BC.AsymmetricSphincsPlusHelper
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper
  nameWithType: AsymmetricSphincsPlusHelper
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusParameters)
  name: GetKeySize(SphincsPlusParameters)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html#wan24_Crypto_BC_AsymmetricSphincsPlusHelper_GetKeySize_Org_BouncyCastle_Pqc_Crypto_SphincsPlus_SphincsPlusParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusParameters)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusParameters)
  nameWithType: AsymmetricSphincsPlusHelper.GetKeySize(SphincsPlusParameters)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html#wan24_Crypto_BC_AsymmetricSphincsPlusHelper_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetKeySize
  nameWithType: AsymmetricSphincsPlusHelper.GetKeySize
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters(System.Int32)
  name: GetParameters(int)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html#wan24_Crypto_BC_AsymmetricSphincsPlusHelper_GetParameters_System_Int32_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters(System.Int32)
  name.vb: GetParameters(Integer)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters(int)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters(Integer)
  nameWithType: AsymmetricSphincsPlusHelper.GetParameters(int)
  nameWithType.vb: AsymmetricSphincsPlusHelper.GetParameters(Integer)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters*
  name: GetParameters
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusHelper.html#wan24_Crypto_BC_AsymmetricSphincsPlusHelper_GetParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusHelper.GetParameters
  nameWithType: AsymmetricSphincsPlusHelper.GetParameters
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  name: AsymmetricSphincsPlusPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  nameWithType: AsymmetricSphincsPlusPrivateKey
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor
  name: AsymmetricSphincsPlusPrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.New()
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey()
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricSphincsPlusPrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPrivateKeyParameters)
  name: AsymmetricSphincsPlusPrivateKey(SphincsPlusPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor_Org_BouncyCastle_Pqc_Crypto_SphincsPlus_SphincsPlusPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPrivateKeyParameters)
  name.vb: New(SphincsPlusPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.New(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPrivateKeyParameters)
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(SphincsPlusPrivateKeyParameters)
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.New(SphincsPlusPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(System.Byte[])
  name: AsymmetricSphincsPlusPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.New(Byte())
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey(byte[])
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor*
  name: AsymmetricSphincsPlusPrivateKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.New
  nameWithType: AsymmetricSphincsPlusPrivateKey.AsymmetricSphincsPlusPrivateKey
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DeserializeKeyData()
  nameWithType: AsymmetricSphincsPlusPrivateKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DeserializeKeyData
  nameWithType: AsymmetricSphincsPlusPrivateKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricSphincsPlusPrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.Dispose
  nameWithType: AsymmetricSphincsPlusPrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DisposeCore()
  nameWithType: AsymmetricSphincsPlusPrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.DisposeCore
  nameWithType: AsymmetricSphincsPlusPrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPrivateKeyParameters)
  name: GetPublicKey(SphincsPlusPrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_GetPublicKey_Org_BouncyCastle_Pqc_Crypto_SphincsPlus_SphincsPlusPrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.GetPublicKey(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPrivateKeyParameters)
  nameWithType: AsymmetricSphincsPlusPrivateKey.GetPublicKey(SphincsPlusPrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.GetPublicKey
  nameWithType: AsymmetricSphincsPlusPrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.SerializeKeyData()
  nameWithType: AsymmetricSphincsPlusPrivateKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.SerializeKeyData
  nameWithType: AsymmetricSphincsPlusPrivateKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  name: explicit operator AsymmetricSphincsPlusPrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.explicit operator wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.CType(Byte())
  nameWithType: AsymmetricSphincsPlusPrivateKey.explicit operator AsymmetricSphincsPlusPrivateKey(byte[])
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.CType
  nameWithType: AsymmetricSphincsPlusPrivateKey.explicit operator
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey)~wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name: implicit operator AsymmetricSphincsPlusPublicKey(AsymmetricSphincsPlusPrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey__wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey)~wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name.vb: CType(AsymmetricSphincsPlusPrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.implicit operator wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey(wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.CType(wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey)
  nameWithType: AsymmetricSphincsPlusPrivateKey.implicit operator AsymmetricSphincsPlusPublicKey(AsymmetricSphincsPlusPrivateKey)
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.CType(AsymmetricSphincsPlusPrivateKey)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPrivateKey.CType
  nameWithType: AsymmetricSphincsPlusPrivateKey.implicit operator
  nameWithType.vb: AsymmetricSphincsPlusPrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name: AsymmetricSphincsPlusPublicKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  nameWithType: AsymmetricSphincsPlusPublicKey
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor
  name: AsymmetricSphincsPlusPublicKey()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.New()
  nameWithType: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey()
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPublicKeyParameters)
  name: AsymmetricSphincsPlusPublicKey(SphincsPlusPublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey__ctor_Org_BouncyCastle_Pqc_Crypto_SphincsPlus_SphincsPlusPublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPublicKeyParameters)
  name.vb: New(SphincsPlusPublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.New(Org.BouncyCastle.Pqc.Crypto.SphincsPlus.SphincsPlusPublicKeyParameters)
  nameWithType: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(SphincsPlusPublicKeyParameters)
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.New(SphincsPlusPublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor(System.Byte[])
  name: AsymmetricSphincsPlusPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.New(Byte())
  nameWithType: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey(byte[])
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor*
  name: AsymmetricSphincsPlusPublicKey
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.New
  nameWithType: AsymmetricSphincsPlusPublicKey.AsymmetricSphincsPlusPublicKey
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.New
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  nameWithType: AsymmetricSphincsPlusPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.Bits
  nameWithType: AsymmetricSphincsPlusPublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.DeserializeKeyData()
  nameWithType: AsymmetricSphincsPlusPublicKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.DeserializeKeyData
  nameWithType: AsymmetricSphincsPlusPublicKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.SerializeKeyData()
  nameWithType: AsymmetricSphincsPlusPublicKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.SerializeKeyData
  nameWithType: AsymmetricSphincsPlusPublicKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name: explicit operator AsymmetricSphincsPlusPublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.explicit operator wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.CType(Byte())
  nameWithType: AsymmetricSphincsPlusPublicKey.explicit operator AsymmetricSphincsPlusPublicKey(byte[])
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.html#wan24_Crypto_BC_AsymmetricSphincsPlusPublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricSphincsPlusPublicKey.CType
  nameWithType: AsymmetricSphincsPlusPublicKey.explicit operator
  nameWithType.vb: AsymmetricSphincsPlusPublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm
  name: AsymmetricX25519Algorithm
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricX25519Algorithm
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm
  nameWithType: AsymmetricX25519Algorithm
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricX25519Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.ALGORITHM_NAME
  nameWithType: AsymmetricX25519Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricX25519Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricX25519Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name.vb: CreateKeyPair(CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricX25519Algorithm.CreateKeyPair(CryptoOptions?)
  nameWithType.vb: AsymmetricX25519Algorithm.CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519Algorithm.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.CreateKeyPair
  nameWithType: AsymmetricX25519Algorithm.CreateKeyPair
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricX25519Algorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricX25519Algorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricX25519Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.DISPLAY_NAME
  nameWithType: AsymmetricX25519Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricX25519Algorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.DisplayName
  nameWithType: AsymmetricX25519Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.DisplayName
  nameWithType: AsymmetricX25519Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricX25519Algorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519Algorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.GetEngineParameters
  nameWithType: AsymmetricX25519Algorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricX25519Algorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricX25519Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519Algorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricX25519Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricX25519Algorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricX25519Algorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricX25519Algorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricX25519Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519Algorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricX25519Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricX25519Algorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricX25519Algorithm.html#wan24_Crypto_BC_AsymmetricX25519Algorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricX25519Algorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricX25519Algorithm.USAGES
  nameWithType: AsymmetricX25519Algorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey
  name: AsymmetricX25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricX25519PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey
  nameWithType: AsymmetricX25519PrivateKey
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor
  name: AsymmetricX25519PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.New()
  nameWithType: AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey()
  nameWithType.vb: AsymmetricX25519PrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricX25519PrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricX25519PrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters)
  name: AsymmetricX25519PrivateKey(X25519PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey__ctor_Org_BouncyCastle_Crypto_Parameters_X25519PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters)
  name.vb: New(X25519PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey(Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.New(Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters)
  nameWithType: AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey(X25519PrivateKeyParameters)
  nameWithType.vb: AsymmetricX25519PrivateKey.New(X25519PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor(System.Byte[])
  name: AsymmetricX25519PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.New(Byte())
  nameWithType: AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey(byte[])
  nameWithType.vb: AsymmetricX25519PrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor*
  name: AsymmetricX25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.New
  nameWithType: AsymmetricX25519PrivateKey.AsymmetricX25519PrivateKey
  nameWithType.vb: AsymmetricX25519PrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey(System.Byte[])
  name: DeriveKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_DeriveKey_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey(System.Byte[])
  name.vb: DeriveKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey(Byte())
  nameWithType: AsymmetricX25519PrivateKey.DeriveKey(byte[])
  nameWithType.vb: AsymmetricX25519PrivateKey.DeriveKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  name: DeriveKey(IAsymmetricPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_DeriveKey_wan24_Crypto_IAsymmetricPublicKey_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  nameWithType: AsymmetricX25519PrivateKey.DeriveKey(IAsymmetricPublicKey)
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey*
  name: DeriveKey
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_DeriveKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DeriveKey
  nameWithType: AsymmetricX25519PrivateKey.DeriveKey
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricX25519PrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricX25519PrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.Dispose
  nameWithType: AsymmetricX25519PrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DisposeCore()
  nameWithType: AsymmetricX25519PrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.DisposeCore
  nameWithType: AsymmetricX25519PrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name: GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_GetKeyExchangeData_wan24_Crypto_IAsymmetricPublicKey_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name.vb: GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey?, wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey, wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricX25519PrivateKey.GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  nameWithType.vb: AsymmetricX25519PrivateKey.GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetKeyExchangeData*
  name: GetKeyExchangeData
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_GetKeyExchangeData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetKeyExchangeData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetKeyExchangeData
  nameWithType: AsymmetricX25519PrivateKey.GetKeyExchangeData
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters)
  name: GetPublicKey(X25519PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_GetPublicKey_Org_BouncyCastle_Crypto_Parameters_X25519PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters)
  nameWithType: AsymmetricX25519PrivateKey.GetPublicKey(X25519PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.GetPublicKey
  nameWithType: AsymmetricX25519PrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricX25519PrivateKey
  name: explicit operator AsymmetricX25519PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricX25519PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricX25519PrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.explicit operator wan24.Crypto.BC.AsymmetricX25519PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.CType(Byte())
  nameWithType: AsymmetricX25519PrivateKey.explicit operator AsymmetricX25519PrivateKey(byte[])
  nameWithType.vb: AsymmetricX25519PrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.CType
  nameWithType: AsymmetricX25519PrivateKey.explicit operator
  nameWithType.vb: AsymmetricX25519PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricX25519PrivateKey)~wan24.Crypto.BC.AsymmetricX25519PublicKey
  name: implicit operator AsymmetricX25519PublicKey(AsymmetricX25519PrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricX25519PrivateKey__wan24_Crypto_BC_AsymmetricX25519PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricX25519PrivateKey)~wan24.Crypto.BC.AsymmetricX25519PublicKey
  name.vb: CType(AsymmetricX25519PrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.implicit operator wan24.Crypto.BC.AsymmetricX25519PublicKey(wan24.Crypto.BC.AsymmetricX25519PrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.CType(wan24.Crypto.BC.AsymmetricX25519PrivateKey)
  nameWithType: AsymmetricX25519PrivateKey.implicit operator AsymmetricX25519PublicKey(AsymmetricX25519PrivateKey)
  nameWithType.vb: AsymmetricX25519PrivateKey.CType(AsymmetricX25519PrivateKey)
- uid: wan24.Crypto.BC.AsymmetricX25519PrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricX25519PrivateKey.html#wan24_Crypto_BC_AsymmetricX25519PrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricX25519PrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PrivateKey.CType
  nameWithType: AsymmetricX25519PrivateKey.implicit operator
  nameWithType.vb: AsymmetricX25519PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey
  name: AsymmetricX25519PublicKey
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricX25519PublicKey
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey
  nameWithType: AsymmetricX25519PublicKey
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey.#ctor
  name: AsymmetricX25519PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html#wan24_Crypto_BC_AsymmetricX25519PublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey.AsymmetricX25519PublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PublicKey.New()
  nameWithType: AsymmetricX25519PublicKey.AsymmetricX25519PublicKey()
  nameWithType.vb: AsymmetricX25519PublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.X25519PublicKeyParameters)
  name: AsymmetricX25519PublicKey(X25519PublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html#wan24_Crypto_BC_AsymmetricX25519PublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_X25519PublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.X25519PublicKeyParameters)
  name.vb: New(X25519PublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey.AsymmetricX25519PublicKey(Org.BouncyCastle.Crypto.Parameters.X25519PublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PublicKey.New(Org.BouncyCastle.Crypto.Parameters.X25519PublicKeyParameters)
  nameWithType: AsymmetricX25519PublicKey.AsymmetricX25519PublicKey(X25519PublicKeyParameters)
  nameWithType.vb: AsymmetricX25519PublicKey.New(X25519PublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey.#ctor(System.Byte[])
  name: AsymmetricX25519PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html#wan24_Crypto_BC_AsymmetricX25519PublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey.AsymmetricX25519PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PublicKey.New(Byte())
  nameWithType: AsymmetricX25519PublicKey.AsymmetricX25519PublicKey(byte[])
  nameWithType.vb: AsymmetricX25519PublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey.#ctor*
  name: AsymmetricX25519PublicKey
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html#wan24_Crypto_BC_AsymmetricX25519PublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey.AsymmetricX25519PublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PublicKey.New
  nameWithType: AsymmetricX25519PublicKey.AsymmetricX25519PublicKey
  nameWithType.vb: AsymmetricX25519PublicKey.New
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html#wan24_Crypto_BC_AsymmetricX25519PublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricX25519PublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey.Bits
  nameWithType: AsymmetricX25519PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html#wan24_Crypto_BC_AsymmetricX25519PublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey.Bits
  nameWithType: AsymmetricX25519PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricX25519PublicKey
  name: explicit operator AsymmetricX25519PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html#wan24_Crypto_BC_AsymmetricX25519PublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricX25519PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricX25519PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricX25519PublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey.explicit operator wan24.Crypto.BC.AsymmetricX25519PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PublicKey.CType(Byte())
  nameWithType: AsymmetricX25519PublicKey.explicit operator AsymmetricX25519PublicKey(byte[])
  nameWithType.vb: AsymmetricX25519PublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricX25519PublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricX25519PublicKey.html#wan24_Crypto_BC_AsymmetricX25519PublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX25519PublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricX25519PublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricX25519PublicKey.CType
  nameWithType: AsymmetricX25519PublicKey.explicit operator
  nameWithType.vb: AsymmetricX25519PublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm
  name: AsymmetricX448Algorithm
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricX448Algorithm
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm
  nameWithType: AsymmetricX448Algorithm
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricX448Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.ALGORITHM_NAME
  nameWithType: AsymmetricX448Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricX448Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricX448Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricX448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name.vb: CreateKeyPair(CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricX448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricX448Algorithm.CreateKeyPair(CryptoOptions?)
  nameWithType.vb: AsymmetricX448Algorithm.CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448Algorithm.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.CreateKeyPair
  nameWithType: AsymmetricX448Algorithm.CreateKeyPair
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricX448Algorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricX448Algorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricX448Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.DISPLAY_NAME
  nameWithType: AsymmetricX448Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricX448Algorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.DisplayName
  nameWithType: AsymmetricX448Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.DisplayName
  nameWithType: AsymmetricX448Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricX448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricX448Algorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448Algorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.GetEngineParameters
  nameWithType: AsymmetricX448Algorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricX448Algorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricX448Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448Algorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricX448Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricX448Algorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricX448Algorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricX448Algorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricX448Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448Algorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricX448Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricX448Algorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricX448Algorithm.html#wan24_Crypto_BC_AsymmetricX448Algorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricX448Algorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricX448Algorithm.USAGES
  nameWithType: AsymmetricX448Algorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey
  name: AsymmetricX448PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricX448PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey
  nameWithType: AsymmetricX448PrivateKey
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor
  name: AsymmetricX448PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.AsymmetricX448PrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.New()
  nameWithType: AsymmetricX448PrivateKey.AsymmetricX448PrivateKey()
  nameWithType.vb: AsymmetricX448PrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricX448PrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.AsymmetricX448PrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricX448PrivateKey.AsymmetricX448PrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricX448PrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters)
  name: AsymmetricX448PrivateKey(X448PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey__ctor_Org_BouncyCastle_Crypto_Parameters_X448PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters)
  name.vb: New(X448PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.AsymmetricX448PrivateKey(Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.New(Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters)
  nameWithType: AsymmetricX448PrivateKey.AsymmetricX448PrivateKey(X448PrivateKeyParameters)
  nameWithType.vb: AsymmetricX448PrivateKey.New(X448PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor(System.Byte[])
  name: AsymmetricX448PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.AsymmetricX448PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.New(Byte())
  nameWithType: AsymmetricX448PrivateKey.AsymmetricX448PrivateKey(byte[])
  nameWithType.vb: AsymmetricX448PrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor*
  name: AsymmetricX448PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.AsymmetricX448PrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.New
  nameWithType: AsymmetricX448PrivateKey.AsymmetricX448PrivateKey
  nameWithType.vb: AsymmetricX448PrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricX448PrivateKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.Bits
  nameWithType: AsymmetricX448PrivateKey.Bits
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.Bits
  nameWithType: AsymmetricX448PrivateKey.Bits
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey(System.Byte[])
  name: DeriveKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_DeriveKey_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey(System.Byte[])
  name.vb: DeriveKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey(Byte())
  nameWithType: AsymmetricX448PrivateKey.DeriveKey(byte[])
  nameWithType.vb: AsymmetricX448PrivateKey.DeriveKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  name: DeriveKey(IAsymmetricPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_DeriveKey_wan24_Crypto_IAsymmetricPublicKey_
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  nameWithType: AsymmetricX448PrivateKey.DeriveKey(IAsymmetricPublicKey)
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey*
  name: DeriveKey
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_DeriveKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.DeriveKey
  nameWithType: AsymmetricX448PrivateKey.DeriveKey
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricX448PrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricX448PrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.Dispose
  nameWithType: AsymmetricX448PrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.DisposeCore()
  nameWithType: AsymmetricX448PrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.DisposeCore
  nameWithType: AsymmetricX448PrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name: GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_GetKeyExchangeData_wan24_Crypto_IAsymmetricPublicKey_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name.vb: GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey?, wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey, wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricX448PrivateKey.GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  nameWithType.vb: AsymmetricX448PrivateKey.GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetKeyExchangeData*
  name: GetKeyExchangeData
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_GetKeyExchangeData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.GetKeyExchangeData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetKeyExchangeData
  nameWithType: AsymmetricX448PrivateKey.GetKeyExchangeData
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters)
  name: GetPublicKey(X448PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_GetPublicKey_Org_BouncyCastle_Crypto_Parameters_X448PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters)
  nameWithType: AsymmetricX448PrivateKey.GetPublicKey(X448PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.GetPublicKey
  nameWithType: AsymmetricX448PrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricX448PrivateKey
  name: explicit operator AsymmetricX448PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricX448PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricX448PrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.explicit operator wan24.Crypto.BC.AsymmetricX448PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.CType(Byte())
  nameWithType: AsymmetricX448PrivateKey.explicit operator AsymmetricX448PrivateKey(byte[])
  nameWithType.vb: AsymmetricX448PrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.CType
  nameWithType: AsymmetricX448PrivateKey.explicit operator
  nameWithType.vb: AsymmetricX448PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricX448PrivateKey)~wan24.Crypto.BC.AsymmetricX448PublicKey
  name: implicit operator AsymmetricX448PublicKey(AsymmetricX448PrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricX448PrivateKey__wan24_Crypto_BC_AsymmetricX448PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricX448PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricX448PrivateKey)~wan24.Crypto.BC.AsymmetricX448PublicKey
  name.vb: CType(AsymmetricX448PrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.implicit operator wan24.Crypto.BC.AsymmetricX448PublicKey(wan24.Crypto.BC.AsymmetricX448PrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.CType(wan24.Crypto.BC.AsymmetricX448PrivateKey)
  nameWithType: AsymmetricX448PrivateKey.implicit operator AsymmetricX448PublicKey(AsymmetricX448PrivateKey)
  nameWithType.vb: AsymmetricX448PrivateKey.CType(AsymmetricX448PrivateKey)
- uid: wan24.Crypto.BC.AsymmetricX448PrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricX448PrivateKey.html#wan24_Crypto_BC_AsymmetricX448PrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricX448PrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PrivateKey.CType
  nameWithType: AsymmetricX448PrivateKey.implicit operator
  nameWithType.vb: AsymmetricX448PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey
  name: AsymmetricX448PublicKey
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricX448PublicKey
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey
  nameWithType: AsymmetricX448PublicKey
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey.#ctor
  name: AsymmetricX448PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html#wan24_Crypto_BC_AsymmetricX448PublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricX448PublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey.AsymmetricX448PublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PublicKey.New()
  nameWithType: AsymmetricX448PublicKey.AsymmetricX448PublicKey()
  nameWithType.vb: AsymmetricX448PublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.X448PublicKeyParameters)
  name: AsymmetricX448PublicKey(X448PublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html#wan24_Crypto_BC_AsymmetricX448PublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_X448PublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricX448PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.X448PublicKeyParameters)
  name.vb: New(X448PublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey.AsymmetricX448PublicKey(Org.BouncyCastle.Crypto.Parameters.X448PublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PublicKey.New(Org.BouncyCastle.Crypto.Parameters.X448PublicKeyParameters)
  nameWithType: AsymmetricX448PublicKey.AsymmetricX448PublicKey(X448PublicKeyParameters)
  nameWithType.vb: AsymmetricX448PublicKey.New(X448PublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey.#ctor(System.Byte[])
  name: AsymmetricX448PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html#wan24_Crypto_BC_AsymmetricX448PublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricX448PublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey.AsymmetricX448PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PublicKey.New(Byte())
  nameWithType: AsymmetricX448PublicKey.AsymmetricX448PublicKey(byte[])
  nameWithType.vb: AsymmetricX448PublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey.#ctor*
  name: AsymmetricX448PublicKey
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html#wan24_Crypto_BC_AsymmetricX448PublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey.AsymmetricX448PublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PublicKey.New
  nameWithType: AsymmetricX448PublicKey.AsymmetricX448PublicKey
  nameWithType.vb: AsymmetricX448PublicKey.New
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html#wan24_Crypto_BC_AsymmetricX448PublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricX448PublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey.Bits
  nameWithType: AsymmetricX448PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html#wan24_Crypto_BC_AsymmetricX448PublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey.Bits
  nameWithType: AsymmetricX448PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricX448PublicKey
  name: explicit operator AsymmetricX448PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html#wan24_Crypto_BC_AsymmetricX448PublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricX448PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricX448PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricX448PublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey.explicit operator wan24.Crypto.BC.AsymmetricX448PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PublicKey.CType(Byte())
  nameWithType: AsymmetricX448PublicKey.explicit operator AsymmetricX448PublicKey(byte[])
  nameWithType.vb: AsymmetricX448PublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricX448PublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricX448PublicKey.html#wan24_Crypto_BC_AsymmetricX448PublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricX448PublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricX448PublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricX448PublicKey.CType
  nameWithType: AsymmetricX448PublicKey.explicit operator
  nameWithType.vb: AsymmetricX448PublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm
  name: AsymmetricXEd25519Algorithm
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricXEd25519Algorithm
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm
  nameWithType: AsymmetricXEd25519Algorithm
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.ALGORITHM_NAME
  nameWithType: AsymmetricXEd25519Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricXEd25519Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name.vb: CreateKeyPair(CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricXEd25519Algorithm.CreateKeyPair(CryptoOptions?)
  nameWithType.vb: AsymmetricXEd25519Algorithm.CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.CreateKeyPair
  nameWithType: AsymmetricXEd25519Algorithm.CreateKeyPair
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricXEd25519Algorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DISPLAY_NAME
  nameWithType: AsymmetricXEd25519Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DisplayName
  nameWithType: AsymmetricXEd25519Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.DisplayName
  nameWithType: AsymmetricXEd25519Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricXEd25519Algorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.GetEngineParameters
  nameWithType: AsymmetricXEd25519Algorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricXEd25519Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricXEd25519Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricXEd25519Algorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricXEd25519Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricXEd25519Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricXEd25519Algorithm.html#wan24_Crypto_BC_AsymmetricXEd25519Algorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricXEd25519Algorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricXEd25519Algorithm.USAGES
  nameWithType: AsymmetricXEd25519Algorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey
  name: AsymmetricXEd25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey
  nameWithType: AsymmetricXEd25519PrivateKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor
  name: AsymmetricXEd25519PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.New()
  nameWithType: AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey()
  nameWithType.vb: AsymmetricXEd25519PrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricXEd25519PrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricXEd25519PrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  name: AsymmetricXEd25519PrivateKey(Ed25519PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed25519PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  name.vb: New(Ed25519PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.New(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  nameWithType: AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey(Ed25519PrivateKeyParameters)
  nameWithType.vb: AsymmetricXEd25519PrivateKey.New(Ed25519PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor(System.Byte[])
  name: AsymmetricXEd25519PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.New(Byte())
  nameWithType: AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey(byte[])
  nameWithType.vb: AsymmetricXEd25519PrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor*
  name: AsymmetricXEd25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.New
  nameWithType: AsymmetricXEd25519PrivateKey.AsymmetricXEd25519PrivateKey
  nameWithType.vb: AsymmetricXEd25519PrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateEd25519PrivateKey
  name: CreateEd25519PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_CreateEd25519PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateEd25519PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateEd25519PrivateKey()
  nameWithType: AsymmetricXEd25519PrivateKey.CreateEd25519PrivateKey()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateEd25519PrivateKey*
  name: CreateEd25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_CreateEd25519PrivateKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateEd25519PrivateKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateEd25519PrivateKey
  nameWithType: AsymmetricXEd25519PrivateKey.CreateEd25519PrivateKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateX25519PrivateKey
  name: CreateX25519PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_CreateX25519PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateX25519PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateX25519PrivateKey()
  nameWithType: AsymmetricXEd25519PrivateKey.CreateX25519PrivateKey()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateX25519PrivateKey*
  name: CreateX25519PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_CreateX25519PrivateKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateX25519PrivateKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CreateX25519PrivateKey
  nameWithType: AsymmetricXEd25519PrivateKey.CreateX25519PrivateKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey(System.Byte[])
  name: DeriveKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_DeriveKey_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey(System.Byte[])
  name.vb: DeriveKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey(Byte())
  nameWithType: AsymmetricXEd25519PrivateKey.DeriveKey(byte[])
  nameWithType.vb: AsymmetricXEd25519PrivateKey.DeriveKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  name: DeriveKey(IAsymmetricPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_DeriveKey_wan24_Crypto_IAsymmetricPublicKey_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  nameWithType: AsymmetricXEd25519PrivateKey.DeriveKey(IAsymmetricPublicKey)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey*
  name: DeriveKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_DeriveKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DeriveKey
  nameWithType: AsymmetricXEd25519PrivateKey.DeriveKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricXEd25519PrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricXEd25519PrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.Dispose
  nameWithType: AsymmetricXEd25519PrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DisposeCore()
  nameWithType: AsymmetricXEd25519PrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.DisposeCore
  nameWithType: AsymmetricXEd25519PrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name: GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_GetKeyExchangeData_wan24_Crypto_IAsymmetricPublicKey_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name.vb: GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey?, wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey, wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricXEd25519PrivateKey.GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  nameWithType.vb: AsymmetricXEd25519PrivateKey.GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetKeyExchangeData*
  name: GetKeyExchangeData
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_GetKeyExchangeData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetKeyExchangeData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetKeyExchangeData
  nameWithType: AsymmetricXEd25519PrivateKey.GetKeyExchangeData
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  name: GetPublicKey(Ed25519PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_GetPublicKey_Org_BouncyCastle_Crypto_Parameters_Ed25519PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  nameWithType: AsymmetricXEd25519PrivateKey.GetPublicKey(Ed25519PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.GetPublicKey
  nameWithType: AsymmetricXEd25519PrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.PublicKey
  name: PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_PublicKey
  commentId: P:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.PublicKey
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.PublicKey
  nameWithType: AsymmetricXEd25519PrivateKey.PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.PublicKey*
  name: PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_PublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.PublicKey
  nameWithType: AsymmetricXEd25519PrivateKey.PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricXEd25519PrivateKey
  name: explicit operator AsymmetricXEd25519PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricXEd25519PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricXEd25519PrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.explicit operator wan24.Crypto.BC.AsymmetricXEd25519PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CType(Byte())
  nameWithType: AsymmetricXEd25519PrivateKey.explicit operator AsymmetricXEd25519PrivateKey(byte[])
  nameWithType.vb: AsymmetricXEd25519PrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CType
  nameWithType: AsymmetricXEd25519PrivateKey.explicit operator
  nameWithType.vb: AsymmetricXEd25519PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricXEd25519PrivateKey)~wan24.Crypto.BC.AsymmetricXEd25519PublicKey
  name: implicit operator AsymmetricXEd25519PublicKey(AsymmetricXEd25519PrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricXEd25519PrivateKey__wan24_Crypto_BC_AsymmetricXEd25519PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricXEd25519PrivateKey)~wan24.Crypto.BC.AsymmetricXEd25519PublicKey
  name.vb: CType(AsymmetricXEd25519PrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.implicit operator wan24.Crypto.BC.AsymmetricXEd25519PublicKey(wan24.Crypto.BC.AsymmetricXEd25519PrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CType(wan24.Crypto.BC.AsymmetricXEd25519PrivateKey)
  nameWithType: AsymmetricXEd25519PrivateKey.implicit operator AsymmetricXEd25519PublicKey(AsymmetricXEd25519PrivateKey)
  nameWithType.vb: AsymmetricXEd25519PrivateKey.CType(AsymmetricXEd25519PrivateKey)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd25519PrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PrivateKey.CType
  nameWithType: AsymmetricXEd25519PrivateKey.implicit operator
  nameWithType.vb: AsymmetricXEd25519PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey
  name: AsymmetricXEd25519PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricXEd25519PublicKey
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey
  nameWithType: AsymmetricXEd25519PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.#ctor
  name: AsymmetricXEd25519PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.AsymmetricXEd25519PublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.New()
  nameWithType: AsymmetricXEd25519PublicKey.AsymmetricXEd25519PublicKey()
  nameWithType.vb: AsymmetricXEd25519PublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters,wan24.Crypto.BC.AsymmetricX25519PublicKey)
  name: AsymmetricXEd25519PublicKey(Ed25519PublicKeyParameters, AsymmetricX25519PublicKey)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed25519PublicKeyParameters_wan24_Crypto_BC_AsymmetricX25519PublicKey_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters,wan24.Crypto.BC.AsymmetricX25519PublicKey)
  name.vb: New(Ed25519PublicKeyParameters, AsymmetricX25519PublicKey)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.AsymmetricXEd25519PublicKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters, wan24.Crypto.BC.AsymmetricX25519PublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.New(Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters, wan24.Crypto.BC.AsymmetricX25519PublicKey)
  nameWithType: AsymmetricXEd25519PublicKey.AsymmetricXEd25519PublicKey(Ed25519PublicKeyParameters, AsymmetricX25519PublicKey)
  nameWithType.vb: AsymmetricXEd25519PublicKey.New(Ed25519PublicKeyParameters, AsymmetricX25519PublicKey)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.#ctor(System.Byte[])
  name: AsymmetricXEd25519PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.AsymmetricXEd25519PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.New(Byte())
  nameWithType: AsymmetricXEd25519PublicKey.AsymmetricXEd25519PublicKey(byte[])
  nameWithType.vb: AsymmetricXEd25519PublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.#ctor*
  name: AsymmetricXEd25519PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.AsymmetricXEd25519PublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.New
  nameWithType: AsymmetricXEd25519PublicKey.AsymmetricXEd25519PublicKey
  nameWithType.vb: AsymmetricXEd25519PublicKey.New
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Bits
  nameWithType: AsymmetricXEd25519PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Bits
  nameWithType: AsymmetricXEd25519PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateEd25519PublicKey
  name: CreateEd25519PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_CreateEd25519PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateEd25519PublicKey
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateEd25519PublicKey()
  nameWithType: AsymmetricXEd25519PublicKey.CreateEd25519PublicKey()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateEd25519PublicKey*
  name: CreateEd25519PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_CreateEd25519PublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateEd25519PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateEd25519PublicKey
  nameWithType: AsymmetricXEd25519PublicKey.CreateEd25519PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateX25519PublicKey
  name: CreateX25519PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_CreateX25519PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateX25519PublicKey
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateX25519PublicKey()
  nameWithType: AsymmetricXEd25519PublicKey.CreateX25519PublicKey()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateX25519PublicKey*
  name: CreateX25519PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_CreateX25519PublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateX25519PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CreateX25519PublicKey
  nameWithType: AsymmetricXEd25519PublicKey.CreateX25519PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DeserializeKeyData()
  nameWithType: AsymmetricXEd25519PublicKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DeserializeKeyData
  nameWithType: AsymmetricXEd25519PublicKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Dispose(Boolean)
  nameWithType: AsymmetricXEd25519PublicKey.Dispose(bool)
  nameWithType.vb: AsymmetricXEd25519PublicKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.Dispose
  nameWithType: AsymmetricXEd25519PublicKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DisposeCore()
  nameWithType: AsymmetricXEd25519PublicKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.DisposeCore
  nameWithType: AsymmetricXEd25519PublicKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricXEd25519PublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricXEd25519PublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.SerializeKeyData()
  nameWithType: AsymmetricXEd25519PublicKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.SerializeKeyData
  nameWithType: AsymmetricXEd25519PublicKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricXEd25519PublicKey
  name: explicit operator AsymmetricXEd25519PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricXEd25519PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricXEd25519PublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.explicit operator wan24.Crypto.BC.AsymmetricXEd25519PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CType(Byte())
  nameWithType: AsymmetricXEd25519PublicKey.explicit operator AsymmetricXEd25519PublicKey(byte[])
  nameWithType.vb: AsymmetricXEd25519PublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricXEd25519PublicKey.html#wan24_Crypto_BC_AsymmetricXEd25519PublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd25519PublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd25519PublicKey.CType
  nameWithType: AsymmetricXEd25519PublicKey.explicit operator
  nameWithType.vb: AsymmetricXEd25519PublicKey.CType
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm
  name: AsymmetricXEd448Algorithm
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html
  commentId: T:wan24.Crypto.BC.AsymmetricXEd448Algorithm
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm
  nameWithType: AsymmetricXEd448Algorithm
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricXEd448Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.ALGORITHM_NAME
  nameWithType: AsymmetricXEd448Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.AsymmetricXEd448Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.ALGORITHM_VALUE
  nameWithType: AsymmetricXEd448Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name.vb: CreateKeyPair(CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448Algorithm.CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricXEd448Algorithm.CreateKeyPair(CryptoOptions?)
  nameWithType.vb: AsymmetricXEd448Algorithm.CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448Algorithm.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.CreateKeyPair
  nameWithType: AsymmetricXEd448Algorithm.CreateKeyPair
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.DEFAULT_KEY_SIZE
  name: DEFAULT_KEY_SIZE
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_DEFAULT_KEY_SIZE
  commentId: F:wan24.Crypto.BC.AsymmetricXEd448Algorithm.DEFAULT_KEY_SIZE
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.DEFAULT_KEY_SIZE
  nameWithType: AsymmetricXEd448Algorithm.DEFAULT_KEY_SIZE
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.AsymmetricXEd448Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.DISPLAY_NAME
  nameWithType: AsymmetricXEd448Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.AsymmetricXEd448Algorithm.DisplayName
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.DisplayName
  nameWithType: AsymmetricXEd448Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.DisplayName
  nameWithType: AsymmetricXEd448Algorithm.DisplayName
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricXEd448Algorithm.GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448Algorithm.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.GetEngineParameters
  nameWithType: AsymmetricXEd448Algorithm.GetEngineParameters
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.IsPublicKeyStandardFormat
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_IsPublicKeyStandardFormat
  commentId: P:wan24.Crypto.BC.AsymmetricXEd448Algorithm.IsPublicKeyStandardFormat
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricXEd448Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.IsPublicKeyStandardFormat*
  name: IsPublicKeyStandardFormat
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_IsPublicKeyStandardFormat_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448Algorithm.IsPublicKeyStandardFormat
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.IsPublicKeyStandardFormat
  nameWithType: AsymmetricXEd448Algorithm.IsPublicKeyStandardFormat
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.AsymmetricXEd448Algorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.MAX_KEY_USAGE_COUNT
  nameWithType: AsymmetricXEd448Algorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.AsymmetricXEd448Algorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricXEd448Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448Algorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.MaxKeyUsageCount
  nameWithType: AsymmetricXEd448Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.AsymmetricXEd448Algorithm.USAGES
  name: USAGES
  href: api/wan24.Crypto.BC.AsymmetricXEd448Algorithm.html#wan24_Crypto_BC_AsymmetricXEd448Algorithm_USAGES
  commentId: F:wan24.Crypto.BC.AsymmetricXEd448Algorithm.USAGES
  fullName: wan24.Crypto.BC.AsymmetricXEd448Algorithm.USAGES
  nameWithType: AsymmetricXEd448Algorithm.USAGES
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey
  name: AsymmetricXEd448PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricXEd448PrivateKey
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey
  nameWithType: AsymmetricXEd448PrivateKey
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor
  name: AsymmetricXEd448PrivateKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.New()
  nameWithType: AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey()
  nameWithType.vb: AsymmetricXEd448PrivateKey.New()
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: AsymmetricXEd448PrivateKey(AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey__ctor_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.New(Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey(AsymmetricCipherKeyPair)
  nameWithType.vb: AsymmetricXEd448PrivateKey.New(AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  name: AsymmetricXEd448PrivateKey(Ed448PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed448PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  name.vb: New(Ed448PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.New(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  nameWithType: AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey(Ed448PrivateKeyParameters)
  nameWithType.vb: AsymmetricXEd448PrivateKey.New(Ed448PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor(System.Byte[])
  name: AsymmetricXEd448PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.New(Byte())
  nameWithType: AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey(byte[])
  nameWithType.vb: AsymmetricXEd448PrivateKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor*
  name: AsymmetricXEd448PrivateKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.New
  nameWithType: AsymmetricXEd448PrivateKey.AsymmetricXEd448PrivateKey
  nameWithType.vb: AsymmetricXEd448PrivateKey.New
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Bits
  nameWithType: AsymmetricXEd448PrivateKey.Bits
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Bits
  nameWithType: AsymmetricXEd448PrivateKey.Bits
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey(System.Byte[])
  name: DeriveKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_DeriveKey_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey(System.Byte[])
  name.vb: DeriveKey(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey(Byte())
  nameWithType: AsymmetricXEd448PrivateKey.DeriveKey(byte[])
  nameWithType.vb: AsymmetricXEd448PrivateKey.DeriveKey(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  name: DeriveKey(IAsymmetricPublicKey)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_DeriveKey_wan24_Crypto_IAsymmetricPublicKey_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  nameWithType: AsymmetricXEd448PrivateKey.DeriveKey(IAsymmetricPublicKey)
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey*
  name: DeriveKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_DeriveKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DeriveKey
  nameWithType: AsymmetricXEd448PrivateKey.DeriveKey
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Dispose(Boolean)
  nameWithType: AsymmetricXEd448PrivateKey.Dispose(bool)
  nameWithType.vb: AsymmetricXEd448PrivateKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.Dispose
  nameWithType: AsymmetricXEd448PrivateKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DisposeCore()
  nameWithType: AsymmetricXEd448PrivateKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.DisposeCore
  nameWithType: AsymmetricXEd448PrivateKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name: GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_GetKeyExchangeData_wan24_Crypto_IAsymmetricPublicKey_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name.vb: GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey?, wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey, wan24.Crypto.CryptoOptions)
  nameWithType: AsymmetricXEd448PrivateKey.GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  nameWithType.vb: AsymmetricXEd448PrivateKey.GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetKeyExchangeData*
  name: GetKeyExchangeData
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_GetKeyExchangeData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetKeyExchangeData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetKeyExchangeData
  nameWithType: AsymmetricXEd448PrivateKey.GetKeyExchangeData
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  name: GetPublicKey(Ed448PrivateKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_GetPublicKey_Org_BouncyCastle_Crypto_Parameters_Ed448PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetPublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  nameWithType: AsymmetricXEd448PrivateKey.GetPublicKey(Ed448PrivateKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.GetPublicKey
  nameWithType: AsymmetricXEd448PrivateKey.GetPublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.PublicKey
  name: PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_PublicKey
  commentId: P:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.PublicKey
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.PublicKey
  nameWithType: AsymmetricXEd448PrivateKey.PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.PublicKey*
  name: PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_PublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.PublicKey
  nameWithType: AsymmetricXEd448PrivateKey.PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricXEd448PrivateKey
  name: explicit operator AsymmetricXEd448PrivateKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricXEd448PrivateKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricXEd448PrivateKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.explicit operator wan24.Crypto.BC.AsymmetricXEd448PrivateKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.CType(Byte())
  nameWithType: AsymmetricXEd448PrivateKey.explicit operator AsymmetricXEd448PrivateKey(byte[])
  nameWithType.vb: AsymmetricXEd448PrivateKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.CType
  nameWithType: AsymmetricXEd448PrivateKey.explicit operator
  nameWithType.vb: AsymmetricXEd448PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricXEd448PrivateKey)~wan24.Crypto.BC.AsymmetricXEd448PublicKey
  name: implicit operator AsymmetricXEd448PublicKey(AsymmetricXEd448PrivateKey)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_op_Implicit_wan24_Crypto_BC_AsymmetricXEd448PrivateKey__wan24_Crypto_BC_AsymmetricXEd448PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.op_Implicit(wan24.Crypto.BC.AsymmetricXEd448PrivateKey)~wan24.Crypto.BC.AsymmetricXEd448PublicKey
  name.vb: CType(AsymmetricXEd448PrivateKey)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.implicit operator wan24.Crypto.BC.AsymmetricXEd448PublicKey(wan24.Crypto.BC.AsymmetricXEd448PrivateKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.CType(wan24.Crypto.BC.AsymmetricXEd448PrivateKey)
  nameWithType: AsymmetricXEd448PrivateKey.implicit operator AsymmetricXEd448PublicKey(AsymmetricXEd448PrivateKey)
  nameWithType.vb: AsymmetricXEd448PrivateKey.CType(AsymmetricXEd448PrivateKey)
- uid: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.op_Implicit*
  name: implicit operator
  href: api/wan24.Crypto.BC.AsymmetricXEd448PrivateKey.html#wan24_Crypto_BC_AsymmetricXEd448PrivateKey_op_Implicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PrivateKey.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.implicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PrivateKey.CType
  nameWithType: AsymmetricXEd448PrivateKey.implicit operator
  nameWithType.vb: AsymmetricXEd448PrivateKey.CType
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey
  name: AsymmetricXEd448PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html
  commentId: T:wan24.Crypto.BC.AsymmetricXEd448PublicKey
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey
  nameWithType: AsymmetricXEd448PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor
  name: AsymmetricXEd448PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey__ctor
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey()
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PublicKey.New()
  nameWithType: AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey()
  nameWithType.vb: AsymmetricXEd448PublicKey.New()
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters)
  name: AsymmetricXEd448PublicKey(Ed448PublicKeyParameters)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed448PublicKeyParameters_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters)
  name.vb: New(Ed448PublicKeyParameters)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PublicKey.New(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters)
  nameWithType: AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey(Ed448PublicKeyParameters)
  nameWithType.vb: AsymmetricXEd448PublicKey.New(Ed448PublicKeyParameters)
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters,wan24.Crypto.BC.AsymmetricX448PublicKey)
  name: AsymmetricXEd448PublicKey(Ed448PublicKeyParameters, AsymmetricX448PublicKey)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey__ctor_Org_BouncyCastle_Crypto_Parameters_Ed448PublicKeyParameters_wan24_Crypto_BC_AsymmetricX448PublicKey_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters,wan24.Crypto.BC.AsymmetricX448PublicKey)
  name.vb: New(Ed448PublicKeyParameters, AsymmetricX448PublicKey)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters, wan24.Crypto.BC.AsymmetricX448PublicKey)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PublicKey.New(Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters, wan24.Crypto.BC.AsymmetricX448PublicKey)
  nameWithType: AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey(Ed448PublicKeyParameters, AsymmetricX448PublicKey)
  nameWithType.vb: AsymmetricXEd448PublicKey.New(Ed448PublicKeyParameters, AsymmetricX448PublicKey)
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor(System.Byte[])
  name: AsymmetricXEd448PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PublicKey.New(Byte())
  nameWithType: AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey(byte[])
  nameWithType.vb: AsymmetricXEd448PublicKey.New(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor*
  name: AsymmetricXEd448PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey__ctor_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PublicKey.New
  nameWithType: AsymmetricXEd448PublicKey.AsymmetricXEd448PublicKey
  nameWithType.vb: AsymmetricXEd448PublicKey.New
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Bits
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_Bits
  commentId: P:wan24.Crypto.BC.AsymmetricXEd448PublicKey.Bits
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Bits
  nameWithType: AsymmetricXEd448PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_Bits_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Bits
  nameWithType: AsymmetricXEd448PublicKey.Bits
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateEd448PublicKey
  name: CreateEd448PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_CreateEd448PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateEd448PublicKey
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateEd448PublicKey()
  nameWithType: AsymmetricXEd448PublicKey.CreateEd448PublicKey()
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateEd448PublicKey*
  name: CreateEd448PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_CreateEd448PublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateEd448PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateEd448PublicKey
  nameWithType: AsymmetricXEd448PublicKey.CreateEd448PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateX448PublicKey
  name: CreateX448PublicKey()
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_CreateX448PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateX448PublicKey
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateX448PublicKey()
  nameWithType: AsymmetricXEd448PublicKey.CreateX448PublicKey()
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateX448PublicKey*
  name: CreateX448PublicKey
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_CreateX448PublicKey_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateX448PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CreateX448PublicKey
  nameWithType: AsymmetricXEd448PublicKey.CreateX448PublicKey
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.DeserializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.DeserializeKeyData()
  nameWithType: AsymmetricXEd448PublicKey.DeserializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.DeserializeKeyData
  nameWithType: AsymmetricXEd448PublicKey.DeserializeKeyData
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Dispose(Boolean)
  nameWithType: AsymmetricXEd448PublicKey.Dispose(bool)
  nameWithType.vb: AsymmetricXEd448PublicKey.Dispose(Boolean)
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_Dispose_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.Dispose
  nameWithType: AsymmetricXEd448PublicKey.Dispose
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_DisposeCore
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.DisposeCore
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.DisposeCore()
  nameWithType: AsymmetricXEd448PublicKey.DisposeCore()
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.DisposeCore
  nameWithType: AsymmetricXEd448PublicKey.DisposeCore
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.AsymmetricXEd448PublicKey.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricXEd448PublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.IsBcImportExportImplemented
  nameWithType: AsymmetricXEd448PublicKey.IsBcImportExportImplemented
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_SerializeKeyData
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.SerializeKeyData
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.SerializeKeyData()
  nameWithType: AsymmetricXEd448PublicKey.SerializeKeyData()
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.SerializeKeyData
  nameWithType: AsymmetricXEd448PublicKey.SerializeKeyData
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricXEd448PublicKey
  name: explicit operator AsymmetricXEd448PublicKey(byte[])
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_op_Explicit_System_Byte____wan24_Crypto_BC_AsymmetricXEd448PublicKey
  commentId: M:wan24.Crypto.BC.AsymmetricXEd448PublicKey.op_Explicit(System.Byte[])~wan24.Crypto.BC.AsymmetricXEd448PublicKey
  name.vb: CType(Byte())
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.explicit operator wan24.Crypto.BC.AsymmetricXEd448PublicKey(byte[])
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CType(Byte())
  nameWithType: AsymmetricXEd448PublicKey.explicit operator AsymmetricXEd448PublicKey(byte[])
  nameWithType.vb: AsymmetricXEd448PublicKey.CType(Byte())
- uid: wan24.Crypto.BC.AsymmetricXEd448PublicKey.op_Explicit*
  name: explicit operator
  href: api/wan24.Crypto.BC.AsymmetricXEd448PublicKey.html#wan24_Crypto_BC_AsymmetricXEd448PublicKey_op_Explicit_
  commentId: Overload:wan24.Crypto.BC.AsymmetricXEd448PublicKey.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: wan24.Crypto.BC.AsymmetricXEd448PublicKey.explicit operator
  fullName.vb: wan24.Crypto.BC.AsymmetricXEd448PublicKey.CType
  nameWithType: AsymmetricXEd448PublicKey.explicit operator
  nameWithType.vb: AsymmetricXEd448PublicKey.CType
- uid: wan24.Crypto.BC.AutoSeedRng
  name: AutoSeedRng
  href: api/wan24.Crypto.BC.AutoSeedRng.html
  commentId: T:wan24.Crypto.BC.AutoSeedRng
  fullName: wan24.Crypto.BC.AutoSeedRng
  nameWithType: AutoSeedRng
- uid: wan24.Crypto.BC.AutoSeedRng.#ctor(wan24.Crypto.IRng@,System.Int32@,wan24.Crypto.BC.AutoSeedRngTypes@,System.TimeSpan@,wan24.Crypto.BC.IBouncyCastleRng@,System.Nullable{System.Int32}@,System.Threading.Tasks.TaskScheduler@,System.Threading.CancellationToken@)
  name: AutoSeedRng(in IRng, in int, in AutoSeedRngTypes, in TimeSpan, in IBouncyCastleRng?, in int?, in TaskScheduler?, in CancellationToken)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng__ctor_wan24_Crypto_IRng__System_Int32__wan24_Crypto_BC_AutoSeedRngTypes__System_TimeSpan__wan24_Crypto_BC_IBouncyCastleRng__System_Nullable_System_Int32___System_Threading_Tasks_TaskScheduler__System_Threading_CancellationToken__
  commentId: M:wan24.Crypto.BC.AutoSeedRng.#ctor(wan24.Crypto.IRng@,System.Int32@,wan24.Crypto.BC.AutoSeedRngTypes@,System.TimeSpan@,wan24.Crypto.BC.IBouncyCastleRng@,System.Nullable{System.Int32}@,System.Threading.Tasks.TaskScheduler@,System.Threading.CancellationToken@)
  name.vb: New(IRng, Integer, AutoSeedRngTypes, TimeSpan, IBouncyCastleRng, Integer?, TaskScheduler, CancellationToken)
  fullName: wan24.Crypto.BC.AutoSeedRng.AutoSeedRng(in wan24.Crypto.IRng, in int, in wan24.Crypto.BC.AutoSeedRngTypes, in System.TimeSpan, in wan24.Crypto.BC.IBouncyCastleRng?, in int?, in System.Threading.Tasks.TaskScheduler?, in System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.New(wan24.Crypto.IRng, Integer, wan24.Crypto.BC.AutoSeedRngTypes, System.TimeSpan, wan24.Crypto.BC.IBouncyCastleRng, Integer?, System.Threading.Tasks.TaskScheduler, System.Threading.CancellationToken)
  nameWithType: AutoSeedRng.AutoSeedRng(in IRng, in int, in AutoSeedRngTypes, in TimeSpan, in IBouncyCastleRng?, in int?, in TaskScheduler?, in CancellationToken)
  nameWithType.vb: AutoSeedRng.New(IRng, Integer, AutoSeedRngTypes, TimeSpan, IBouncyCastleRng, Integer?, TaskScheduler, CancellationToken)
- uid: wan24.Crypto.BC.AutoSeedRng.#ctor*
  name: AutoSeedRng
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng__ctor_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.AutoSeedRng.AutoSeedRng
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.New
  nameWithType: AutoSeedRng.AutoSeedRng
  nameWithType.vb: AutoSeedRng.New
- uid: wan24.Crypto.BC.AutoSeedRng.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.AutoSeedRng.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.AutoSeedRng.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: AutoSeedRng.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: AutoSeedRng.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.AutoSeedRng.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_AddSeed_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.AddSeed
  nameWithType: AutoSeedRng.AddSeed
- uid: wan24.Crypto.BC.AutoSeedRng.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.AutoSeedRng.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.AutoSeedRng.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: AutoSeedRng.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: AutoSeedRng.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.AutoSeedRng.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.AddSeedAsync
  nameWithType: AutoSeedRng.AddSeedAsync
- uid: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(Byte())
  nameWithType: AutoSeedRng.AddSeedMaterial(byte[])
  nameWithType.vb: AutoSeedRng.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(Long)
  nameWithType: AutoSeedRng.AddSeedMaterial(long)
  nameWithType.vb: AutoSeedRng.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: AutoSeedRng.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: AutoSeedRng.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.AddSeedMaterial
  nameWithType: AutoSeedRng.AddSeedMaterial
- uid: wan24.Crypto.BC.AutoSeedRng.AutoSeedingRngEvent_Delegate
  name: AutoSeedRng.AutoSeedingRngEvent_Delegate
  href: api/wan24.Crypto.BC.AutoSeedRng.AutoSeedingRngEvent_Delegate.html
  commentId: T:wan24.Crypto.BC.AutoSeedRng.AutoSeedingRngEvent_Delegate
  fullName: wan24.Crypto.BC.AutoSeedRng.AutoSeedingRngEvent_Delegate
  nameWithType: AutoSeedRng.AutoSeedingRngEvent_Delegate
- uid: wan24.Crypto.BC.AutoSeedRng.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.AutoSeedRng.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.AutoSeedRng.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.Dispose(Boolean)
  nameWithType: AutoSeedRng.Dispose(bool)
  nameWithType.vb: AutoSeedRng.Dispose(Boolean)
- uid: wan24.Crypto.BC.AutoSeedRng.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_Dispose_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.Dispose
  nameWithType: AutoSeedRng.Dispose
- uid: wan24.Crypto.BC.AutoSeedRng.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_DisposeCore
  commentId: M:wan24.Crypto.BC.AutoSeedRng.DisposeCore
  fullName: wan24.Crypto.BC.AutoSeedRng.DisposeCore()
  nameWithType: AutoSeedRng.DisposeCore()
- uid: wan24.Crypto.BC.AutoSeedRng.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.DisposeCore
  nameWithType: AutoSeedRng.DisposeCore
- uid: wan24.Crypto.BC.AutoSeedRng.DisposeRng
  name: DisposeRng
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_DisposeRng
  commentId: P:wan24.Crypto.BC.AutoSeedRng.DisposeRng
  fullName: wan24.Crypto.BC.AutoSeedRng.DisposeRng
  nameWithType: AutoSeedRng.DisposeRng
- uid: wan24.Crypto.BC.AutoSeedRng.DisposeRng*
  name: DisposeRng
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_DisposeRng_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.DisposeRng
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.DisposeRng
  nameWithType: AutoSeedRng.DisposeRng
- uid: wan24.Crypto.BC.AutoSeedRng.DisposeSeedProvider
  name: DisposeSeedProvider
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_DisposeSeedProvider
  commentId: P:wan24.Crypto.BC.AutoSeedRng.DisposeSeedProvider
  fullName: wan24.Crypto.BC.AutoSeedRng.DisposeSeedProvider
  nameWithType: AutoSeedRng.DisposeSeedProvider
- uid: wan24.Crypto.BC.AutoSeedRng.DisposeSeedProvider*
  name: DisposeSeedProvider
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_DisposeSeedProvider_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.DisposeSeedProvider
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.DisposeSeedProvider
  nameWithType: AutoSeedRng.DisposeSeedProvider
- uid: wan24.Crypto.BC.AutoSeedRng.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.AutoSeedRng.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.AutoSeedRng.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.FillBytes(System.Span(Of Byte))
  nameWithType: AutoSeedRng.FillBytes(in Span<byte>)
  nameWithType.vb: AutoSeedRng.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.AutoSeedRng.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_FillBytes_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.FillBytes
  nameWithType: AutoSeedRng.FillBytes
- uid: wan24.Crypto.BC.AutoSeedRng.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.AutoSeedRng.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.AutoSeedRng.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: AutoSeedRng.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: AutoSeedRng.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.AutoSeedRng.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.FillBytesAsync
  nameWithType: AutoSeedRng.FillBytesAsync
- uid: wan24.Crypto.BC.AutoSeedRng.LastException
  name: LastException
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_LastException
  commentId: P:wan24.Crypto.BC.AutoSeedRng.LastException
  fullName: wan24.Crypto.BC.AutoSeedRng.LastException
  nameWithType: AutoSeedRng.LastException
- uid: wan24.Crypto.BC.AutoSeedRng.LastException*
  name: LastException
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_LastException_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.LastException
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.LastException
  nameWithType: AutoSeedRng.LastException
- uid: wan24.Crypto.BC.AutoSeedRng.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.AutoSeedRng.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.AutoSeedRng.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.NextBytes(Byte())
  nameWithType: AutoSeedRng.NextBytes(byte[])
  nameWithType.vb: AutoSeedRng.NextBytes(Byte())
- uid: wan24.Crypto.BC.AutoSeedRng.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.AutoSeedRng.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.AutoSeedRng.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.NextBytes(Byte(), Integer, Integer)
  nameWithType: AutoSeedRng.NextBytes(byte[], int, int)
  nameWithType.vb: AutoSeedRng.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.AutoSeedRng.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.AutoSeedRng.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.AutoSeedRng.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.AutoSeedRng.NextBytes(System.Span(Of Byte))
  nameWithType: AutoSeedRng.NextBytes(Span<byte>)
  nameWithType.vb: AutoSeedRng.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.AutoSeedRng.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_NextBytes_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.NextBytes
  nameWithType: AutoSeedRng.NextBytes
- uid: wan24.Crypto.BC.AutoSeedRng.OnSeedError
  name: OnSeedError
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_OnSeedError
  commentId: E:wan24.Crypto.BC.AutoSeedRng.OnSeedError
  fullName: wan24.Crypto.BC.AutoSeedRng.OnSeedError
  nameWithType: AutoSeedRng.OnSeedError
- uid: wan24.Crypto.BC.AutoSeedRng.RaiseOnSeedError
  name: RaiseOnSeedError()
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_RaiseOnSeedError
  commentId: M:wan24.Crypto.BC.AutoSeedRng.RaiseOnSeedError
  fullName: wan24.Crypto.BC.AutoSeedRng.RaiseOnSeedError()
  nameWithType: AutoSeedRng.RaiseOnSeedError()
- uid: wan24.Crypto.BC.AutoSeedRng.RaiseOnSeedError*
  name: RaiseOnSeedError
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_RaiseOnSeedError_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.RaiseOnSeedError
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.RaiseOnSeedError
  nameWithType: AutoSeedRng.RaiseOnSeedError
- uid: wan24.Crypto.BC.AutoSeedRng.Rng
  name: Rng
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_Rng
  commentId: P:wan24.Crypto.BC.AutoSeedRng.Rng
  fullName: wan24.Crypto.BC.AutoSeedRng.Rng
  nameWithType: AutoSeedRng.Rng
- uid: wan24.Crypto.BC.AutoSeedRng.Rng*
  name: Rng
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_Rng_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.Rng
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.Rng
  nameWithType: AutoSeedRng.Rng
- uid: wan24.Crypto.BC.AutoSeedRng.SeedAsync
  name: SeedAsync()
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedAsync
  commentId: M:wan24.Crypto.BC.AutoSeedRng.SeedAsync
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedAsync()
  nameWithType: AutoSeedRng.SeedAsync()
- uid: wan24.Crypto.BC.AutoSeedRng.SeedAsync*
  name: SeedAsync
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedAsync_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.SeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedAsync
  nameWithType: AutoSeedRng.SeedAsync
- uid: wan24.Crypto.BC.AutoSeedRng.SeedEvent
  name: SeedEvent
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedEvent
  commentId: F:wan24.Crypto.BC.AutoSeedRng.SeedEvent
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedEvent
  nameWithType: AutoSeedRng.SeedEvent
- uid: wan24.Crypto.BC.AutoSeedRng.SeedInterval
  name: SeedInterval
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedInterval
  commentId: P:wan24.Crypto.BC.AutoSeedRng.SeedInterval
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedInterval
  nameWithType: AutoSeedRng.SeedInterval
- uid: wan24.Crypto.BC.AutoSeedRng.SeedInterval*
  name: SeedInterval
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedInterval_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.SeedInterval
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedInterval
  nameWithType: AutoSeedRng.SeedInterval
- uid: wan24.Crypto.BC.AutoSeedRng.SeedLength
  name: SeedLength
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedLength
  commentId: P:wan24.Crypto.BC.AutoSeedRng.SeedLength
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedLength
  nameWithType: AutoSeedRng.SeedLength
- uid: wan24.Crypto.BC.AutoSeedRng.SeedLength*
  name: SeedLength
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedLength_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.SeedLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedLength
  nameWithType: AutoSeedRng.SeedLength
- uid: wan24.Crypto.BC.AutoSeedRng.SeedProvider
  name: SeedProvider
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedProvider
  commentId: P:wan24.Crypto.BC.AutoSeedRng.SeedProvider
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedProvider
  nameWithType: AutoSeedRng.SeedProvider
- uid: wan24.Crypto.BC.AutoSeedRng.SeedProvider*
  name: SeedProvider
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedProvider_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.SeedProvider
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedProvider
  nameWithType: AutoSeedRng.SeedProvider
- uid: wan24.Crypto.BC.AutoSeedRng.SeedTask
  name: SeedTask
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedTask
  commentId: F:wan24.Crypto.BC.AutoSeedRng.SeedTask
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedTask
  nameWithType: AutoSeedRng.SeedTask
- uid: wan24.Crypto.BC.AutoSeedRng.SeedTimeoutCancellation
  name: SeedTimeoutCancellation
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedTimeoutCancellation
  commentId: F:wan24.Crypto.BC.AutoSeedRng.SeedTimeoutCancellation
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedTimeoutCancellation
  nameWithType: AutoSeedRng.SeedTimeoutCancellation
- uid: wan24.Crypto.BC.AutoSeedRng.SeedingType
  name: SeedingType
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedingType
  commentId: P:wan24.Crypto.BC.AutoSeedRng.SeedingType
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedingType
  nameWithType: AutoSeedRng.SeedingType
- uid: wan24.Crypto.BC.AutoSeedRng.SeedingType*
  name: SeedingType
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng_SeedingType_
  commentId: Overload:wan24.Crypto.BC.AutoSeedRng.SeedingType
  isSpec: "True"
  fullName: wan24.Crypto.BC.AutoSeedRng.SeedingType
  nameWithType: AutoSeedRng.SeedingType
- uid: wan24.Crypto.BC.AutoSeedRng._SeedInterval
  name: _SeedInterval
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng__SeedInterval
  commentId: F:wan24.Crypto.BC.AutoSeedRng._SeedInterval
  fullName: wan24.Crypto.BC.AutoSeedRng._SeedInterval
  nameWithType: AutoSeedRng._SeedInterval
- uid: wan24.Crypto.BC.AutoSeedRng._Seeding
  name: _Seeding
  href: api/wan24.Crypto.BC.AutoSeedRng.html#wan24_Crypto_BC_AutoSeedRng__Seeding
  commentId: F:wan24.Crypto.BC.AutoSeedRng._Seeding
  fullName: wan24.Crypto.BC.AutoSeedRng._Seeding
  nameWithType: AutoSeedRng._Seeding
- uid: wan24.Crypto.BC.AutoSeedRngTypes
  name: AutoSeedRngTypes
  href: api/wan24.Crypto.BC.AutoSeedRngTypes.html
  commentId: T:wan24.Crypto.BC.AutoSeedRngTypes
  fullName: wan24.Crypto.BC.AutoSeedRngTypes
  nameWithType: AutoSeedRngTypes
- uid: wan24.Crypto.BC.AutoSeedRngTypes.AfterRndConsumed
  name: AfterRndConsumed
  href: api/wan24.Crypto.BC.AutoSeedRngTypes.html#wan24_Crypto_BC_AutoSeedRngTypes_AfterRndConsumed
  commentId: F:wan24.Crypto.BC.AutoSeedRngTypes.AfterRndConsumed
  fullName: wan24.Crypto.BC.AutoSeedRngTypes.AfterRndConsumed
  nameWithType: AutoSeedRngTypes.AfterRndConsumed
- uid: wan24.Crypto.BC.AutoSeedRngTypes.Interval
  name: Interval
  href: api/wan24.Crypto.BC.AutoSeedRngTypes.html#wan24_Crypto_BC_AutoSeedRngTypes_Interval
  commentId: F:wan24.Crypto.BC.AutoSeedRngTypes.Interval
  fullName: wan24.Crypto.BC.AutoSeedRngTypes.Interval
  nameWithType: AutoSeedRngTypes.Interval
- uid: wan24.Crypto.BC.AutoSeedRngTypes.Permanent
  name: Permanent
  href: api/wan24.Crypto.BC.AutoSeedRngTypes.html#wan24_Crypto_BC_AutoSeedRngTypes_Permanent
  commentId: F:wan24.Crypto.BC.AutoSeedRngTypes.Permanent
  fullName: wan24.Crypto.BC.AutoSeedRngTypes.Permanent
  nameWithType: AutoSeedRngTypes.Permanent
- uid: wan24.Crypto.BC.BcEllipticCurves
  name: BcEllipticCurves
  href: api/wan24.Crypto.BC.BcEllipticCurves.html
  commentId: T:wan24.Crypto.BC.BcEllipticCurves
  fullName: wan24.Crypto.BC.BcEllipticCurves
  nameWithType: BcEllipticCurves
- uid: wan24.Crypto.BC.BcEllipticCurves.DenyCurve(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters@)
  name: DenyCurve(in ECDomainParameters)
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_DenyCurve_Org_BouncyCastle_Crypto_Parameters_ECDomainParameters__
  commentId: M:wan24.Crypto.BC.BcEllipticCurves.DenyCurve(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters@)
  name.vb: DenyCurve(ECDomainParameters)
  fullName: wan24.Crypto.BC.BcEllipticCurves.DenyCurve(in Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  fullName.vb: wan24.Crypto.BC.BcEllipticCurves.DenyCurve(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  nameWithType: BcEllipticCurves.DenyCurve(in ECDomainParameters)
  nameWithType.vb: BcEllipticCurves.DenyCurve(ECDomainParameters)
- uid: wan24.Crypto.BC.BcEllipticCurves.DenyCurve*
  name: DenyCurve
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_DenyCurve_
  commentId: Overload:wan24.Crypto.BC.BcEllipticCurves.DenyCurve
  isSpec: "True"
  fullName: wan24.Crypto.BC.BcEllipticCurves.DenyCurve
  nameWithType: BcEllipticCurves.DenyCurve
- uid: wan24.Crypto.BC.BcEllipticCurves.GetCurve(System.Int32@)
  name: GetCurve(in int)
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_GetCurve_System_Int32__
  commentId: M:wan24.Crypto.BC.BcEllipticCurves.GetCurve(System.Int32@)
  name.vb: GetCurve(Integer)
  fullName: wan24.Crypto.BC.BcEllipticCurves.GetCurve(in int)
  fullName.vb: wan24.Crypto.BC.BcEllipticCurves.GetCurve(Integer)
  nameWithType: BcEllipticCurves.GetCurve(in int)
  nameWithType.vb: BcEllipticCurves.GetCurve(Integer)
- uid: wan24.Crypto.BC.BcEllipticCurves.GetCurve*
  name: GetCurve
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_GetCurve_
  commentId: Overload:wan24.Crypto.BC.BcEllipticCurves.GetCurve
  isSpec: "True"
  fullName: wan24.Crypto.BC.BcEllipticCurves.GetCurve
  nameWithType: BcEllipticCurves.GetCurve
- uid: wan24.Crypto.BC.BcEllipticCurves.GetKeySize(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters@)
  name: GetKeySize(in ECDomainParameters)
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_GetKeySize_Org_BouncyCastle_Crypto_Parameters_ECDomainParameters__
  commentId: M:wan24.Crypto.BC.BcEllipticCurves.GetKeySize(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters@)
  name.vb: GetKeySize(ECDomainParameters)
  fullName: wan24.Crypto.BC.BcEllipticCurves.GetKeySize(in Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  fullName.vb: wan24.Crypto.BC.BcEllipticCurves.GetKeySize(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  nameWithType: BcEllipticCurves.GetKeySize(in ECDomainParameters)
  nameWithType.vb: BcEllipticCurves.GetKeySize(ECDomainParameters)
- uid: wan24.Crypto.BC.BcEllipticCurves.GetKeySize*
  name: GetKeySize
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_GetKeySize_
  commentId: Overload:wan24.Crypto.BC.BcEllipticCurves.GetKeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BcEllipticCurves.GetKeySize
  nameWithType: BcEllipticCurves.GetKeySize
- uid: wan24.Crypto.BC.BcEllipticCurves.IsCurveAllowed(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters@)
  name: IsCurveAllowed(in ECDomainParameters)
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_IsCurveAllowed_Org_BouncyCastle_Crypto_Parameters_ECDomainParameters__
  commentId: M:wan24.Crypto.BC.BcEllipticCurves.IsCurveAllowed(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters@)
  name.vb: IsCurveAllowed(ECDomainParameters)
  fullName: wan24.Crypto.BC.BcEllipticCurves.IsCurveAllowed(in Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  fullName.vb: wan24.Crypto.BC.BcEllipticCurves.IsCurveAllowed(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  nameWithType: BcEllipticCurves.IsCurveAllowed(in ECDomainParameters)
  nameWithType.vb: BcEllipticCurves.IsCurveAllowed(ECDomainParameters)
- uid: wan24.Crypto.BC.BcEllipticCurves.IsCurveAllowed*
  name: IsCurveAllowed
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_IsCurveAllowed_
  commentId: Overload:wan24.Crypto.BC.BcEllipticCurves.IsCurveAllowed
  isSpec: "True"
  fullName: wan24.Crypto.BC.BcEllipticCurves.IsCurveAllowed
  nameWithType: BcEllipticCurves.IsCurveAllowed
- uid: wan24.Crypto.BC.BcEllipticCurves.SECP256R1_CURVE
  name: SECP256R1_CURVE
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_SECP256R1_CURVE
  commentId: F:wan24.Crypto.BC.BcEllipticCurves.SECP256R1_CURVE
  fullName: wan24.Crypto.BC.BcEllipticCurves.SECP256R1_CURVE
  nameWithType: BcEllipticCurves.SECP256R1_CURVE
- uid: wan24.Crypto.BC.BcEllipticCurves.SECP384R1_CURVE
  name: SECP384R1_CURVE
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_SECP384R1_CURVE
  commentId: F:wan24.Crypto.BC.BcEllipticCurves.SECP384R1_CURVE
  fullName: wan24.Crypto.BC.BcEllipticCurves.SECP384R1_CURVE
  nameWithType: BcEllipticCurves.SECP384R1_CURVE
- uid: wan24.Crypto.BC.BcEllipticCurves.SECP521R1_CURVE
  name: SECP521R1_CURVE
  href: api/wan24.Crypto.BC.BcEllipticCurves.html#wan24_Crypto_BC_BcEllipticCurves_SECP521R1_CURVE
  commentId: F:wan24.Crypto.BC.BcEllipticCurves.SECP521R1_CURVE
  fullName: wan24.Crypto.BC.BcEllipticCurves.SECP521R1_CURVE
  nameWithType: BcEllipticCurves.SECP521R1_CURVE
- uid: wan24.Crypto.BC.Bootstrap
  name: Bootstrap
  href: api/wan24.Crypto.BC.Bootstrap.html
  commentId: T:wan24.Crypto.BC.Bootstrap
  fullName: wan24.Crypto.BC.Bootstrap
  nameWithType: Bootstrap
- uid: wan24.Crypto.BC.Bootstrap.Boot
  name: Boot()
  href: api/wan24.Crypto.BC.Bootstrap.html#wan24_Crypto_BC_Bootstrap_Boot
  commentId: M:wan24.Crypto.BC.Bootstrap.Boot
  fullName: wan24.Crypto.BC.Bootstrap.Boot()
  nameWithType: Bootstrap.Boot()
- uid: wan24.Crypto.BC.Bootstrap.Boot*
  name: Boot
  href: api/wan24.Crypto.BC.Bootstrap.html#wan24_Crypto_BC_Bootstrap_Boot_
  commentId: Overload:wan24.Crypto.BC.Bootstrap.Boot
  isSpec: "True"
  fullName: wan24.Crypto.BC.Bootstrap.Boot
  nameWithType: Bootstrap.Boot
- uid: wan24.Crypto.BC.BouncyCastle
  name: BouncyCastle
  href: api/wan24.Crypto.BC.BouncyCastle.html
  commentId: T:wan24.Crypto.BC.BouncyCastle
  fullName: wan24.Crypto.BC.BouncyCastle
  nameWithType: BouncyCastle
- uid: wan24.Crypto.BC.BouncyCastle.RegisterNetAlgorithms
  name: RegisterNetAlgorithms()
  href: api/wan24.Crypto.BC.BouncyCastle.html#wan24_Crypto_BC_BouncyCastle_RegisterNetAlgorithms
  commentId: M:wan24.Crypto.BC.BouncyCastle.RegisterNetAlgorithms
  fullName: wan24.Crypto.BC.BouncyCastle.RegisterNetAlgorithms()
  nameWithType: BouncyCastle.RegisterNetAlgorithms()
- uid: wan24.Crypto.BC.BouncyCastle.RegisterNetAlgorithms*
  name: RegisterNetAlgorithms
  href: api/wan24.Crypto.BC.BouncyCastle.html#wan24_Crypto_BC_BouncyCastle_RegisterNetAlgorithms_
  commentId: Overload:wan24.Crypto.BC.BouncyCastle.RegisterNetAlgorithms
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastle.RegisterNetAlgorithms
  nameWithType: BouncyCastle.RegisterNetAlgorithms
- uid: wan24.Crypto.BC.BouncyCastle.ReplaceNetAlgorithms
  name: ReplaceNetAlgorithms()
  href: api/wan24.Crypto.BC.BouncyCastle.html#wan24_Crypto_BC_BouncyCastle_ReplaceNetAlgorithms
  commentId: M:wan24.Crypto.BC.BouncyCastle.ReplaceNetAlgorithms
  fullName: wan24.Crypto.BC.BouncyCastle.ReplaceNetAlgorithms()
  nameWithType: BouncyCastle.ReplaceNetAlgorithms()
- uid: wan24.Crypto.BC.BouncyCastle.ReplaceNetAlgorithms*
  name: ReplaceNetAlgorithms
  href: api/wan24.Crypto.BC.BouncyCastle.html#wan24_Crypto_BC_BouncyCastle_ReplaceNetAlgorithms_
  commentId: Overload:wan24.Crypto.BC.BouncyCastle.ReplaceNetAlgorithms
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastle.ReplaceNetAlgorithms
  nameWithType: BouncyCastle.ReplaceNetAlgorithms
- uid: wan24.Crypto.BC.BouncyCastle.SetDefaults(System.Boolean@)
  name: SetDefaults(in bool)
  href: api/wan24.Crypto.BC.BouncyCastle.html#wan24_Crypto_BC_BouncyCastle_SetDefaults_System_Boolean__
  commentId: M:wan24.Crypto.BC.BouncyCastle.SetDefaults(System.Boolean@)
  name.vb: SetDefaults(Boolean)
  fullName: wan24.Crypto.BC.BouncyCastle.SetDefaults(in bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastle.SetDefaults(Boolean)
  nameWithType: BouncyCastle.SetDefaults(in bool)
  nameWithType.vb: BouncyCastle.SetDefaults(Boolean)
- uid: wan24.Crypto.BC.BouncyCastle.SetDefaults*
  name: SetDefaults
  href: api/wan24.Crypto.BC.BouncyCastle.html#wan24_Crypto_BC_BouncyCastle_SetDefaults_
  commentId: Overload:wan24.Crypto.BC.BouncyCastle.SetDefaults
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastle.SetDefaults
  nameWithType: BouncyCastle.SetDefaults
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1
  name: BouncyCastleAeadCipherAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1
  name.vb: BouncyCastleAeadCipherAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T)
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleAeadCipherAlgorithmBase(string, int)
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.BouncyCastleAeadCipherAlgorithmBase(string, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).New(String, Integer)
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.BouncyCastleAeadCipherAlgorithmBase(string, int)
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).New(String, Integer)
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.#ctor*
  name: BouncyCastleAeadCipherAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.BouncyCastleAeadCipherAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).New
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.BouncyCastleAeadCipherAlgorithmBase
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).New
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.CreateCipher
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).CreateCipher
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.CreateCipher
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).CreateCipher
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.CreateParameters(byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).CreateParameters(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.CreateParameters(byte[], CryptoOptions)
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.CreateParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).CreateParameters
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.CreateParameters
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).CreateParameters
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetDecryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  name: GetDecryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_GetDecryptor_System_IO_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetDecryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.GetDecryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).GetDecryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.GetDecryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).GetDecryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetDecryptor*
  name: GetDecryptor
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_GetDecryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetDecryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.GetDecryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).GetDecryptor
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.GetDecryptor
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).GetDecryptor
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetDecryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  name: GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_GetDecryptorAsync_System_IO_Stream_wan24_Crypto_CryptoOptions_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetDecryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.GetDecryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).GetDecryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetDecryptorAsync*
  name: GetDecryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_GetDecryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetDecryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.GetDecryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).GetDecryptorAsync
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.GetDecryptorAsync
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).GetDecryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetEncryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  name: GetEncryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_GetEncryptor_System_IO_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetEncryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.GetEncryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).GetEncryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.GetEncryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).GetEncryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetEncryptor*
  name: GetEncryptor
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_GetEncryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetEncryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.GetEncryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).GetEncryptor
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.GetEncryptor
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).GetEncryptor
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetEncryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  name: GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_GetEncryptorAsync_System_IO_Stream_wan24_Crypto_CryptoOptions_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetEncryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.GetEncryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).GetEncryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetEncryptorAsync*
  name: GetEncryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleAeadCipherAlgorithmBase_1_GetEncryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase`1.GetEncryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase<T>.GetEncryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleAeadCipherAlgorithmBase(Of T).GetEncryptorAsync
  nameWithType: BouncyCastleAeadCipherAlgorithmBase<T>.GetEncryptorAsync
  nameWithType.vb: BouncyCastleAeadCipherAlgorithmBase(Of T).GetEncryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7
  name: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7
  name.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.#ctor(System.String,System.Int32,wan24.Crypto.AsymmetricAlgorithmUsages,System.Boolean,System.Collections.Frozen.FrozenSet{System.Int32},System.Boolean,System.Int32)
  name: BouncyCastleAsymmetricAlgorithmBase(string, int, AsymmetricAlgorithmUsages, bool, FrozenSet<int>, bool, int)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7__ctor_System_String_System_Int32_wan24_Crypto_AsymmetricAlgorithmUsages_System_Boolean_System_Collections_Frozen_FrozenSet_System_Int32__System_Boolean_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.#ctor(System.String,System.Int32,wan24.Crypto.AsymmetricAlgorithmUsages,System.Boolean,System.Collections.Frozen.FrozenSet{System.Int32},System.Boolean,System.Int32)
  name.vb: New(String, Integer, AsymmetricAlgorithmUsages, Boolean, FrozenSet(Of Integer), Boolean, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase(string, int, wan24.Crypto.AsymmetricAlgorithmUsages, bool, System.Collections.Frozen.FrozenSet<int>, bool, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).New(String, Integer, wan24.Crypto.AsymmetricAlgorithmUsages, Boolean, System.Collections.Frozen.FrozenSet(Of Integer), Boolean, Integer)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase(string, int, AsymmetricAlgorithmUsages, bool, FrozenSet<int>, bool, int)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).New(String, Integer, AsymmetricAlgorithmUsages, Boolean, FrozenSet(Of Integer), Boolean, Integer)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.#ctor*
  name: BouncyCastleAsymmetricAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).New
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.AllowedKeySizes
  name: AllowedKeySizes
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_AllowedKeySizes
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.AllowedKeySizes
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.AllowedKeySizes
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).AllowedKeySizes
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.AllowedKeySizes
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).AllowedKeySizes
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.AllowedKeySizes*
  name: AllowedKeySizes
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_AllowedKeySizes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.AllowedKeySizes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.AllowedKeySizes
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).AllowedKeySizes
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.AllowedKeySizes
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).AllowedKeySizes
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom,`3,wan24.Crypto.CryptoOptions)
  name: CreateKeyGenParameters(SecureRandom, tParam, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_CreateKeyGenParameters_Org_BouncyCastle_Security_SecureRandom__3_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom,`3,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom, tParam, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyGenParameters(Org.BouncyCastle.Security.SecureRandom, tParam, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyGenParameters(SecureRandom, tParam, CryptoOptions)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyGenParameters(SecureRandom, tParam, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.CreateKeyGenParameters*
  name: CreateKeyGenParameters
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_CreateKeyGenParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.CreateKeyGenParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyGenParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyGenParameters
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyGenParameters
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyGenParameters
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.DeserializePrivateKeyV1(System.Byte[])
  name: DeserializePrivateKeyV1(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_DeserializePrivateKeyV1_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.DeserializePrivateKeyV1(System.Byte[])
  name.vb: DeserializePrivateKeyV1(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.DeserializePrivateKeyV1(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).DeserializePrivateKeyV1(Byte())
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.DeserializePrivateKeyV1(byte[])
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).DeserializePrivateKeyV1(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.DeserializePrivateKeyV1*
  name: DeserializePrivateKeyV1
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_DeserializePrivateKeyV1_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.DeserializePrivateKeyV1
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.DeserializePrivateKeyV1
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).DeserializePrivateKeyV1
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.DeserializePrivateKeyV1
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).DeserializePrivateKeyV1
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.GetEngineParameters(wan24.Crypto.CryptoOptions)
  name: GetEngineParameters(CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_GetEngineParameters_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.GetEngineParameters(wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).GetEngineParameters(wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.GetEngineParameters(CryptoOptions)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).GetEngineParameters(CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.GetEngineParameters*
  name: GetEngineParameters
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_GetEngineParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.GetEngineParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.GetEngineParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).GetEngineParameters
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.GetEngineParameters
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).GetEngineParameters
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Instance
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Instance
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Instance
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Instance
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Instance
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Instance
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Instance
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.IsEllipticCurveAlgorithm
  name: IsEllipticCurveAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_IsEllipticCurveAlgorithm
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.IsEllipticCurveAlgorithm
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsEllipticCurveAlgorithm
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsEllipticCurveAlgorithm
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsEllipticCurveAlgorithm
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsEllipticCurveAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.IsEllipticCurveAlgorithm*
  name: IsEllipticCurveAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_IsEllipticCurveAlgorithm_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.IsEllipticCurveAlgorithm
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsEllipticCurveAlgorithm
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsEllipticCurveAlgorithm
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsEllipticCurveAlgorithm
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsEllipticCurveAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_IsPostQuantum
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.IsPostQuantum
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsPostQuantum
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsPostQuantum
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsPostQuantum
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsPostQuantum
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsPostQuantum
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsPostQuantum
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.IsPostQuantum
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).IsPostQuantum
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Register
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Register()
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Register()
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Register()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Register
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Register
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Register
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Usages
  name: Usages
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_Usages
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Usages
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Usages
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Usages
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Usages
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Usages
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Usages*
  name: Usages
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_7_Usages_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`7.Usages
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Usages
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Usages
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.Usages
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).Usages
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8
  name: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8
  name.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.#ctor(System.String,System.Int32,wan24.Crypto.AsymmetricAlgorithmUsages,System.Boolean,System.Collections.Frozen.FrozenSet{System.Int32},System.Boolean,System.Int32)
  name: BouncyCastleAsymmetricAlgorithmBase(string, int, AsymmetricAlgorithmUsages, bool, FrozenSet<int>, bool, int)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8__ctor_System_String_System_Int32_wan24_Crypto_AsymmetricAlgorithmUsages_System_Boolean_System_Collections_Frozen_FrozenSet_System_Int32__System_Boolean_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.#ctor(System.String,System.Int32,wan24.Crypto.AsymmetricAlgorithmUsages,System.Boolean,System.Collections.Frozen.FrozenSet{System.Int32},System.Boolean,System.Int32)
  name.vb: New(String, Integer, AsymmetricAlgorithmUsages, Boolean, FrozenSet(Of Integer), Boolean, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase(string, int, wan24.Crypto.AsymmetricAlgorithmUsages, bool, System.Collections.Frozen.FrozenSet<int>, bool, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).New(String, Integer, wan24.Crypto.AsymmetricAlgorithmUsages, Boolean, System.Collections.Frozen.FrozenSet(Of Integer), Boolean, Integer)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase(string, int, AsymmetricAlgorithmUsages, bool, FrozenSet<int>, bool, int)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).New(String, Integer, AsymmetricAlgorithmUsages, Boolean, FrozenSet(Of Integer), Boolean, Integer)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.#ctor*
  name: BouncyCastleAsymmetricAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).New
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricAlgorithmBase
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name: CreateKeyPair(CryptoOptions?)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_CreateKeyPair_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyPair(wan24.Crypto.CryptoOptions)
  name.vb: CreateKeyPair(CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyPair(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyPair(wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyPair(CryptoOptions?)
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyPair(CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyPair*
  name: CreateKeyPair
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase-8.html#wan24_Crypto_BC_BouncyCastleAsymmetricAlgorithmBase_8_CreateKeyPair_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase`8.CreateKeyPair
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyPair
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyPair
  nameWithType: BouncyCastleAsymmetricAlgorithmBase<tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal>.CreateKeyPair
  nameWithType.vb: BouncyCastleAsymmetricAlgorithmBase(Of tPublic, tPrivate, tKeyGen, tKeyGenParam, tParam, tPublicKey, tPrivateKey, tFinal).CreateKeyPair
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5
  name: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5
  name.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor(System.String)
  name: BouncyCastleAsymmetricNonPqcPrivateKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(String, AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor(System.String,`3)
  name: BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, tPrivateKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5__ctor_System_String__3_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor(System.String,`3)
  name.vb: New(String, tPrivateKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, tPrivateKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, tPrivateKey)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase(string, tPrivateKey)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, tPrivateKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor*
  name: BouncyCastleAsymmetricNonPqcPrivateKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricNonPqcPrivateKeyBase
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.DeserializeFullKeyData
  name: DeserializeFullKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5_DeserializeFullKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.DeserializeFullKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData()
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData()
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.DeserializeFullKeyData*
  name: DeserializeFullKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5_DeserializeFullKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.DeserializeFullKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.DeserializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData()
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.SerializeFullKeyData
  name: SerializeFullKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5_SerializeFullKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.SerializeFullKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData()
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData()
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.SerializeFullKeyData*
  name: SerializeFullKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5_SerializeFullKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.SerializeFullKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5_SerializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.SerializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData()
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateKeyBase_5_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase`5.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2-6.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6
  name.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor(System.String)
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2_6__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2_6__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(String, AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2_6__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor(System.String,`3)
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, tPrivateKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2_6__ctor_System_String__3_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor(System.String,`3)
  name.vb: New(String, tPrivateKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, tPrivateKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, tPrivateKey)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(string, tPrivateKey)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, tPrivateKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor*
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2_6__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.SignHashRaw(System.Byte[])
  name: SignHashRaw(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2_6_SignHashRaw_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.SignHashRaw(System.Byte[])
  name.vb: SignHashRaw(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw(Byte())
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw(byte[])
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.SignHashRaw*
  name: SignHashRaw
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2_6_SignHashRaw_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2`6.SignHashRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase2(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase-6.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6
  name.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor(System.String)
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase_6__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase_6__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(String, AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase_6__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor(System.String,`3)
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, tPrivateKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase_6__ctor_System_String__3_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor(System.String,`3)
  name.vb: New(String, tPrivateKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, tPrivateKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, tPrivateKey)
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(string, tPrivateKey)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, tPrivateKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor*
  name: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase_6__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.SignHashRaw(System.Byte[])
  name: SignHashRaw(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase_6_SignHashRaw_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.SignHashRaw(System.Byte[])
  name.vb: SignHashRaw(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw(Byte())
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw(byte[])
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.SignHashRaw*
  name: SignHashRaw
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase_6_SignHashRaw_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase`6.SignHashRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw
  nameWithType: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3
  name: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3
  name.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.#ctor(System.String)
  name: BouncyCastleAsymmetricNonPqcPublicKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicKeyBase_3__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricNonPqcPublicKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricNonPqcPublicKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricNonPqcPublicKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicKeyBase_3__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricNonPqcPublicKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricNonPqcPublicKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.#ctor(System.String,`1)
  name: BouncyCastleAsymmetricNonPqcPublicKeyBase(string, tPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicKeyBase_3__ctor_System_String__1_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.#ctor(System.String,`1)
  name.vb: New(String, tPublicKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricNonPqcPublicKeyBase(string, tPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, tPublicKey)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricNonPqcPublicKeyBase(string, tPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, tPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.#ctor*
  name: BouncyCastleAsymmetricNonPqcPublicKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicKeyBase_3__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricNonPqcPublicKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricNonPqcPublicKeyBase
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicKeyBase_3_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.DeserializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData()
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicKeyBase_3_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicKeyBase_3_SerializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.SerializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData()
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicKeyBase_3_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase`3.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData
  nameWithType: BouncyCastleAsymmetricNonPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4
  name.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.#ctor(System.String)
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2_4__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2_4__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.#ctor(System.String,`1)
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string, tPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2_4__ctor_System_String__1_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.#ctor(System.String,`1)
  name.vb: New(String, tPublicKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string, tPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, tPublicKey)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(string, tPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, tPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.#ctor*
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2_4__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).New
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name: ValidateSignatureInt(SignatureContainer, bool)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2_4_ValidateSignatureInt_wan24_Crypto_SignatureContainer_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name.vb: ValidateSignatureInt(SignatureContainer, Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt(wan24.Crypto.SignatureContainer, bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt(wan24.Crypto.SignatureContainer, Boolean)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt(SignatureContainer, bool)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt(SignatureContainer, Boolean)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.ValidateSignatureInt*
  name: ValidateSignatureInt
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2_4_ValidateSignatureInt_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.ValidateSignatureInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name: ValidateSignatureRaw(byte[], byte[], bool)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2_4_ValidateSignatureRaw_System_Byte___System_Byte___System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name.vb: ValidateSignatureRaw(Byte(), Byte(), Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw(byte[], byte[], bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw(Byte(), Byte(), Boolean)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw(byte[], byte[], bool)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw(Byte(), Byte(), Boolean)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.ValidateSignatureRaw*
  name: ValidateSignatureRaw
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2_4_ValidateSignatureRaw_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2`4.ValidateSignatureRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase2(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4
  name.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.#ctor(System.String)
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase_4__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase_4__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.#ctor(System.String,`1)
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string, tPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase_4__ctor_System_String__1_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.#ctor(System.String,`1)
  name.vb: New(String, tPublicKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string, tPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, tPublicKey)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(string, tPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, tPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.#ctor*
  name: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase_4__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name: ValidateSignatureInt(SignatureContainer, bool)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase_4_ValidateSignatureInt_wan24_Crypto_SignatureContainer_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name.vb: ValidateSignatureInt(SignatureContainer, Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt(wan24.Crypto.SignatureContainer, bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt(wan24.Crypto.SignatureContainer, Boolean)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt(SignatureContainer, bool)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt(SignatureContainer, Boolean)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.ValidateSignatureInt*
  name: ValidateSignatureInt
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase_4_ValidateSignatureInt_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.ValidateSignatureInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name: ValidateSignatureRaw(byte[], byte[], bool)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase_4_ValidateSignatureRaw_System_Byte___System_Byte___System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name.vb: ValidateSignatureRaw(Byte(), Byte(), Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw(byte[], byte[], bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw(Byte(), Byte(), Boolean)
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw(byte[], byte[], bool)
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw(Byte(), Byte(), Boolean)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.ValidateSignatureRaw*
  name: ValidateSignatureRaw
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase_4_ValidateSignatureRaw_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase`4.ValidateSignatureRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw
  nameWithType: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw
  nameWithType.vb: BouncyCastleAsymmetricNonPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5
  name: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5
  name.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor(System.String)
  name: BouncyCastleAsymmetricPqcPrivateKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricPqcPrivateKeyBase(string, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(String, AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase(string, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase(string, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPqcPrivateKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor(System.String,`3)
  name: BouncyCastleAsymmetricPqcPrivateKeyBase(string, tPrivateKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5__ctor_System_String__3_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor(System.String,`3)
  name.vb: New(String, tPrivateKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase(string, tPrivateKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, tPrivateKey)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase(string, tPrivateKey)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, tPrivateKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor*
  name: BouncyCastleAsymmetricPqcPrivateKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.DeserializeFullKeyData
  name: DeserializeFullKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_DeserializeFullKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.DeserializeFullKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData()
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.DeserializeFullKeyData*
  name: DeserializeFullKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_DeserializeFullKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.DeserializeFullKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.DeserializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData()
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.ExportBc
  name: ExportBc()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_ExportBc
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.ExportBc
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ExportBc()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ExportBc()
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ExportBc()
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ExportBc()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.ExportBc*
  name: ExportBc
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_ExportBc_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.ExportBc
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ExportBc
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ExportBc
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ExportBc
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ExportBc
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.ImportBc(System.Byte[]@)
  name: ImportBc(in byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_ImportBc_System_Byte____
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.ImportBc(System.Byte[]@)
  name.vb: ImportBc(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ImportBc(in byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ImportBc(Byte())
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ImportBc(in byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ImportBc(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.ImportBc*
  name: ImportBc
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_ImportBc_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.ImportBc
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ImportBc
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ImportBc
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ImportBc
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ImportBc
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.SerializeFullKeyData
  name: SerializeFullKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_SerializeFullKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.SerializeFullKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData()
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.SerializeFullKeyData*
  name: SerializeFullKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_SerializeFullKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.SerializeFullKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_SerializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.SerializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData()
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyBase_5_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase`5.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7
  name: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7
  name.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor(System.String)
  name: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(String, AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New(String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor(System.String,`3)
  name: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, tPrivateKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7__ctor_System_String__3_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor(System.String,`3)
  name.vb: New(String, tPrivateKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, tPrivateKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New(String, tPrivateKey)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(string, tPrivateKey)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New(String, tPrivateKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor*
  name: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.DeriveKey(System.Byte[])
  name: DeriveKey(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7_DeriveKey_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.DeriveKey(System.Byte[])
  name.vb: DeriveKey(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey(Byte())
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey(byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  name: DeriveKey(IAsymmetricPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7_DeriveKey_wan24_Crypto_IAsymmetricPublicKey_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey(wan24.Crypto.IAsymmetricPublicKey)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey(IAsymmetricPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey(IAsymmetricPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.DeriveKey*
  name: DeriveKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7_DeriveKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.DeriveKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.DeriveKey
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).DeriveKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name: GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7_GetKeyExchangeData_wan24_Crypto_IAsymmetricPublicKey_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey,wan24.Crypto.CryptoOptions)
  name.vb: GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey?, wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).GetKeyExchangeData(wan24.Crypto.IAsymmetricPublicKey, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.GetKeyExchangeData(IAsymmetricPublicKey?, CryptoOptions?)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).GetKeyExchangeData(IAsymmetricPublicKey, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.GetKeyExchangeData*
  name: GetKeyExchangeData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase-7.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase_7_GetKeyExchangeData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase`7.GetKeyExchangeData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.GetKeyExchangeData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).GetKeyExchangeData
  nameWithType: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal>.GetKeyExchangeData
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateKeyExchangeKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tGenerator, tExtractor, tFinal).GetKeyExchangeData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6
  name: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase-6.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6
  name.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
  nameWithType: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor(System.String)
  name: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateSignatureKeyBase_6__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateSignatureKeyBase_6__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(String, AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateSignatureKeyBase_6__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor(System.String,`3)
  name: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, tPrivateKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateSignatureKeyBase_6__ctor_System_String__3_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor(System.String,`3)
  name.vb: New(String, tPrivateKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, tPrivateKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, tPrivateKey)
  nameWithType: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(string, tPrivateKey)
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New(String, tPrivateKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor*
  name: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateSignatureKeyBase_6__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New
  nameWithType: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.SignHashRaw(System.Byte[])
  name: SignHashRaw(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateSignatureKeyBase_6_SignHashRaw_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.SignHashRaw(System.Byte[])
  name.vb: SignHashRaw(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw(Byte())
  nameWithType: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw(byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.SignHashRaw*
  name: SignHashRaw
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase-6.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPrivateSignatureKeyBase_6_SignHashRaw_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase`6.SignHashRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw
  nameWithType: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal>.SignHashRaw
  nameWithType.vb: BouncyCastleAsymmetricPqcPrivateSignatureKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tSigner, tFinal).SignHashRaw
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3
  name: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3
  name.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.#ctor(System.String)
  name: BouncyCastleAsymmetricPqcPublicKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPqcPublicKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPqcPublicKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPqcPublicKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPqcPublicKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPqcPublicKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.#ctor(System.String,`1)
  name: BouncyCastleAsymmetricPqcPublicKeyBase(string, tPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3__ctor_System_String__1_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.#ctor(System.String,`1)
  name.vb: New(String, tPublicKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPqcPublicKeyBase(string, tPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, tPublicKey)
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPqcPublicKeyBase(string, tPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, tPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.#ctor*
  name: BouncyCastleAsymmetricPqcPublicKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPqcPublicKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPqcPublicKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.DeserializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData()
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.ExportBc
  name: ExportBc()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3_ExportBc
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.ExportBc
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.ExportBc()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ExportBc()
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.ExportBc()
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ExportBc()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.ExportBc*
  name: ExportBc
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3_ExportBc_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.ExportBc
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.ExportBc
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ExportBc
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.ExportBc
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ExportBc
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.ImportBc(System.Byte[]@)
  name: ImportBc(in byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3_ImportBc_System_Byte____
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.ImportBc(System.Byte[]@)
  name.vb: ImportBc(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.ImportBc(in byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ImportBc(Byte())
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.ImportBc(in byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ImportBc(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.ImportBc*
  name: ImportBc
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3_ImportBc_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.ImportBc
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.ImportBc
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ImportBc
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.ImportBc
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ImportBc
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3_SerializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.SerializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData()
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicKeyBase_3_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase`3.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData
  nameWithType: BouncyCastleAsymmetricPqcPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4
  name: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4
  name.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.#ctor(System.String)
  name: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicSignatureKeyBase_4__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicSignatureKeyBase_4__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.#ctor(System.String,`1)
  name: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string, tPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicSignatureKeyBase_4__ctor_System_String__1_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.#ctor(System.String,`1)
  name.vb: New(String, tPublicKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string, tPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, tPublicKey)
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(string, tPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New(String, tPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.#ctor*
  name: BouncyCastleAsymmetricPqcPublicSignatureKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicSignatureKeyBase_4__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPublicSignatureKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.BouncyCastleAsymmetricPqcPublicSignatureKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name: ValidateSignatureInt(SignatureContainer, bool)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicSignatureKeyBase_4_ValidateSignatureInt_wan24_Crypto_SignatureContainer_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.ValidateSignatureInt(wan24.Crypto.SignatureContainer,System.Boolean)
  name.vb: ValidateSignatureInt(SignatureContainer, Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt(wan24.Crypto.SignatureContainer, bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt(wan24.Crypto.SignatureContainer, Boolean)
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt(SignatureContainer, bool)
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt(SignatureContainer, Boolean)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.ValidateSignatureInt*
  name: ValidateSignatureInt
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicSignatureKeyBase_4_ValidateSignatureInt_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.ValidateSignatureInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureInt
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureInt
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name: ValidateSignatureRaw(byte[], byte[], bool)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicSignatureKeyBase_4_ValidateSignatureRaw_System_Byte___System_Byte___System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.ValidateSignatureRaw(System.Byte[],System.Byte[],System.Boolean)
  name.vb: ValidateSignatureRaw(Byte(), Byte(), Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw(byte[], byte[], bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw(Byte(), Byte(), Boolean)
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw(byte[], byte[], bool)
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw(Byte(), Byte(), Boolean)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.ValidateSignatureRaw*
  name: ValidateSignatureRaw
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase-4.html#wan24_Crypto_BC_BouncyCastleAsymmetricPqcPublicSignatureKeyBase_4_ValidateSignatureRaw_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase`4.ValidateSignatureRaw
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw
  nameWithType: BouncyCastleAsymmetricPqcPublicSignatureKeyBase<tAlgo, tPublicKey, tSigner, tFinal>.ValidateSignatureRaw
  nameWithType.vb: BouncyCastleAsymmetricPqcPublicSignatureKeyBase(Of tAlgo, tPublicKey, tSigner, tFinal).ValidateSignatureRaw
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5
  name: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5
  name.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String)
  name: BouncyCastleAsymmetricPrivateKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name: BouncyCastleAsymmetricPrivateKeyBase(string, AsymmetricCipherKeyPair)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_System_String_Org_BouncyCastle_Crypto_AsymmetricCipherKeyPair_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  name.vb: New(String, AsymmetricCipherKeyPair)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(string, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair)
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(string, AsymmetricCipherKeyPair)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, AsymmetricCipherKeyPair)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPrivateKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,`3)
  name: BouncyCastleAsymmetricPrivateKeyBase(string, tPrivateKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_System_String__3_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor(System.String,`3)
  name.vb: New(String, tPrivateKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(string, tPrivateKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, tPrivateKey)
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase(string, tPrivateKey)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New(String, tPrivateKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor*
  name: BouncyCastleAsymmetricPrivateKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.BouncyCastleAsymmetricPrivateKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Bits
  name: Bits
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_Bits
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Bits
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Bits
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Bits
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Bits
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Bits
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Bits*
  name: Bits
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_Bits_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Bits
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Bits
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Bits
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Bits
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Bits
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeFullKeyData
  name: DeserializeFullKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_DeserializeFullKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeFullKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData()
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeFullKeyData*
  name: DeserializeFullKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_DeserializeFullKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeFullKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeFullKeyData
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeFullKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData()
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.DeserializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).DeserializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.ExportBc
  name: ExportBc()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_ExportBc
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.ExportBc
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ExportBc()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ExportBc()
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ExportBc()
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ExportBc()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.ExportBc*
  name: ExportBc
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_ExportBc_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.ExportBc
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ExportBc
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ExportBc
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ExportBc
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ExportBc
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.GetPublicKey(`3)
  name: GetPublicKey(tPrivateKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_GetPublicKey__3_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.GetPublicKey(`3)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.GetPublicKey(tPrivateKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).GetPublicKey(tPrivateKey)
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.GetPublicKey(tPrivateKey)
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).GetPublicKey(tPrivateKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.GetPublicKey*
  name: GetPublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_GetPublicKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.GetPublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.GetPublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).GetPublicKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.GetPublicKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).GetPublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.ImportBc(System.Byte[]@)
  name: ImportBc(in byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_ImportBc_System_Byte____
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.ImportBc(System.Byte[]@)
  name.vb: ImportBc(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ImportBc(in byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ImportBc(Byte())
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ImportBc(in byte[])
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ImportBc(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.ImportBc*
  name: ImportBc
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_ImportBc_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.ImportBc
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ImportBc
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ImportBc
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.ImportBc
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).ImportBc
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.IsBcImportExportImplemented
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).IsBcImportExportImplemented
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.IsBcImportExportImplemented
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).IsBcImportExportImplemented
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.IsBcImportExportImplemented
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).IsBcImportExportImplemented
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.IsBcImportExportImplemented
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).IsBcImportExportImplemented
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Keys
  name: Keys
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_Keys
  commentId: F:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.Keys
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Keys
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Keys
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.Keys
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).Keys
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PrivateKey
  name: PrivateKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_PrivateKey
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PrivateKey
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PrivateKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PrivateKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PrivateKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PrivateKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PrivateKey*
  name: PrivateKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_PrivateKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PrivateKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PrivateKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PrivateKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PrivateKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PrivateKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PublicKey
  name: PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_PublicKey
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PublicKey
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PublicKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PublicKey*
  name: PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_PublicKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PublicKey
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeFullKeyData
  name: SerializeFullKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_SerializeFullKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeFullKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData()
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeFullKeyData*
  name: SerializeFullKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_SerializeFullKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeFullKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeFullKeyData
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeFullKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_SerializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData()
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase-5.html#wan24_Crypto_BC_BouncyCastleAsymmetricPrivateKeyBase_5_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase`5.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData
  nameWithType: BouncyCastleAsymmetricPrivateKeyBase<tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal>.SerializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPrivateKeyBase(Of tPublic, tAlgo, tPublicKey, tPrivateKey, tFinal).SerializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3
  name: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html
  commentId: T:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3
  name.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String)
  name: BouncyCastleAsymmetricPublicKeyBase(string)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__ctor_System_String_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String)
  name.vb: New(String)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(string)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String)
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(string)
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String,System.Byte[])
  name: BouncyCastleAsymmetricPublicKeyBase(string, byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__ctor_System_String_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String,System.Byte[])
  name.vb: New(String, Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(string, byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, Byte())
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(string, byte[])
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String,`1)
  name: BouncyCastleAsymmetricPublicKeyBase(string, tPublicKey)
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__ctor_System_String__1_
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor(System.String,`1)
  name.vb: New(String, tPublicKey)
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(string, tPublicKey)
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, tPublicKey)
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase(string, tPublicKey)
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New(String, tPublicKey)
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor*
  name: BouncyCastleAsymmetricPublicKeyBase
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.BouncyCastleAsymmetricPublicKeyBase
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).New
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.DeserializeKeyData
  name: DeserializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_DeserializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.DeserializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData()
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.DeserializeKeyData*
  name: DeserializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_DeserializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.DeserializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.DeserializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).DeserializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.ExportBc
  name: ExportBc()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_ExportBc
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.ExportBc
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.ExportBc()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ExportBc()
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.ExportBc()
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ExportBc()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.ExportBc*
  name: ExportBc
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_ExportBc_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.ExportBc
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.ExportBc
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ExportBc
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.ExportBc
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ExportBc
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.GetCopy
  name: GetCopy()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_GetCopy
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.GetCopy
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.GetCopy()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).GetCopy()
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.GetCopy()
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).GetCopy()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.GetCopy*
  name: GetCopy
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_GetCopy_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.GetCopy
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.GetCopy
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).GetCopy
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.GetCopy
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).GetCopy
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.ImportBc(System.Byte[]@)
  name: ImportBc(in byte[])
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_ImportBc_System_Byte____
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.ImportBc(System.Byte[]@)
  name.vb: ImportBc(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.ImportBc(in byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ImportBc(Byte())
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.ImportBc(in byte[])
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ImportBc(Byte())
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.ImportBc*
  name: ImportBc
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_ImportBc_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.ImportBc
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.ImportBc
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ImportBc
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.ImportBc
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).ImportBc
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.IsBcImportExportImplemented
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_IsBcImportExportImplemented
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.IsBcImportExportImplemented
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.IsBcImportExportImplemented
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).IsBcImportExportImplemented
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.IsBcImportExportImplemented
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).IsBcImportExportImplemented
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.IsBcImportExportImplemented*
  name: IsBcImportExportImplemented
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_IsBcImportExportImplemented_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.IsBcImportExportImplemented
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.IsBcImportExportImplemented
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).IsBcImportExportImplemented
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.IsBcImportExportImplemented
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).IsBcImportExportImplemented
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.PublicKey
  name: PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_PublicKey
  commentId: P:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.PublicKey
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).PublicKey
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.PublicKey*
  name: PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_PublicKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.PublicKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).PublicKey
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).PublicKey
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.SerializeKeyData
  name: SerializeKeyData()
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_SerializeKeyData
  commentId: M:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.SerializeKeyData
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData()
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData()
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData()
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData()
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.SerializeKeyData*
  name: SerializeKeyData
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3_SerializeKeyData_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3.SerializeKeyData
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>.SerializeKeyData
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal).SerializeKeyData
- uid: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3._PublicKey
  name: _PublicKey
  href: api/wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase-3.html#wan24_Crypto_BC_BouncyCastleAsymmetricPublicKeyBase_3__PublicKey
  commentId: F:wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase`3._PublicKey
  fullName: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>._PublicKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)._PublicKey
  nameWithType: BouncyCastleAsymmetricPublicKeyBase<tAlgo, tPublicKey, tFinal>._PublicKey
  nameWithType.vb: BouncyCastleAsymmetricPublicKeyBase(Of tAlgo, tPublicKey, tFinal)._PublicKey
- uid: wan24.Crypto.BC.BouncyCastleBackupRng
  name: BouncyCastleBackupRng
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html
  commentId: T:wan24.Crypto.BC.BouncyCastleBackupRng
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng
  nameWithType: BouncyCastleBackupRng
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.#ctor(wan24.Crypto.BC.IBouncyCastleRng[])
  name: BouncyCastleBackupRng(params IBouncyCastleRng[])
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng__ctor_wan24_Crypto_BC_IBouncyCastleRng___
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.#ctor(wan24.Crypto.BC.IBouncyCastleRng[])
  name.vb: New(ParamArray IBouncyCastleRng())
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.BouncyCastleBackupRng(params wan24.Crypto.BC.IBouncyCastleRng[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.New(ParamArray wan24.Crypto.BC.IBouncyCastleRng())
  nameWithType: BouncyCastleBackupRng.BouncyCastleBackupRng(params IBouncyCastleRng[])
  nameWithType.vb: BouncyCastleBackupRng.New(ParamArray IBouncyCastleRng())
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.#ctor*
  name: BouncyCastleBackupRng
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.BouncyCastleBackupRng
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.New
  nameWithType: BouncyCastleBackupRng.BouncyCastleBackupRng
  nameWithType.vb: BouncyCastleBackupRng.New
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleBackupRng.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleBackupRng.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_AddSeed_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeed
  nameWithType: BouncyCastleBackupRng.AddSeed
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BouncyCastleBackupRng.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: BouncyCastleBackupRng.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedAsync
  nameWithType: BouncyCastleBackupRng.AddSeedAsync
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(Byte())
  nameWithType: BouncyCastleBackupRng.AddSeedMaterial(byte[])
  nameWithType.vb: BouncyCastleBackupRng.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(Long)
  nameWithType: BouncyCastleBackupRng.AddSeedMaterial(long)
  nameWithType.vb: BouncyCastleBackupRng.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleBackupRng.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleBackupRng.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.AddSeedMaterial
  nameWithType: BouncyCastleBackupRng.AddSeedMaterial
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytes(System.Span(Of Byte))
  nameWithType: BouncyCastleBackupRng.FillBytes(in Span<byte>)
  nameWithType.vb: BouncyCastleBackupRng.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_FillBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytes
  nameWithType: BouncyCastleBackupRng.FillBytes
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BouncyCastleBackupRng.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: BouncyCastleBackupRng.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.FillBytesAsync
  nameWithType: BouncyCastleBackupRng.FillBytesAsync
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytes(System.Int32@)
  name: GetBytes(in int)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_GetBytes_System_Int32__
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.GetBytes(System.Int32@)
  name.vb: GetBytes(Integer)
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytes(in int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytes(Integer)
  nameWithType: BouncyCastleBackupRng.GetBytes(in int)
  nameWithType.vb: BouncyCastleBackupRng.GetBytes(Integer)
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytes*
  name: GetBytes
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_GetBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.GetBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytes
  nameWithType: BouncyCastleBackupRng.GetBytes
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name: GetBytesAsync(int, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_GetBytesAsync_System_Int32_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name.vb: GetBytesAsync(Integer, CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytesAsync(int, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytesAsync(Integer, System.Threading.CancellationToken)
  nameWithType: BouncyCastleBackupRng.GetBytesAsync(int, CancellationToken)
  nameWithType.vb: BouncyCastleBackupRng.GetBytesAsync(Integer, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytesAsync*
  name: GetBytesAsync
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_GetBytesAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.GetBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.GetBytesAsync
  nameWithType: BouncyCastleBackupRng.GetBytesAsync
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(Byte())
  nameWithType: BouncyCastleBackupRng.NextBytes(byte[])
  nameWithType.vb: BouncyCastleBackupRng.NextBytes(Byte())
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(Byte(), Integer, Integer)
  nameWithType: BouncyCastleBackupRng.NextBytes(byte[], int, int)
  nameWithType.vb: BouncyCastleBackupRng.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes(System.Span(Of Byte))
  nameWithType: BouncyCastleBackupRng.NextBytes(Span<byte>)
  nameWithType.vb: BouncyCastleBackupRng.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_NextBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.NextBytes
  nameWithType: BouncyCastleBackupRng.NextBytes
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.RNGs
  name: RNGs
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_RNGs
  commentId: P:wan24.Crypto.BC.BouncyCastleBackupRng.RNGs
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.RNGs
  nameWithType: BouncyCastleBackupRng.RNGs
- uid: wan24.Crypto.BC.BouncyCastleBackupRng.RNGs*
  name: RNGs
  href: api/wan24.Crypto.BC.BouncyCastleBackupRng.html#wan24_Crypto_BC_BouncyCastleBackupRng_RNGs_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBackupRng.RNGs
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBackupRng.RNGs
  nameWithType: BouncyCastleBackupRng.RNGs
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1
  name: BouncyCastleBlockCipherAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1
  name.vb: BouncyCastleBlockCipherAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleBlockCipherAlgorithmBase(string, int)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.BouncyCastleBlockCipherAlgorithmBase(string, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).New(String, Integer)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.BouncyCastleBlockCipherAlgorithmBase(string, int)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).New(String, Integer)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.#ctor*
  name: BouncyCastleBlockCipherAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.BouncyCastleBlockCipherAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).New
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.BouncyCastleBlockCipherAlgorithmBase
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).New
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.CreateCipher
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).CreateCipher
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.CreateCipher
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).CreateCipher
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.CreateParameters(byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).CreateParameters(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.CreateParameters(byte[], CryptoOptions)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.CreateParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).CreateParameters
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.CreateParameters
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).CreateParameters
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  name: GetDecryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetDecryptor_System_IO_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptor*
  name: GetDecryptor
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetDecryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptor
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptor
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptor
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  name: GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetDecryptorAsync_System_IO_Stream_wan24_Crypto_CryptoOptions_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptorAsync*
  name: GetDecryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetDecryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetDecryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptorAsync
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetDecryptorAsync
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetDecryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  name: GetEncryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetEncryptor_System_IO_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptor*
  name: GetEncryptor
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetEncryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptor
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptor
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptor
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  name: GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetEncryptorAsync_System_IO_Stream_wan24_Crypto_CryptoOptions_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptorAsync*
  name: GetEncryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetEncryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetEncryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptorAsync
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetEncryptorAsync
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetEncryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetValidLengthKey(System.Byte[],System.Int32)
  name: GetValidLengthKey(byte[], int)
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetValidLengthKey_System_Byte___System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetValidLengthKey(System.Byte[],System.Int32)
  name.vb: GetValidLengthKey(Byte(), Integer)
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetValidLengthKey(byte[], int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetValidLengthKey(Byte(), Integer)
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetValidLengthKey(byte[], int)
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetValidLengthKey(Byte(), Integer)
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetValidLengthKey*
  name: GetValidLengthKey
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_GetValidLengthKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.GetValidLengthKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.GetValidLengthKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).GetValidLengthKey
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.GetValidLengthKey
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).GetValidLengthKey
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBlockCipherAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleBlockCipherAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleBlockCipherAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleBlockCipherAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1
  name: BouncyCastleBufferedCipherAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1
  name.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T)
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleBufferedCipherAlgorithmBase(string, int)
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.BouncyCastleBufferedCipherAlgorithmBase(string, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).New(String, Integer)
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.BouncyCastleBufferedCipherAlgorithmBase(string, int)
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).New(String, Integer)
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.#ctor*
  name: BouncyCastleBufferedCipherAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.BouncyCastleBufferedCipherAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).New
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.BouncyCastleBufferedCipherAlgorithmBase
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).New
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.CreateCipher
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).CreateCipher
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.CreateCipher
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).CreateCipher
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetDecryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  name: GetDecryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_GetDecryptor_System_IO_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetDecryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.GetDecryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).GetDecryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.GetDecryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).GetDecryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetDecryptor*
  name: GetDecryptor
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_GetDecryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetDecryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.GetDecryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).GetDecryptor
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.GetDecryptor
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).GetDecryptor
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetDecryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  name: GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_GetDecryptorAsync_System_IO_Stream_wan24_Crypto_CryptoOptions_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetDecryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.GetDecryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).GetDecryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetDecryptorAsync*
  name: GetDecryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_GetDecryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetDecryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.GetDecryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).GetDecryptorAsync
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.GetDecryptorAsync
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).GetDecryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetEncryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  name: GetEncryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_GetEncryptor_System_IO_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetEncryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.GetEncryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).GetEncryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.GetEncryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).GetEncryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetEncryptor*
  name: GetEncryptor
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_GetEncryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetEncryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.GetEncryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).GetEncryptor
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.GetEncryptor
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).GetEncryptor
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetEncryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  name: GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_GetEncryptorAsync_System_IO_Stream_wan24_Crypto_CryptoOptions_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetEncryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.GetEncryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).GetEncryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetEncryptorAsync*
  name: GetEncryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleBufferedCipherAlgorithmBase_1_GetEncryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase`1.GetEncryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase<T>.GetEncryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleBufferedCipherAlgorithmBase(Of T).GetEncryptorAsync
  nameWithType: BouncyCastleBufferedCipherAlgorithmBase<T>.GetEncryptorAsync
  nameWithType.vb: BouncyCastleBufferedCipherAlgorithmBase(Of T).GetEncryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1
  name: BouncyCastleCipherAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1
  name.vb: BouncyCastleCipherAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T)
  nameWithType: BouncyCastleCipherAlgorithmBase<T>
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleCipherAlgorithmBase(string, int)
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.BouncyCastleCipherAlgorithmBase(string, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).New(String, Integer)
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.BouncyCastleCipherAlgorithmBase(string, int)
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).New(String, Integer)
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.#ctor*
  name: BouncyCastleCipherAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.BouncyCastleCipherAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).New
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.BouncyCastleCipherAlgorithmBase
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).New
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateIvParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateIvParameters(byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_CreateIvParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateIvParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateIvParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.CreateIvParameters(byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).CreateIvParameters(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.CreateIvParameters(byte[], CryptoOptions)
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).CreateIvParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateIvParameters*
  name: CreateIvParameters
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_CreateIvParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateIvParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.CreateIvParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).CreateIvParameters
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.CreateIvParameters
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).CreateIvParameters
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateKeyParameters(System.Byte[],wan24.Crypto.CryptoOptions,wan24.Crypto.HashAlgorithmBase)
  name: CreateKeyParameters(byte[], CryptoOptions, HashAlgorithmBase)
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_CreateKeyParameters_System_Byte___wan24_Crypto_CryptoOptions_wan24_Crypto_HashAlgorithmBase_
  commentId: M:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateKeyParameters(System.Byte[],wan24.Crypto.CryptoOptions,wan24.Crypto.HashAlgorithmBase)
  name.vb: CreateKeyParameters(Byte(), CryptoOptions, HashAlgorithmBase)
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.CreateKeyParameters(byte[], wan24.Crypto.CryptoOptions, wan24.Crypto.HashAlgorithmBase)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).CreateKeyParameters(Byte(), wan24.Crypto.CryptoOptions, wan24.Crypto.HashAlgorithmBase)
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.CreateKeyParameters(byte[], CryptoOptions, HashAlgorithmBase)
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).CreateKeyParameters(Byte(), CryptoOptions, HashAlgorithmBase)
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateKeyParameters*
  name: CreateKeyParameters
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_CreateKeyParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateKeyParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.CreateKeyParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).CreateKeyParameters
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.CreateKeyParameters
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).CreateKeyParameters
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.CreateParameters(byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).CreateParameters(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.CreateParameters(byte[], CryptoOptions)
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.CreateParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).CreateParameters
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.CreateParameters
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).CreateParameters
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.GetValidLengthKey(System.Byte[],System.Int32)
  name: GetValidLengthKey(byte[], int)
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_GetValidLengthKey_System_Byte___System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.GetValidLengthKey(System.Byte[],System.Int32)
  name.vb: GetValidLengthKey(Byte(), Integer)
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.GetValidLengthKey(byte[], int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).GetValidLengthKey(Byte(), Integer)
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.GetValidLengthKey(byte[], int)
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).GetValidLengthKey(Byte(), Integer)
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.GetValidLengthKey*
  name: GetValidLengthKey
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_GetValidLengthKey_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.GetValidLengthKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.GetValidLengthKey
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).GetValidLengthKey
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.GetValidLengthKey
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).GetValidLengthKey
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleCipherAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleCipherAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleCipherAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleCipherAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform
  name: BouncyCastleCryptoTransform
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html
  commentId: T:wan24.Crypto.BC.BouncyCastleCryptoTransform
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform
  nameWithType: BouncyCastleCryptoTransform
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  name: BouncyCastleCryptoTransform(IBlockCipher)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IBlockCipher_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  name.vb: New(IBlockCipher)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IBlockCipher)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.New(Org.BouncyCastle.Crypto.IBlockCipher)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IBlockCipher)
  nameWithType.vb: BouncyCastleCryptoTransform.New(IBlockCipher)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IBufferedCipher)
  name: BouncyCastleCryptoTransform(IBufferedCipher)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IBufferedCipher_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IBufferedCipher)
  name.vb: New(IBufferedCipher)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IBufferedCipher)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.New(Org.BouncyCastle.Crypto.IBufferedCipher)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IBufferedCipher)
  nameWithType.vb: BouncyCastleCryptoTransform.New(IBufferedCipher)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IDigest)
  name: BouncyCastleCryptoTransform(IDigest)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IDigest_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IDigest)
  name.vb: New(IDigest)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IDigest)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.New(Org.BouncyCastle.Crypto.IDigest)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IDigest)
  nameWithType.vb: BouncyCastleCryptoTransform.New(IDigest)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IMac)
  name: BouncyCastleCryptoTransform(IMac)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IMac_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IMac)
  name.vb: New(IMac)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IMac)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.New(Org.BouncyCastle.Crypto.IMac)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IMac)
  nameWithType.vb: BouncyCastleCryptoTransform.New(IMac)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IStreamCipher)
  name: BouncyCastleCryptoTransform(IStreamCipher)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_Org_BouncyCastle_Crypto_IStreamCipher_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor(Org.BouncyCastle.Crypto.IStreamCipher)
  name.vb: New(IStreamCipher)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(Org.BouncyCastle.Crypto.IStreamCipher)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.New(Org.BouncyCastle.Crypto.IStreamCipher)
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform(IStreamCipher)
  nameWithType.vb: BouncyCastleCryptoTransform.New(IStreamCipher)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor*
  name: BouncyCastleCryptoTransform
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BouncyCastleCryptoTransform
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.New
  nameWithType: BouncyCastleCryptoTransform.BouncyCastleCryptoTransform
  nameWithType.vb: BouncyCastleCryptoTransform.New
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.BlockCipher
  name: BlockCipher
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_BlockCipher
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.BlockCipher
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BlockCipher
  nameWithType: BouncyCastleCryptoTransform.BlockCipher
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.BufferedCipher
  name: BufferedCipher
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_BufferedCipher
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.BufferedCipher
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.BufferedCipher
  nameWithType: BouncyCastleCryptoTransform.BufferedCipher
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  name: CanReuseTransform
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_CanReuseTransform
  commentId: P:wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  nameWithType: BouncyCastleCryptoTransform.CanReuseTransform
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform*
  name: CanReuseTransform
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_CanReuseTransform_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanReuseTransform
  nameWithType: BouncyCastleCryptoTransform.CanReuseTransform
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  name: CanTransformMultipleBlocks
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_CanTransformMultipleBlocks
  commentId: P:wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  nameWithType: BouncyCastleCryptoTransform.CanTransformMultipleBlocks
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks*
  name: CanTransformMultipleBlocks
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_CanTransformMultipleBlocks_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.CanTransformMultipleBlocks
  nameWithType: BouncyCastleCryptoTransform.CanTransformMultipleBlocks
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.Digest
  name: Digest
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_Digest
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.Digest
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.Digest
  nameWithType: BouncyCastleCryptoTransform.Digest
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose
  name: Dispose()
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_Dispose
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose()
  nameWithType: BouncyCastleCryptoTransform.Dispose()
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_Dispose_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.Dispose
  nameWithType: BouncyCastleCryptoTransform.Dispose
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  name: InputBlockSize
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_InputBlockSize
  commentId: P:wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  nameWithType: BouncyCastleCryptoTransform.InputBlockSize
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize*
  name: InputBlockSize
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_InputBlockSize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.InputBlockSize
  nameWithType: BouncyCastleCryptoTransform.InputBlockSize
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.Mac
  name: Mac
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_Mac
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.Mac
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.Mac
  nameWithType: BouncyCastleCryptoTransform.Mac
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  name: OutputBlockSize
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_OutputBlockSize
  commentId: P:wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  nameWithType: BouncyCastleCryptoTransform.OutputBlockSize
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize*
  name: OutputBlockSize
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_OutputBlockSize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.OutputBlockSize
  nameWithType: BouncyCastleCryptoTransform.OutputBlockSize
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.StreamCipher
  name: StreamCipher
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_StreamCipher
  commentId: F:wan24.Crypto.BC.BouncyCastleCryptoTransform.StreamCipher
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.StreamCipher
  nameWithType: BouncyCastleCryptoTransform.StreamCipher
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  name: TransformBlock(byte[], int, int, byte[], int)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_TransformBlock_System_Byte___System_Int32_System_Int32_System_Byte___System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  name.vb: TransformBlock(Byte(), Integer, Integer, Byte(), Integer)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock(byte[], int, int, byte[], int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock(Byte(), Integer, Integer, Byte(), Integer)
  nameWithType: BouncyCastleCryptoTransform.TransformBlock(byte[], int, int, byte[], int)
  nameWithType.vb: BouncyCastleCryptoTransform.TransformBlock(Byte(), Integer, Integer, Byte(), Integer)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock*
  name: TransformBlock
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_TransformBlock_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformBlock
  nameWithType: BouncyCastleCryptoTransform.TransformBlock
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  name: TransformFinalBlock(byte[], int, int)
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_TransformFinalBlock_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  name.vb: TransformFinalBlock(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock(Byte(), Integer, Integer)
  nameWithType: BouncyCastleCryptoTransform.TransformFinalBlock(byte[], int, int)
  nameWithType.vb: BouncyCastleCryptoTransform.TransformFinalBlock(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock*
  name: TransformFinalBlock
  href: api/wan24.Crypto.BC.BouncyCastleCryptoTransform.html#wan24_Crypto_BC_BouncyCastleCryptoTransform_TransformFinalBlock_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleCryptoTransform.TransformFinalBlock
  nameWithType: BouncyCastleCryptoTransform.TransformFinalBlock
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor
  name: BouncyCastleEntropyMonitor
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html
  commentId: T:wan24.Crypto.BC.BouncyCastleEntropyMonitor
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor
  nameWithType: BouncyCastleEntropyMonitor
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.#ctor(wan24.Crypto.BC.IBouncyCastleRng@)
  name: BouncyCastleEntropyMonitor(in IBouncyCastleRng)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor__ctor_wan24_Crypto_BC_IBouncyCastleRng__
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.#ctor(wan24.Crypto.BC.IBouncyCastleRng@)
  name.vb: New(IBouncyCastleRng)
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.BouncyCastleEntropyMonitor(in wan24.Crypto.BC.IBouncyCastleRng)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.New(wan24.Crypto.BC.IBouncyCastleRng)
  nameWithType: BouncyCastleEntropyMonitor.BouncyCastleEntropyMonitor(in IBouncyCastleRng)
  nameWithType.vb: BouncyCastleEntropyMonitor.New(IBouncyCastleRng)
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.#ctor*
  name: BouncyCastleEntropyMonitor
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.BouncyCastleEntropyMonitor
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.New
  nameWithType: BouncyCastleEntropyMonitor.BouncyCastleEntropyMonitor
  nameWithType.vb: BouncyCastleEntropyMonitor.New
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleEntropyMonitor.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleEntropyMonitor.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_AddSeed_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeed
  nameWithType: BouncyCastleEntropyMonitor.AddSeed
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BouncyCastleEntropyMonitor.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: BouncyCastleEntropyMonitor.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedAsync
  nameWithType: BouncyCastleEntropyMonitor.AddSeedAsync
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(Byte())
  nameWithType: BouncyCastleEntropyMonitor.AddSeedMaterial(byte[])
  nameWithType.vb: BouncyCastleEntropyMonitor.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(Long)
  nameWithType: BouncyCastleEntropyMonitor.AddSeedMaterial(long)
  nameWithType.vb: BouncyCastleEntropyMonitor.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleEntropyMonitor.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleEntropyMonitor.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.AddSeedMaterial
  nameWithType: BouncyCastleEntropyMonitor.AddSeedMaterial
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.Algorithms
  name: Algorithms
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_Algorithms
  commentId: P:wan24.Crypto.BC.BouncyCastleEntropyMonitor.Algorithms
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.Algorithms
  nameWithType: BouncyCastleEntropyMonitor.Algorithms
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.Algorithms*
  name: Algorithms
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_Algorithms_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.Algorithms
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.Algorithms
  nameWithType: BouncyCastleEntropyMonitor.Algorithms
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytes(System.Span(Of Byte))
  nameWithType: BouncyCastleEntropyMonitor.FillBytes(in Span<byte>)
  nameWithType.vb: BouncyCastleEntropyMonitor.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_FillBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytes
  nameWithType: BouncyCastleEntropyMonitor.FillBytes
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BouncyCastleEntropyMonitor.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: BouncyCastleEntropyMonitor.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.FillBytesAsync
  nameWithType: BouncyCastleEntropyMonitor.FillBytesAsync
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytes(System.Int32@)
  name: GetBytes(in int)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_GetBytes_System_Int32__
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytes(System.Int32@)
  name.vb: GetBytes(Integer)
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytes(in int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytes(Integer)
  nameWithType: BouncyCastleEntropyMonitor.GetBytes(in int)
  nameWithType.vb: BouncyCastleEntropyMonitor.GetBytes(Integer)
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytes*
  name: GetBytes
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_GetBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytes
  nameWithType: BouncyCastleEntropyMonitor.GetBytes
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name: GetBytesAsync(int, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_GetBytesAsync_System_Int32_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name.vb: GetBytesAsync(Integer, CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytesAsync(int, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytesAsync(Integer, System.Threading.CancellationToken)
  nameWithType: BouncyCastleEntropyMonitor.GetBytesAsync(int, CancellationToken)
  nameWithType.vb: BouncyCastleEntropyMonitor.GetBytesAsync(Integer, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytesAsync*
  name: GetBytesAsync
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_GetBytesAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.GetBytesAsync
  nameWithType: BouncyCastleEntropyMonitor.GetBytesAsync
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.MaxRetries
  name: MaxRetries
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_MaxRetries
  commentId: P:wan24.Crypto.BC.BouncyCastleEntropyMonitor.MaxRetries
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.MaxRetries
  nameWithType: BouncyCastleEntropyMonitor.MaxRetries
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.MaxRetries*
  name: MaxRetries
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_MaxRetries_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.MaxRetries
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.MaxRetries
  nameWithType: BouncyCastleEntropyMonitor.MaxRetries
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.MinRndlength
  name: MinRndlength
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_MinRndlength
  commentId: P:wan24.Crypto.BC.BouncyCastleEntropyMonitor.MinRndlength
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.MinRndlength
  nameWithType: BouncyCastleEntropyMonitor.MinRndlength
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.MinRndlength*
  name: MinRndlength
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_MinRndlength_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.MinRndlength
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.MinRndlength
  nameWithType: BouncyCastleEntropyMonitor.MinRndlength
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(Byte())
  nameWithType: BouncyCastleEntropyMonitor.NextBytes(byte[])
  nameWithType.vb: BouncyCastleEntropyMonitor.NextBytes(Byte())
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(Byte(), Integer, Integer)
  nameWithType: BouncyCastleEntropyMonitor.NextBytes(byte[], int, int)
  nameWithType.vb: BouncyCastleEntropyMonitor.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes(System.Span(Of Byte))
  nameWithType: BouncyCastleEntropyMonitor.NextBytes(Span<byte>)
  nameWithType.vb: BouncyCastleEntropyMonitor.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_NextBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.NextBytes
  nameWithType: BouncyCastleEntropyMonitor.NextBytes
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.RNG
  name: RNG
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_RNG
  commentId: P:wan24.Crypto.BC.BouncyCastleEntropyMonitor.RNG
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.RNG
  nameWithType: BouncyCastleEntropyMonitor.RNG
- uid: wan24.Crypto.BC.BouncyCastleEntropyMonitor.RNG*
  name: RNG
  href: api/wan24.Crypto.BC.BouncyCastleEntropyMonitor.html#wan24_Crypto_BC_BouncyCastleEntropyMonitor_RNG_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleEntropyMonitor.RNG
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleEntropyMonitor.RNG
  nameWithType: BouncyCastleEntropyMonitor.RNG
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm
  name: BouncyCastleHashAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html
  commentId: T:wan24.Crypto.BC.BouncyCastleHashAlgorithm
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm
  nameWithType: BouncyCastleHashAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.#ctor(Org.BouncyCastle.Crypto.IDigest)
  name: BouncyCastleHashAlgorithm(IDigest)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm__ctor_Org_BouncyCastle_Crypto_IDigest_
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.#ctor(Org.BouncyCastle.Crypto.IDigest)
  name.vb: New(IDigest)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.BouncyCastleHashAlgorithm(Org.BouncyCastle.Crypto.IDigest)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.New(Org.BouncyCastle.Crypto.IDigest)
  nameWithType: BouncyCastleHashAlgorithm.BouncyCastleHashAlgorithm(IDigest)
  nameWithType.vb: BouncyCastleHashAlgorithm.New(IDigest)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.#ctor*
  name: BouncyCastleHashAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.BouncyCastleHashAlgorithm
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.New
  nameWithType: BouncyCastleHashAlgorithm.BouncyCastleHashAlgorithm
  nameWithType.vb: BouncyCastleHashAlgorithm.New
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Digest
  name: Digest
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Digest
  commentId: F:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Digest
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Digest
  nameWithType: BouncyCastleHashAlgorithm.Digest
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose(Boolean)
  nameWithType: BouncyCastleHashAlgorithm.Dispose(bool)
  nameWithType.vb: BouncyCastleHashAlgorithm.Dispose(Boolean)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Dispose_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Dispose
  nameWithType: BouncyCastleHashAlgorithm.Dispose
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  name: HashCore(byte[], int, int)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashCore_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  name.vb: HashCore(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(Byte(), Integer, Integer)
  nameWithType: BouncyCastleHashAlgorithm.HashCore(byte[], int, int)
  nameWithType.vb: BouncyCastleHashAlgorithm.HashCore(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.ReadOnlySpan{System.Byte})
  name: HashCore(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashCore_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.ReadOnlySpan{System.Byte})
  name.vb: HashCore(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleHashAlgorithm.HashCore(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleHashAlgorithm.HashCore(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore*
  name: HashCore
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashCore_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashCore
  nameWithType: BouncyCastleHashAlgorithm.HashCore
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal
  name: HashFinal()
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashFinal
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal()
  nameWithType: BouncyCastleHashAlgorithm.HashFinal()
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal*
  name: HashFinal
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashFinal_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashFinal
  nameWithType: BouncyCastleHashAlgorithm.HashFinal
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashSize
  name: HashSize
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashSize
  commentId: P:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashSize
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashSize
  nameWithType: BouncyCastleHashAlgorithm.HashSize
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashSize*
  name: HashSize
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_HashSize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.HashSize
  nameWithType: BouncyCastleHashAlgorithm.HashSize
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize
  name: Initialize()
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Initialize
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize()
  nameWithType: BouncyCastleHashAlgorithm.Initialize()
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize*
  name: Initialize
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_Initialize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.Initialize
  nameWithType: BouncyCastleHashAlgorithm.Initialize
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal(System.Span{System.Byte},System.Int32@)
  name: TryHashFinal(Span<byte>, out int)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_TryHashFinal_System_Span_System_Byte__System_Int32__
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal(System.Span{System.Byte},System.Int32@)
  name.vb: TryHashFinal(Span(Of Byte), Integer)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal(System.Span<byte>, out int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal(System.Span(Of Byte), Integer)
  nameWithType: BouncyCastleHashAlgorithm.TryHashFinal(Span<byte>, out int)
  nameWithType.vb: BouncyCastleHashAlgorithm.TryHashFinal(Span(Of Byte), Integer)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal*
  name: TryHashFinal
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithm.html#wan24_Crypto_BC_BouncyCastleHashAlgorithm_TryHashFinal_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithm.TryHashFinal
  nameWithType: BouncyCastleHashAlgorithm.TryHashFinal
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1
  name: BouncyCastleHashAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1
  name.vb: BouncyCastleHashAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T)
  nameWithType: BouncyCastleHashAlgorithmBase<T>
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleHashAlgorithmBase(string, int)
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.BouncyCastleHashAlgorithmBase(string, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).New(String, Integer)
  nameWithType: BouncyCastleHashAlgorithmBase<T>.BouncyCastleHashAlgorithmBase(string, int)
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).New(String, Integer)
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.#ctor*
  name: BouncyCastleHashAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.BouncyCastleHashAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).New
  nameWithType: BouncyCastleHashAlgorithmBase<T>.BouncyCastleHashAlgorithmBase
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).New
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleHashAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleHashAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleHashAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleHashAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHashAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHashAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleHashAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleHashAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleHashAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm
  name: BouncyCastleHmacAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html
  commentId: T:wan24.Crypto.BC.BouncyCastleHmacAlgorithm
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm
  nameWithType: BouncyCastleHmacAlgorithm
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.#ctor(Org.BouncyCastle.Crypto.IMac)
  name: BouncyCastleHmacAlgorithm(IMac)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm__ctor_Org_BouncyCastle_Crypto_IMac_
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.#ctor(Org.BouncyCastle.Crypto.IMac)
  name.vb: New(IMac)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.BouncyCastleHmacAlgorithm(Org.BouncyCastle.Crypto.IMac)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.New(Org.BouncyCastle.Crypto.IMac)
  nameWithType: BouncyCastleHmacAlgorithm.BouncyCastleHmacAlgorithm(IMac)
  nameWithType.vb: BouncyCastleHmacAlgorithm.New(IMac)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.#ctor*
  name: BouncyCastleHmacAlgorithm
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.BouncyCastleHmacAlgorithm
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.New
  nameWithType: BouncyCastleHmacAlgorithm.BouncyCastleHmacAlgorithm
  nameWithType.vb: BouncyCastleHmacAlgorithm.New
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose(Boolean)
  nameWithType: BouncyCastleHmacAlgorithm.Dispose(bool)
  nameWithType.vb: BouncyCastleHmacAlgorithm.Dispose(Boolean)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Dispose_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Dispose
  nameWithType: BouncyCastleHmacAlgorithm.Dispose
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  name: HashCore(byte[], int, int)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashCore_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  name.vb: HashCore(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(Byte(), Integer, Integer)
  nameWithType: BouncyCastleHmacAlgorithm.HashCore(byte[], int, int)
  nameWithType.vb: BouncyCastleHmacAlgorithm.HashCore(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.ReadOnlySpan{System.Byte})
  name: HashCore(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashCore_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.ReadOnlySpan{System.Byte})
  name.vb: HashCore(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleHmacAlgorithm.HashCore(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleHmacAlgorithm.HashCore(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore*
  name: HashCore
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashCore_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashCore
  nameWithType: BouncyCastleHmacAlgorithm.HashCore
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal
  name: HashFinal()
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashFinal
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal()
  nameWithType: BouncyCastleHmacAlgorithm.HashFinal()
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal*
  name: HashFinal
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_HashFinal_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.HashFinal
  nameWithType: BouncyCastleHmacAlgorithm.HashFinal
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize
  name: Initialize()
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Initialize
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize()
  nameWithType: BouncyCastleHmacAlgorithm.Initialize()
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize*
  name: Initialize
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Initialize_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Initialize
  nameWithType: BouncyCastleHmacAlgorithm.Initialize
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Mac
  name: Mac
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_Mac
  commentId: F:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Mac
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.Mac
  nameWithType: BouncyCastleHmacAlgorithm.Mac
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal(System.Span{System.Byte},System.Int32@)
  name: TryHashFinal(Span<byte>, out int)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_TryHashFinal_System_Span_System_Byte__System_Int32__
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal(System.Span{System.Byte},System.Int32@)
  name.vb: TryHashFinal(Span(Of Byte), Integer)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal(System.Span<byte>, out int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal(System.Span(Of Byte), Integer)
  nameWithType: BouncyCastleHmacAlgorithm.TryHashFinal(Span<byte>, out int)
  nameWithType.vb: BouncyCastleHmacAlgorithm.TryHashFinal(Span(Of Byte), Integer)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal*
  name: TryHashFinal
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithm.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithm_TryHashFinal_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithm.TryHashFinal
  nameWithType: BouncyCastleHmacAlgorithm.TryHashFinal
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1
  name: BouncyCastleHmacAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1
  name.vb: BouncyCastleHmacAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T)
  nameWithType: BouncyCastleHmacAlgorithmBase<T>
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleHmacAlgorithmBase(string, int)
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.BouncyCastleHmacAlgorithmBase(string, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).New(String, Integer)
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.BouncyCastleHmacAlgorithmBase(string, int)
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).New(String, Integer)
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.#ctor*
  name: BouncyCastleHmacAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.BouncyCastleHmacAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).New
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.BouncyCastleHmacAlgorithmBase
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).New
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleHmacAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleHmacAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleHmacAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleHmacAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator
  name: BouncyCastleRandomGenerator
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html
  commentId: T:wan24.Crypto.BC.BouncyCastleRandomGenerator
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator
  nameWithType: BouncyCastleRandomGenerator
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.#ctor
  name: BouncyCastleRandomGenerator()
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator__ctor
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.BouncyCastleRandomGenerator()
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.New()
  nameWithType: BouncyCastleRandomGenerator.BouncyCastleRandomGenerator()
  nameWithType.vb: BouncyCastleRandomGenerator.New()
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.#ctor*
  name: BouncyCastleRandomGenerator
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.BouncyCastleRandomGenerator
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.New
  nameWithType: BouncyCastleRandomGenerator.BouncyCastleRandomGenerator
  nameWithType.vb: BouncyCastleRandomGenerator.New
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleRandomGenerator.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleRandomGenerator.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeed_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeed
  nameWithType: BouncyCastleRandomGenerator.AddSeed
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BouncyCastleRandomGenerator.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: BouncyCastleRandomGenerator.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedAsync
  nameWithType: BouncyCastleRandomGenerator.AddSeedAsync
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(Byte())
  nameWithType: BouncyCastleRandomGenerator.AddSeedMaterial(byte[])
  nameWithType.vb: BouncyCastleRandomGenerator.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(Long)
  nameWithType: BouncyCastleRandomGenerator.AddSeedMaterial(long)
  nameWithType.vb: BouncyCastleRandomGenerator.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleRandomGenerator.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleRandomGenerator.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.AddSeedMaterial
  nameWithType: BouncyCastleRandomGenerator.AddSeedMaterial
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytes(System.Span(Of Byte))
  nameWithType: BouncyCastleRandomGenerator.FillBytes(in Span<byte>)
  nameWithType.vb: BouncyCastleRandomGenerator.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_FillBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytes
  nameWithType: BouncyCastleRandomGenerator.FillBytes
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BouncyCastleRandomGenerator.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: BouncyCastleRandomGenerator.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.FillBytesAsync
  nameWithType: BouncyCastleRandomGenerator.FillBytesAsync
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytes(System.Int32@)
  name: GetBytes(in int)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_GetBytes_System_Int32__
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytes(System.Int32@)
  name.vb: GetBytes(Integer)
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytes(in int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytes(Integer)
  nameWithType: BouncyCastleRandomGenerator.GetBytes(in int)
  nameWithType.vb: BouncyCastleRandomGenerator.GetBytes(Integer)
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytes*
  name: GetBytes
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_GetBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytes
  nameWithType: BouncyCastleRandomGenerator.GetBytes
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name: GetBytesAsync(int, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_GetBytesAsync_System_Int32_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name.vb: GetBytesAsync(Integer, CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytesAsync(int, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytesAsync(Integer, System.Threading.CancellationToken)
  nameWithType: BouncyCastleRandomGenerator.GetBytesAsync(int, CancellationToken)
  nameWithType.vb: BouncyCastleRandomGenerator.GetBytesAsync(Integer, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytesAsync*
  name: GetBytesAsync
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_GetBytesAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.GetBytesAsync
  nameWithType: BouncyCastleRandomGenerator.GetBytesAsync
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  nameWithType: BouncyCastleRandomGenerator.Instance
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.Instance
  nameWithType: BouncyCastleRandomGenerator.Instance
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(Byte())
  nameWithType: BouncyCastleRandomGenerator.NextBytes(byte[])
  nameWithType.vb: BouncyCastleRandomGenerator.NextBytes(Byte())
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(Byte(), Integer, Integer)
  nameWithType: BouncyCastleRandomGenerator.NextBytes(byte[], int, int)
  nameWithType.vb: BouncyCastleRandomGenerator.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes(System.Span(Of Byte))
  nameWithType: BouncyCastleRandomGenerator.NextBytes(Span<byte>)
  nameWithType.vb: BouncyCastleRandomGenerator.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.BouncyCastleRandomGenerator.html#wan24_Crypto_BC_BouncyCastleRandomGenerator_NextBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRandomGenerator.NextBytes
  nameWithType: BouncyCastleRandomGenerator.NextBytes
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper
  name: BouncyCastleRngWrapper
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html
  commentId: T:wan24.Crypto.BC.BouncyCastleRngWrapper
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper
  nameWithType: BouncyCastleRngWrapper
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.#ctor(Org.BouncyCastle.Crypto.Prng.IRandomGenerator@)
  name: BouncyCastleRngWrapper(in IRandomGenerator)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper__ctor_Org_BouncyCastle_Crypto_Prng_IRandomGenerator__
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.#ctor(Org.BouncyCastle.Crypto.Prng.IRandomGenerator@)
  name.vb: New(IRandomGenerator)
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.BouncyCastleRngWrapper(in Org.BouncyCastle.Crypto.Prng.IRandomGenerator)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.New(Org.BouncyCastle.Crypto.Prng.IRandomGenerator)
  nameWithType: BouncyCastleRngWrapper.BouncyCastleRngWrapper(in IRandomGenerator)
  nameWithType.vb: BouncyCastleRngWrapper.New(IRandomGenerator)
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.#ctor*
  name: BouncyCastleRngWrapper
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.BouncyCastleRngWrapper
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.New
  nameWithType: BouncyCastleRngWrapper.BouncyCastleRngWrapper
  nameWithType.vb: BouncyCastleRngWrapper.New
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleRngWrapper.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleRngWrapper.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_AddSeed_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeed
  nameWithType: BouncyCastleRngWrapper.AddSeed
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BouncyCastleRngWrapper.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: BouncyCastleRngWrapper.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedAsync
  nameWithType: BouncyCastleRngWrapper.AddSeedAsync
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(Byte())
  nameWithType: BouncyCastleRngWrapper.AddSeedMaterial(byte[])
  nameWithType.vb: BouncyCastleRngWrapper.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(Long)
  nameWithType: BouncyCastleRngWrapper.AddSeedMaterial(long)
  nameWithType.vb: BouncyCastleRngWrapper.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: BouncyCastleRngWrapper.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: BouncyCastleRngWrapper.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.AddSeedMaterial
  nameWithType: BouncyCastleRngWrapper.AddSeedMaterial
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytes(System.Span(Of Byte))
  nameWithType: BouncyCastleRngWrapper.FillBytes(in Span<byte>)
  nameWithType.vb: BouncyCastleRngWrapper.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_FillBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytes
  nameWithType: BouncyCastleRngWrapper.FillBytes
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BouncyCastleRngWrapper.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: BouncyCastleRngWrapper.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.FillBytesAsync
  nameWithType: BouncyCastleRngWrapper.FillBytesAsync
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytes(System.Int32@)
  name: GetBytes(in int)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_GetBytes_System_Int32__
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytes(System.Int32@)
  name.vb: GetBytes(Integer)
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytes(in int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytes(Integer)
  nameWithType: BouncyCastleRngWrapper.GetBytes(in int)
  nameWithType.vb: BouncyCastleRngWrapper.GetBytes(Integer)
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytes*
  name: GetBytes
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_GetBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytes
  nameWithType: BouncyCastleRngWrapper.GetBytes
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name: GetBytesAsync(int, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_GetBytesAsync_System_Int32_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name.vb: GetBytesAsync(Integer, CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytesAsync(int, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytesAsync(Integer, System.Threading.CancellationToken)
  nameWithType: BouncyCastleRngWrapper.GetBytesAsync(int, CancellationToken)
  nameWithType.vb: BouncyCastleRngWrapper.GetBytesAsync(Integer, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytesAsync*
  name: GetBytesAsync
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_GetBytesAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.GetBytesAsync
  nameWithType: BouncyCastleRngWrapper.GetBytesAsync
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(Byte())
  nameWithType: BouncyCastleRngWrapper.NextBytes(byte[])
  nameWithType.vb: BouncyCastleRngWrapper.NextBytes(Byte())
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(Byte(), Integer, Integer)
  nameWithType: BouncyCastleRngWrapper.NextBytes(byte[], int, int)
  nameWithType.vb: BouncyCastleRngWrapper.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes(System.Span(Of Byte))
  nameWithType: BouncyCastleRngWrapper.NextBytes(Span<byte>)
  nameWithType.vb: BouncyCastleRngWrapper.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_NextBytes_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.NextBytes
  nameWithType: BouncyCastleRngWrapper.NextBytes
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.RNG
  name: RNG
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_RNG
  commentId: P:wan24.Crypto.BC.BouncyCastleRngWrapper.RNG
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.RNG
  nameWithType: BouncyCastleRngWrapper.RNG
- uid: wan24.Crypto.BC.BouncyCastleRngWrapper.RNG*
  name: RNG
  href: api/wan24.Crypto.BC.BouncyCastleRngWrapper.html#wan24_Crypto_BC_BouncyCastleRngWrapper_RNG_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleRngWrapper.RNG
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleRngWrapper.RNG
  nameWithType: BouncyCastleRngWrapper.RNG
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1
  name: BouncyCastleStreamCipherAlgorithmBase<T>
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html
  commentId: T:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1
  name.vb: BouncyCastleStreamCipherAlgorithmBase(Of T)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name: BouncyCastleStreamCipherAlgorithmBase(string, int)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1__ctor_System_String_System_Int32_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.BouncyCastleStreamCipherAlgorithmBase(string, int)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).New(String, Integer)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.BouncyCastleStreamCipherAlgorithmBase(string, int)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).New(String, Integer)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.#ctor*
  name: BouncyCastleStreamCipherAlgorithmBase
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1__ctor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.BouncyCastleStreamCipherAlgorithmBase
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).New
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.BouncyCastleStreamCipherAlgorithmBase
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).New
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.CreateCipher
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).CreateCipher
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.CreateCipher
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).CreateCipher
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.CreateParameters(byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).CreateParameters(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.CreateParameters(byte[], CryptoOptions)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.CreateParameters
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).CreateParameters
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.CreateParameters
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).CreateParameters
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  name: GetDecryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetDecryptor_System_IO_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptor*
  name: GetDecryptor
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetDecryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptor
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptor
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptor
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  name: GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetDecryptorAsync_System_IO_Stream_wan24_Crypto_CryptoOptions_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptorAsync*
  name: GetDecryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetDecryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetDecryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptorAsync
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetDecryptorAsync
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetDecryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  name: GetEncryptor(Stream, CryptoOptions)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetEncryptor_System_IO_Stream_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptor(System.IO.Stream,wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptor(System.IO.Stream, wan24.Crypto.CryptoOptions)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptor(Stream, CryptoOptions)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptor(Stream, CryptoOptions)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptor*
  name: GetEncryptor
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetEncryptor_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptor
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptor
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptor
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptor
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptor
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  name: GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetEncryptorAsync_System_IO_Stream_wan24_Crypto_CryptoOptions_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptorAsync(System.IO.Stream,wan24.Crypto.CryptoOptions,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptorAsync(System.IO.Stream, wan24.Crypto.CryptoOptions, System.Threading.CancellationToken)
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptorAsync(Stream, CryptoOptions, CancellationToken)
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptorAsync*
  name: GetEncryptorAsync
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_GetEncryptorAsync_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.GetEncryptorAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptorAsync
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptorAsync
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.GetEncryptorAsync
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).GetEncryptorAsync
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Instance
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_Instance
  commentId: P:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Instance
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Instance*
  name: Instance
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_Instance_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Instance
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.Instance
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).Instance
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.Instance
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).Instance
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Register
  name: Register()
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_Register
  commentId: M:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Register
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.Register()
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).Register()
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.Register()
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).Register()
- uid: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Register*
  name: Register
  href: api/wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase-1.html#wan24_Crypto_BC_BouncyCastleStreamCipherAlgorithmBase_1_Register_
  commentId: Overload:wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase`1.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase<T>.Register
  fullName.vb: wan24.Crypto.BC.BouncyCastleStreamCipherAlgorithmBase(Of T).Register
  nameWithType: BouncyCastleStreamCipherAlgorithmBase<T>.Register
  nameWithType.vb: BouncyCastleStreamCipherAlgorithmBase(Of T).Register
- uid: wan24.Crypto.BC.ChaCha20Rng
  name: ChaCha20Rng
  href: api/wan24.Crypto.BC.ChaCha20Rng.html
  commentId: T:wan24.Crypto.BC.ChaCha20Rng
  fullName: wan24.Crypto.BC.ChaCha20Rng
  nameWithType: ChaCha20Rng
- uid: wan24.Crypto.BC.ChaCha20Rng.#ctor(wan24.Crypto.ISeedableRng@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  name: ChaCha20Rng(in ISeedableRng?, in int?, in int?)
  href: api/wan24.Crypto.BC.ChaCha20Rng.html#wan24_Crypto_BC_ChaCha20Rng__ctor_wan24_Crypto_ISeedableRng__System_Nullable_System_Int32___System_Nullable_System_Int32___
  commentId: M:wan24.Crypto.BC.ChaCha20Rng.#ctor(wan24.Crypto.ISeedableRng@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  name.vb: New(ISeedableRng, Integer?, Integer?)
  fullName: wan24.Crypto.BC.ChaCha20Rng.ChaCha20Rng(in wan24.Crypto.ISeedableRng?, in int?, in int?)
  fullName.vb: wan24.Crypto.BC.ChaCha20Rng.New(wan24.Crypto.ISeedableRng, Integer?, Integer?)
  nameWithType: ChaCha20Rng.ChaCha20Rng(in ISeedableRng?, in int?, in int?)
  nameWithType.vb: ChaCha20Rng.New(ISeedableRng, Integer?, Integer?)
- uid: wan24.Crypto.BC.ChaCha20Rng.#ctor*
  name: ChaCha20Rng
  href: api/wan24.Crypto.BC.ChaCha20Rng.html#wan24_Crypto_BC_ChaCha20Rng__ctor_
  commentId: Overload:wan24.Crypto.BC.ChaCha20Rng.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.ChaCha20Rng.ChaCha20Rng
  fullName.vb: wan24.Crypto.BC.ChaCha20Rng.New
  nameWithType: ChaCha20Rng.ChaCha20Rng
  nameWithType.vb: ChaCha20Rng.New
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng
  name: DisposableBouncyCastleBackupRng
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html
  commentId: T:wan24.Crypto.BC.DisposableBouncyCastleBackupRng
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng
  nameWithType: DisposableBouncyCastleBackupRng
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.#ctor(wan24.Crypto.BC.IBouncyCastleRng[])
  name: DisposableBouncyCastleBackupRng(params IBouncyCastleRng[])
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng__ctor_wan24_Crypto_BC_IBouncyCastleRng___
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.#ctor(wan24.Crypto.BC.IBouncyCastleRng[])
  name.vb: New(ParamArray IBouncyCastleRng())
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.DisposableBouncyCastleBackupRng(params wan24.Crypto.BC.IBouncyCastleRng[])
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.New(ParamArray wan24.Crypto.BC.IBouncyCastleRng())
  nameWithType: DisposableBouncyCastleBackupRng.DisposableBouncyCastleBackupRng(params IBouncyCastleRng[])
  nameWithType.vb: DisposableBouncyCastleBackupRng.New(ParamArray IBouncyCastleRng())
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.#ctor*
  name: DisposableBouncyCastleBackupRng
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng__ctor_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.DisposableBouncyCastleBackupRng
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.New
  nameWithType: DisposableBouncyCastleBackupRng.DisposableBouncyCastleBackupRng
  nameWithType.vb: DisposableBouncyCastleBackupRng.New
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: DisposableBouncyCastleBackupRng.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: DisposableBouncyCastleBackupRng.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_AddSeed_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeed
  nameWithType: DisposableBouncyCastleBackupRng.AddSeed
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: DisposableBouncyCastleBackupRng.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: DisposableBouncyCastleBackupRng.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedAsync
  nameWithType: DisposableBouncyCastleBackupRng.AddSeedAsync
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(Byte())
  nameWithType: DisposableBouncyCastleBackupRng.AddSeedMaterial(byte[])
  nameWithType.vb: DisposableBouncyCastleBackupRng.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(Long)
  nameWithType: DisposableBouncyCastleBackupRng.AddSeedMaterial(long)
  nameWithType.vb: DisposableBouncyCastleBackupRng.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: DisposableBouncyCastleBackupRng.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: DisposableBouncyCastleBackupRng.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.AddSeedMaterial
  nameWithType: DisposableBouncyCastleBackupRng.AddSeedMaterial
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.Dispose(Boolean)
  nameWithType: DisposableBouncyCastleBackupRng.Dispose(bool)
  nameWithType.vb: DisposableBouncyCastleBackupRng.Dispose(Boolean)
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_Dispose_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.Dispose
  nameWithType: DisposableBouncyCastleBackupRng.Dispose
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_DisposeCore
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.DisposeCore
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.DisposeCore()
  nameWithType: DisposableBouncyCastleBackupRng.DisposeCore()
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.DisposeCore
  nameWithType: DisposableBouncyCastleBackupRng.DisposeCore
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytes(System.Span(Of Byte))
  nameWithType: DisposableBouncyCastleBackupRng.FillBytes(in Span<byte>)
  nameWithType.vb: DisposableBouncyCastleBackupRng.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_FillBytes_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytes
  nameWithType: DisposableBouncyCastleBackupRng.FillBytes
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: DisposableBouncyCastleBackupRng.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: DisposableBouncyCastleBackupRng.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.FillBytesAsync
  nameWithType: DisposableBouncyCastleBackupRng.FillBytesAsync
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytes(System.Int32@)
  name: GetBytes(in int)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_GetBytes_System_Int32__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytes(System.Int32@)
  name.vb: GetBytes(Integer)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytes(in int)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytes(Integer)
  nameWithType: DisposableBouncyCastleBackupRng.GetBytes(in int)
  nameWithType.vb: DisposableBouncyCastleBackupRng.GetBytes(Integer)
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytes*
  name: GetBytes
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_GetBytes_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytes
  nameWithType: DisposableBouncyCastleBackupRng.GetBytes
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name: GetBytesAsync(int, CancellationToken)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_GetBytesAsync_System_Int32_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name.vb: GetBytesAsync(Integer, CancellationToken)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytesAsync(int, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytesAsync(Integer, System.Threading.CancellationToken)
  nameWithType: DisposableBouncyCastleBackupRng.GetBytesAsync(int, CancellationToken)
  nameWithType.vb: DisposableBouncyCastleBackupRng.GetBytesAsync(Integer, CancellationToken)
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytesAsync*
  name: GetBytesAsync
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_GetBytesAsync_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.GetBytesAsync
  nameWithType: DisposableBouncyCastleBackupRng.GetBytesAsync
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(Byte())
  nameWithType: DisposableBouncyCastleBackupRng.NextBytes(byte[])
  nameWithType.vb: DisposableBouncyCastleBackupRng.NextBytes(Byte())
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(Byte(), Integer, Integer)
  nameWithType: DisposableBouncyCastleBackupRng.NextBytes(byte[], int, int)
  nameWithType.vb: DisposableBouncyCastleBackupRng.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes(System.Span(Of Byte))
  nameWithType: DisposableBouncyCastleBackupRng.NextBytes(Span<byte>)
  nameWithType.vb: DisposableBouncyCastleBackupRng.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_NextBytes_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.NextBytes
  nameWithType: DisposableBouncyCastleBackupRng.NextBytes
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.RNGs
  name: RNGs
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_RNGs
  commentId: P:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.RNGs
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.RNGs
  nameWithType: DisposableBouncyCastleBackupRng.RNGs
- uid: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.RNGs*
  name: RNGs
  href: api/wan24.Crypto.BC.DisposableBouncyCastleBackupRng.html#wan24_Crypto_BC_DisposableBouncyCastleBackupRng_RNGs_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleBackupRng.RNGs
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleBackupRng.RNGs
  nameWithType: DisposableBouncyCastleBackupRng.RNGs
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor
  name: DisposableBouncyCastleEntropyMonitor
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html
  commentId: T:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor
  nameWithType: DisposableBouncyCastleEntropyMonitor
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.#ctor(wan24.Crypto.BC.IBouncyCastleRng@)
  name: DisposableBouncyCastleEntropyMonitor(in IBouncyCastleRng)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor__ctor_wan24_Crypto_BC_IBouncyCastleRng__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.#ctor(wan24.Crypto.BC.IBouncyCastleRng@)
  name.vb: New(IBouncyCastleRng)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.DisposableBouncyCastleEntropyMonitor(in wan24.Crypto.BC.IBouncyCastleRng)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.New(wan24.Crypto.BC.IBouncyCastleRng)
  nameWithType: DisposableBouncyCastleEntropyMonitor.DisposableBouncyCastleEntropyMonitor(in IBouncyCastleRng)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.New(IBouncyCastleRng)
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.#ctor*
  name: DisposableBouncyCastleEntropyMonitor
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor__ctor_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.DisposableBouncyCastleEntropyMonitor
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.New
  nameWithType: DisposableBouncyCastleEntropyMonitor.DisposableBouncyCastleEntropyMonitor
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.New
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: DisposableBouncyCastleEntropyMonitor.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_AddSeed_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeed
  nameWithType: DisposableBouncyCastleEntropyMonitor.AddSeed
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: DisposableBouncyCastleEntropyMonitor.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedAsync
  nameWithType: DisposableBouncyCastleEntropyMonitor.AddSeedAsync
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(Byte())
  nameWithType: DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(byte[])
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(Long)
  nameWithType: DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(long)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.AddSeedMaterial
  nameWithType: DisposableBouncyCastleEntropyMonitor.AddSeedMaterial
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Algorithms
  name: Algorithms
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_Algorithms
  commentId: P:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Algorithms
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Algorithms
  nameWithType: DisposableBouncyCastleEntropyMonitor.Algorithms
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Algorithms*
  name: Algorithms
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_Algorithms_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Algorithms
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Algorithms
  nameWithType: DisposableBouncyCastleEntropyMonitor.Algorithms
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Dispose(Boolean)
  nameWithType: DisposableBouncyCastleEntropyMonitor.Dispose(bool)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.Dispose(Boolean)
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_Dispose_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.Dispose
  nameWithType: DisposableBouncyCastleEntropyMonitor.Dispose
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_DisposeCore
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.DisposeCore
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.DisposeCore()
  nameWithType: DisposableBouncyCastleEntropyMonitor.DisposeCore()
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.DisposeCore
  nameWithType: DisposableBouncyCastleEntropyMonitor.DisposeCore
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytes(System.Span(Of Byte))
  nameWithType: DisposableBouncyCastleEntropyMonitor.FillBytes(in Span<byte>)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_FillBytes_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytes
  nameWithType: DisposableBouncyCastleEntropyMonitor.FillBytes
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: DisposableBouncyCastleEntropyMonitor.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.FillBytesAsync
  nameWithType: DisposableBouncyCastleEntropyMonitor.FillBytesAsync
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytes(System.Int32@)
  name: GetBytes(in int)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_GetBytes_System_Int32__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytes(System.Int32@)
  name.vb: GetBytes(Integer)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytes(in int)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytes(Integer)
  nameWithType: DisposableBouncyCastleEntropyMonitor.GetBytes(in int)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.GetBytes(Integer)
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytes*
  name: GetBytes
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_GetBytes_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytes
  nameWithType: DisposableBouncyCastleEntropyMonitor.GetBytes
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name: GetBytesAsync(int, CancellationToken)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_GetBytesAsync_System_Int32_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytesAsync(System.Int32,System.Threading.CancellationToken)
  name.vb: GetBytesAsync(Integer, CancellationToken)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytesAsync(int, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytesAsync(Integer, System.Threading.CancellationToken)
  nameWithType: DisposableBouncyCastleEntropyMonitor.GetBytesAsync(int, CancellationToken)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.GetBytesAsync(Integer, CancellationToken)
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytesAsync*
  name: GetBytesAsync
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_GetBytesAsync_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.GetBytesAsync
  nameWithType: DisposableBouncyCastleEntropyMonitor.GetBytesAsync
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MaxRetries
  name: MaxRetries
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_MaxRetries
  commentId: P:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MaxRetries
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MaxRetries
  nameWithType: DisposableBouncyCastleEntropyMonitor.MaxRetries
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MaxRetries*
  name: MaxRetries
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_MaxRetries_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MaxRetries
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MaxRetries
  nameWithType: DisposableBouncyCastleEntropyMonitor.MaxRetries
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MinRndlength
  name: MinRndlength
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_MinRndlength
  commentId: P:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MinRndlength
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MinRndlength
  nameWithType: DisposableBouncyCastleEntropyMonitor.MinRndlength
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MinRndlength*
  name: MinRndlength
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_MinRndlength_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MinRndlength
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.MinRndlength
  nameWithType: DisposableBouncyCastleEntropyMonitor.MinRndlength
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(Byte())
  nameWithType: DisposableBouncyCastleEntropyMonitor.NextBytes(byte[])
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.NextBytes(Byte())
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(Byte(), Integer, Integer)
  nameWithType: DisposableBouncyCastleEntropyMonitor.NextBytes(byte[], int, int)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes(System.Span(Of Byte))
  nameWithType: DisposableBouncyCastleEntropyMonitor.NextBytes(Span<byte>)
  nameWithType.vb: DisposableBouncyCastleEntropyMonitor.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_NextBytes_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.NextBytes
  nameWithType: DisposableBouncyCastleEntropyMonitor.NextBytes
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.RNG
  name: RNG
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_RNG
  commentId: P:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.RNG
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.RNG
  nameWithType: DisposableBouncyCastleEntropyMonitor.RNG
- uid: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.RNG*
  name: RNG
  href: api/wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.html#wan24_Crypto_BC_DisposableBouncyCastleEntropyMonitor_RNG_
  commentId: Overload:wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.RNG
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableBouncyCastleEntropyMonitor.RNG
  nameWithType: DisposableBouncyCastleEntropyMonitor.RNG
- uid: wan24.Crypto.BC.DisposableRngWrapper
  name: DisposableRngWrapper
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html
  commentId: T:wan24.Crypto.BC.DisposableRngWrapper
  fullName: wan24.Crypto.BC.DisposableRngWrapper
  nameWithType: DisposableRngWrapper
- uid: wan24.Crypto.BC.DisposableRngWrapper.#ctor(Org.BouncyCastle.Crypto.Prng.IRandomGenerator)
  name: DisposableRngWrapper(IRandomGenerator)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper__ctor_Org_BouncyCastle_Crypto_Prng_IRandomGenerator_
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.#ctor(Org.BouncyCastle.Crypto.Prng.IRandomGenerator)
  name.vb: New(IRandomGenerator)
  fullName: wan24.Crypto.BC.DisposableRngWrapper.DisposableRngWrapper(Org.BouncyCastle.Crypto.Prng.IRandomGenerator)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.New(Org.BouncyCastle.Crypto.Prng.IRandomGenerator)
  nameWithType: DisposableRngWrapper.DisposableRngWrapper(IRandomGenerator)
  nameWithType.vb: DisposableRngWrapper.New(IRandomGenerator)
- uid: wan24.Crypto.BC.DisposableRngWrapper.#ctor*
  name: DisposableRngWrapper
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper__ctor_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.DisposableRngWrapper.DisposableRngWrapper
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.New
  nameWithType: DisposableRngWrapper.DisposableRngWrapper
  nameWithType.vb: DisposableRngWrapper.New
- uid: wan24.Crypto.BC.DisposableRngWrapper.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.DisposableRngWrapper.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: DisposableRngWrapper.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: DisposableRngWrapper.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.DisposableRngWrapper.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_AddSeed_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.AddSeed
  nameWithType: DisposableRngWrapper.AddSeed
- uid: wan24.Crypto.BC.DisposableRngWrapper.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.DisposableRngWrapper.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: DisposableRngWrapper.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: DisposableRngWrapper.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.DisposableRngWrapper.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.AddSeedAsync
  nameWithType: DisposableRngWrapper.AddSeedAsync
- uid: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(Byte())
  nameWithType: DisposableRngWrapper.AddSeedMaterial(byte[])
  nameWithType.vb: DisposableRngWrapper.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(Long)
  nameWithType: DisposableRngWrapper.AddSeedMaterial(long)
  nameWithType.vb: DisposableRngWrapper.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: DisposableRngWrapper.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: DisposableRngWrapper.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.AddSeedMaterial
  nameWithType: DisposableRngWrapper.AddSeedMaterial
- uid: wan24.Crypto.BC.DisposableRngWrapper.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.DisposableRngWrapper.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.Dispose(Boolean)
  nameWithType: DisposableRngWrapper.Dispose(bool)
  nameWithType.vb: DisposableRngWrapper.Dispose(Boolean)
- uid: wan24.Crypto.BC.DisposableRngWrapper.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_Dispose_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.Dispose
  nameWithType: DisposableRngWrapper.Dispose
- uid: wan24.Crypto.BC.DisposableRngWrapper.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_DisposeCore
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.DisposeCore
  fullName: wan24.Crypto.BC.DisposableRngWrapper.DisposeCore()
  nameWithType: DisposableRngWrapper.DisposeCore()
- uid: wan24.Crypto.BC.DisposableRngWrapper.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.DisposeCore
  nameWithType: DisposableRngWrapper.DisposeCore
- uid: wan24.Crypto.BC.DisposableRngWrapper.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.DisposableRngWrapper.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.FillBytes(System.Span(Of Byte))
  nameWithType: DisposableRngWrapper.FillBytes(in Span<byte>)
  nameWithType.vb: DisposableRngWrapper.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.DisposableRngWrapper.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_FillBytes_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.FillBytes
  nameWithType: DisposableRngWrapper.FillBytes
- uid: wan24.Crypto.BC.DisposableRngWrapper.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.DisposableRngWrapper.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: DisposableRngWrapper.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: DisposableRngWrapper.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.DisposableRngWrapper.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.FillBytesAsync
  nameWithType: DisposableRngWrapper.FillBytesAsync
- uid: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(Byte())
  nameWithType: DisposableRngWrapper.NextBytes(byte[])
  nameWithType.vb: DisposableRngWrapper.NextBytes(Byte())
- uid: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(Byte(), Integer, Integer)
  nameWithType: DisposableRngWrapper.NextBytes(byte[], int, int)
  nameWithType.vb: DisposableRngWrapper.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.DisposableRngWrapper.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.DisposableRngWrapper.NextBytes(System.Span(Of Byte))
  nameWithType: DisposableRngWrapper.NextBytes(Span<byte>)
  nameWithType.vb: DisposableRngWrapper.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.DisposableRngWrapper.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_NextBytes_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.NextBytes
  nameWithType: DisposableRngWrapper.NextBytes
- uid: wan24.Crypto.BC.DisposableRngWrapper.RNG
  name: RNG
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_RNG
  commentId: P:wan24.Crypto.BC.DisposableRngWrapper.RNG
  fullName: wan24.Crypto.BC.DisposableRngWrapper.RNG
  nameWithType: DisposableRngWrapper.RNG
- uid: wan24.Crypto.BC.DisposableRngWrapper.RNG*
  name: RNG
  href: api/wan24.Crypto.BC.DisposableRngWrapper.html#wan24_Crypto_BC_DisposableRngWrapper_RNG_
  commentId: Overload:wan24.Crypto.BC.DisposableRngWrapper.RNG
  isSpec: "True"
  fullName: wan24.Crypto.BC.DisposableRngWrapper.RNG
  nameWithType: DisposableRngWrapper.RNG
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm
  name: EncryptionAes256GcmAlgorithm
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm
  nameWithType: EncryptionAes256GcmAlgorithm
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_NAME
  nameWithType: EncryptionAes256GcmAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.ALGORITHM_VALUE
  nameWithType: EncryptionAes256GcmAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BLOCK_SIZE
  nameWithType: EncryptionAes256GcmAlgorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  nameWithType: EncryptionAes256GcmAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.BlockSize
  nameWithType: EncryptionAes256GcmAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  name: CreateAes(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_CreateAes_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionAes256GcmAlgorithm.CreateAes(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes*
  name: CreateAes
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_CreateAes_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateAes
  nameWithType: EncryptionAes256GcmAlgorithm.CreateAes
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionAes256GcmAlgorithm.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: EncryptionAes256GcmAlgorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.CreateCipher
  nameWithType: EncryptionAes256GcmAlgorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DISPLAY_NAME
  nameWithType: EncryptionAes256GcmAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  nameWithType: EncryptionAes256GcmAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.DisplayName
  nameWithType: EncryptionAes256GcmAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(byte[])
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(Byte())
  nameWithType: EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(byte[])
  nameWithType.vb: EncryptionAes256GcmAlgorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.EnsureValidKeyLength
  nameWithType: EncryptionAes256GcmAlgorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IV_SIZE
  nameWithType: EncryptionAes256GcmAlgorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(int)
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  name.vb: IsKeyLengthValid(Integer)
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid(int)
  fullName.vb: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid(Integer)
  nameWithType: EncryptionAes256GcmAlgorithm.IsKeyLengthValid(int)
  nameWithType.vb: EncryptionAes256GcmAlgorithm.IsKeyLengthValid(Integer)
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsKeyLengthValid
  nameWithType: EncryptionAes256GcmAlgorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  nameWithType: EncryptionAes256GcmAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IsPostQuantum
  nameWithType: EncryptionAes256GcmAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  nameWithType: EncryptionAes256GcmAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.IvSize
  nameWithType: EncryptionAes256GcmAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KEY_SIZE
  nameWithType: EncryptionAes256GcmAlgorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  nameWithType: EncryptionAes256GcmAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.KeySize
  nameWithType: EncryptionAes256GcmAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  name: MAX_CIPHER_DATA_LENGTH
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_MAX_CIPHER_DATA_LENGTH
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  nameWithType: EncryptionAes256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: EncryptionAes256GcmAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxCipherDataLength
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_MaxCipherDataLength
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxCipherDataLength
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionAes256GcmAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxCipherDataLength*
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_MaxCipherDataLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxCipherDataLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionAes256GcmAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionAes256GcmAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionAes256GcmAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.PROFILE_AES256GCM_RAW
  name: PROFILE_AES256GCM_RAW
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_PROFILE_AES256GCM_RAW
  commentId: F:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.PROFILE_AES256GCM_RAW
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.PROFILE_AES256GCM_RAW
  nameWithType: EncryptionAes256GcmAlgorithm.PROFILE_AES256GCM_RAW
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionAes256GcmAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionAes256GcmAlgorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionAes256GcmAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionAes256GcmAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm
  name: EncryptionBcAes256CbcAlgorithm
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm
  nameWithType: EncryptionBcAes256CbcAlgorithm
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.ALGORITHM_NAME
  nameWithType: EncryptionBcAes256CbcAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.ALGORITHM_VALUE
  nameWithType: EncryptionBcAes256CbcAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BLOCK_SIZE
  nameWithType: EncryptionBcAes256CbcAlgorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BlockSize
  nameWithType: EncryptionBcAes256CbcAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.BlockSize
  nameWithType: EncryptionBcAes256CbcAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  name: CreateAes(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_CreateAes_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateAes(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionBcAes256CbcAlgorithm.CreateAes(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateAes*
  name: CreateAes
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_CreateAes_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateAes
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateAes
  nameWithType: EncryptionBcAes256CbcAlgorithm.CreateAes
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionBcAes256CbcAlgorithm.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: EncryptionBcAes256CbcAlgorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.CreateCipher
  nameWithType: EncryptionBcAes256CbcAlgorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DISPLAY_NAME
  nameWithType: EncryptionBcAes256CbcAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DisplayName
  nameWithType: EncryptionBcAes256CbcAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.DisplayName
  nameWithType: EncryptionBcAes256CbcAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(byte[])
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength(byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength(Byte())
  nameWithType: EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength(byte[])
  nameWithType.vb: EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength
  nameWithType: EncryptionBcAes256CbcAlgorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IV_SIZE
  nameWithType: EncryptionBcAes256CbcAlgorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(int)
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid(System.Int32)
  name.vb: IsKeyLengthValid(Integer)
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid(int)
  fullName.vb: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid(Integer)
  nameWithType: EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid(int)
  nameWithType.vb: EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid(Integer)
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid
  nameWithType: EncryptionBcAes256CbcAlgorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsPostQuantum
  nameWithType: EncryptionBcAes256CbcAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IsPostQuantum
  nameWithType: EncryptionBcAes256CbcAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IvSize
  nameWithType: EncryptionBcAes256CbcAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.IvSize
  nameWithType: EncryptionBcAes256CbcAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KEY_SIZE
  nameWithType: EncryptionBcAes256CbcAlgorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KeySize
  nameWithType: EncryptionBcAes256CbcAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.KeySize
  nameWithType: EncryptionBcAes256CbcAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  name: MAX_CIPHER_DATA_LENGTH
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_MAX_CIPHER_DATA_LENGTH
  commentId: F:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  nameWithType: EncryptionBcAes256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: EncryptionBcAes256CbcAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxCipherDataLength
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_MaxCipherDataLength
  commentId: P:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxCipherDataLength
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionBcAes256CbcAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxCipherDataLength*
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_MaxCipherDataLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxCipherDataLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionBcAes256CbcAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionBcAes256CbcAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionBcAes256CbcAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionBcAes256CbcAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionBcAes256CbcAlgorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionBcAes256CbcAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionBcAes256CbcAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm
  name: EncryptionChaCha20Algorithm
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionChaCha20Algorithm
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm
  nameWithType: EncryptionChaCha20Algorithm
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_NAME
  nameWithType: EncryptionChaCha20Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.ALGORITHM_VALUE
  nameWithType: EncryptionChaCha20Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BLOCK_SIZE
  nameWithType: EncryptionChaCha20Algorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  nameWithType: EncryptionChaCha20Algorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.BlockSize
  nameWithType: EncryptionChaCha20Algorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha(wan24.Crypto.CryptoOptions)
  name: CreateChaCha(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_CreateChaCha_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionChaCha20Algorithm.CreateChaCha(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha*
  name: CreateChaCha
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_CreateChaCha_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateChaCha
  nameWithType: EncryptionChaCha20Algorithm.CreateChaCha
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionChaCha20Algorithm.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: EncryptionChaCha20Algorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.CreateCipher
  nameWithType: EncryptionChaCha20Algorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DISPLAY_NAME
  nameWithType: EncryptionChaCha20Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  nameWithType: EncryptionChaCha20Algorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.DisplayName
  nameWithType: EncryptionChaCha20Algorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(byte[])
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength(byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength(Byte())
  nameWithType: EncryptionChaCha20Algorithm.EnsureValidKeyLength(byte[])
  nameWithType.vb: EncryptionChaCha20Algorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.EnsureValidKeyLength
  nameWithType: EncryptionChaCha20Algorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IV_SIZE
  nameWithType: EncryptionChaCha20Algorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(int)
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid(System.Int32)
  name.vb: IsKeyLengthValid(Integer)
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid(int)
  fullName.vb: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid(Integer)
  nameWithType: EncryptionChaCha20Algorithm.IsKeyLengthValid(int)
  nameWithType.vb: EncryptionChaCha20Algorithm.IsKeyLengthValid(Integer)
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsKeyLengthValid
  nameWithType: EncryptionChaCha20Algorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  nameWithType: EncryptionChaCha20Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IsPostQuantum
  nameWithType: EncryptionChaCha20Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  nameWithType: EncryptionChaCha20Algorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.IvSize
  nameWithType: EncryptionChaCha20Algorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KEY_SIZE
  nameWithType: EncryptionChaCha20Algorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  nameWithType: EncryptionChaCha20Algorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.KeySize
  nameWithType: EncryptionChaCha20Algorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MAX_CIPHER_DATA_LENGTH
  name: MAX_CIPHER_DATA_LENGTH
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_MAX_CIPHER_DATA_LENGTH
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.MAX_CIPHER_DATA_LENGTH
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MAX_CIPHER_DATA_LENGTH
  nameWithType: EncryptionChaCha20Algorithm.MAX_CIPHER_DATA_LENGTH
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MAX_KEY_USAGE_COUNT
  nameWithType: EncryptionChaCha20Algorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxCipherDataLength
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_MaxCipherDataLength
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxCipherDataLength
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxCipherDataLength
  nameWithType: EncryptionChaCha20Algorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxCipherDataLength*
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_MaxCipherDataLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxCipherDataLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxCipherDataLength
  nameWithType: EncryptionChaCha20Algorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxKeyUsageCount
  nameWithType: EncryptionChaCha20Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.MaxKeyUsageCount
  nameWithType: EncryptionChaCha20Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.PROFILE_CHACHA20_RAW
  name: PROFILE_CHACHA20_RAW
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_PROFILE_CHACHA20_RAW
  commentId: F:wan24.Crypto.BC.EncryptionChaCha20Algorithm.PROFILE_CHACHA20_RAW
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.PROFILE_CHACHA20_RAW
  nameWithType: EncryptionChaCha20Algorithm.PROFILE_CHACHA20_RAW
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  nameWithType: EncryptionChaCha20Algorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionChaCha20Algorithm.html#wan24_Crypto_BC_EncryptionChaCha20Algorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionChaCha20Algorithm.RequireMacAuthentication
  nameWithType: EncryptionChaCha20Algorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm
  name: EncryptionSerpent256CbcAlgorithm
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm
  nameWithType: EncryptionSerpent256CbcAlgorithm
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.ALGORITHM_NAME
  nameWithType: EncryptionSerpent256CbcAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.ALGORITHM_VALUE
  nameWithType: EncryptionSerpent256CbcAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BLOCK_SIZE
  nameWithType: EncryptionSerpent256CbcAlgorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BlockSize
  nameWithType: EncryptionSerpent256CbcAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.BlockSize
  nameWithType: EncryptionSerpent256CbcAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionSerpent256CbcAlgorithm.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: EncryptionSerpent256CbcAlgorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateCipher
  nameWithType: EncryptionSerpent256CbcAlgorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateParameters(byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateParameters(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionSerpent256CbcAlgorithm.CreateParameters(byte[], CryptoOptions)
  nameWithType.vb: EncryptionSerpent256CbcAlgorithm.CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateParameters
  nameWithType: EncryptionSerpent256CbcAlgorithm.CreateParameters
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateSerpent(wan24.Crypto.CryptoOptions)
  name: CreateSerpent(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_CreateSerpent_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateSerpent(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateSerpent(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionSerpent256CbcAlgorithm.CreateSerpent(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateSerpent*
  name: CreateSerpent
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_CreateSerpent_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateSerpent
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.CreateSerpent
  nameWithType: EncryptionSerpent256CbcAlgorithm.CreateSerpent
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DISPLAY_NAME
  nameWithType: EncryptionSerpent256CbcAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DisplayName
  nameWithType: EncryptionSerpent256CbcAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.DisplayName
  nameWithType: EncryptionSerpent256CbcAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(byte[])
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength(byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength(Byte())
  nameWithType: EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength(byte[])
  nameWithType.vb: EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength
  nameWithType: EncryptionSerpent256CbcAlgorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IV_SIZE
  nameWithType: EncryptionSerpent256CbcAlgorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(int)
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid(System.Int32)
  name.vb: IsKeyLengthValid(Integer)
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid(int)
  fullName.vb: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid(Integer)
  nameWithType: EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid(int)
  nameWithType.vb: EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid(Integer)
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid
  nameWithType: EncryptionSerpent256CbcAlgorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsPostQuantum
  nameWithType: EncryptionSerpent256CbcAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IsPostQuantum
  nameWithType: EncryptionSerpent256CbcAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IvSize
  nameWithType: EncryptionSerpent256CbcAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.IvSize
  nameWithType: EncryptionSerpent256CbcAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KEY_SIZE
  nameWithType: EncryptionSerpent256CbcAlgorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KeySize
  nameWithType: EncryptionSerpent256CbcAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.KeySize
  nameWithType: EncryptionSerpent256CbcAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  name: MAX_CIPHER_DATA_LENGTH
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_MAX_CIPHER_DATA_LENGTH
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  nameWithType: EncryptionSerpent256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: EncryptionSerpent256CbcAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxCipherDataLength
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_MaxCipherDataLength
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxCipherDataLength
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionSerpent256CbcAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxCipherDataLength*
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_MaxCipherDataLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxCipherDataLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionSerpent256CbcAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionSerpent256CbcAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionSerpent256CbcAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.PROFILE_SERPENT256CBC_RAW
  name: PROFILE_SERPENT256CBC_RAW
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_PROFILE_SERPENT256CBC_RAW
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.PROFILE_SERPENT256CBC_RAW
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.PROFILE_SERPENT256CBC_RAW
  nameWithType: EncryptionSerpent256CbcAlgorithm.PROFILE_SERPENT256CBC_RAW
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionSerpent256CbcAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256CbcAlgorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256CbcAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionSerpent256CbcAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm
  name: EncryptionSerpent256GcmAlgorithm
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm
  nameWithType: EncryptionSerpent256GcmAlgorithm
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.ALGORITHM_NAME
  nameWithType: EncryptionSerpent256GcmAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.ALGORITHM_VALUE
  nameWithType: EncryptionSerpent256GcmAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BLOCK_SIZE
  nameWithType: EncryptionSerpent256GcmAlgorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BlockSize
  nameWithType: EncryptionSerpent256GcmAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.BlockSize
  nameWithType: EncryptionSerpent256GcmAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionSerpent256GcmAlgorithm.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: EncryptionSerpent256GcmAlgorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateCipher
  nameWithType: EncryptionSerpent256GcmAlgorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateSerpent(wan24.Crypto.CryptoOptions)
  name: CreateSerpent(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_CreateSerpent_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateSerpent(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateSerpent(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionSerpent256GcmAlgorithm.CreateSerpent(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateSerpent*
  name: CreateSerpent
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_CreateSerpent_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateSerpent
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.CreateSerpent
  nameWithType: EncryptionSerpent256GcmAlgorithm.CreateSerpent
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DISPLAY_NAME
  nameWithType: EncryptionSerpent256GcmAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DisplayName
  nameWithType: EncryptionSerpent256GcmAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.DisplayName
  nameWithType: EncryptionSerpent256GcmAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(byte[])
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength(byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength(Byte())
  nameWithType: EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength(byte[])
  nameWithType.vb: EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength
  nameWithType: EncryptionSerpent256GcmAlgorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IV_SIZE
  nameWithType: EncryptionSerpent256GcmAlgorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(int)
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  name.vb: IsKeyLengthValid(Integer)
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid(int)
  fullName.vb: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid(Integer)
  nameWithType: EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid(int)
  nameWithType.vb: EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid(Integer)
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid
  nameWithType: EncryptionSerpent256GcmAlgorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsPostQuantum
  nameWithType: EncryptionSerpent256GcmAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IsPostQuantum
  nameWithType: EncryptionSerpent256GcmAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IvSize
  nameWithType: EncryptionSerpent256GcmAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.IvSize
  nameWithType: EncryptionSerpent256GcmAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KEY_SIZE
  nameWithType: EncryptionSerpent256GcmAlgorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KeySize
  nameWithType: EncryptionSerpent256GcmAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.KeySize
  nameWithType: EncryptionSerpent256GcmAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  name: MAX_CIPHER_DATA_LENGTH
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_MAX_CIPHER_DATA_LENGTH
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  nameWithType: EncryptionSerpent256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: EncryptionSerpent256GcmAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxCipherDataLength
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_MaxCipherDataLength
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxCipherDataLength
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionSerpent256GcmAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxCipherDataLength*
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_MaxCipherDataLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxCipherDataLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionSerpent256GcmAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionSerpent256GcmAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionSerpent256GcmAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.PROFILE_SERPENT256GCM_RAW
  name: PROFILE_SERPENT256GCM_RAW
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_PROFILE_SERPENT256GCM_RAW
  commentId: F:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.PROFILE_SERPENT256GCM_RAW
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.PROFILE_SERPENT256GCM_RAW
  nameWithType: EncryptionSerpent256GcmAlgorithm.PROFILE_SERPENT256GCM_RAW
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionSerpent256GcmAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionSerpent256GcmAlgorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionSerpent256GcmAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionSerpent256GcmAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm
  name: EncryptionTwofish256CbcAlgorithm
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm
  nameWithType: EncryptionTwofish256CbcAlgorithm
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.ALGORITHM_NAME
  nameWithType: EncryptionTwofish256CbcAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.ALGORITHM_VALUE
  nameWithType: EncryptionTwofish256CbcAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BLOCK_SIZE
  nameWithType: EncryptionTwofish256CbcAlgorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BlockSize
  nameWithType: EncryptionTwofish256CbcAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.BlockSize
  nameWithType: EncryptionTwofish256CbcAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionTwofish256CbcAlgorithm.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: EncryptionTwofish256CbcAlgorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateCipher
  nameWithType: EncryptionTwofish256CbcAlgorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name: CreateParameters(byte[], CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_CreateParameters_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateParameters(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: CreateParameters(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateParameters(byte[], wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateParameters(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionTwofish256CbcAlgorithm.CreateParameters(byte[], CryptoOptions)
  nameWithType.vb: EncryptionTwofish256CbcAlgorithm.CreateParameters(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateParameters*
  name: CreateParameters
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_CreateParameters_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateParameters
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateParameters
  nameWithType: EncryptionTwofish256CbcAlgorithm.CreateParameters
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateTwofish(wan24.Crypto.CryptoOptions)
  name: CreateTwofish(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_CreateTwofish_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateTwofish(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateTwofish(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionTwofish256CbcAlgorithm.CreateTwofish(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateTwofish*
  name: CreateTwofish
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_CreateTwofish_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateTwofish
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.CreateTwofish
  nameWithType: EncryptionTwofish256CbcAlgorithm.CreateTwofish
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DISPLAY_NAME
  nameWithType: EncryptionTwofish256CbcAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DisplayName
  nameWithType: EncryptionTwofish256CbcAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.DisplayName
  nameWithType: EncryptionTwofish256CbcAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(byte[])
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength(byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength(Byte())
  nameWithType: EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength(byte[])
  nameWithType.vb: EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength
  nameWithType: EncryptionTwofish256CbcAlgorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IV_SIZE
  nameWithType: EncryptionTwofish256CbcAlgorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(int)
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid(System.Int32)
  name.vb: IsKeyLengthValid(Integer)
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid(int)
  fullName.vb: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid(Integer)
  nameWithType: EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid(int)
  nameWithType.vb: EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid(Integer)
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid
  nameWithType: EncryptionTwofish256CbcAlgorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsPostQuantum
  nameWithType: EncryptionTwofish256CbcAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IsPostQuantum
  nameWithType: EncryptionTwofish256CbcAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IvSize
  nameWithType: EncryptionTwofish256CbcAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.IvSize
  nameWithType: EncryptionTwofish256CbcAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KEY_SIZE
  nameWithType: EncryptionTwofish256CbcAlgorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KeySize
  nameWithType: EncryptionTwofish256CbcAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.KeySize
  nameWithType: EncryptionTwofish256CbcAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  name: MAX_CIPHER_DATA_LENGTH
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_MAX_CIPHER_DATA_LENGTH
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
  nameWithType: EncryptionTwofish256CbcAlgorithm.MAX_CIPHER_DATA_LENGTH
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: EncryptionTwofish256CbcAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxCipherDataLength
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_MaxCipherDataLength
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxCipherDataLength
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionTwofish256CbcAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxCipherDataLength*
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_MaxCipherDataLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxCipherDataLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionTwofish256CbcAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionTwofish256CbcAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionTwofish256CbcAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.PROFILE_TWOFISH256CBC_RAW
  name: PROFILE_TWOFISH256CBC_RAW
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_PROFILE_TWOFISH256CBC_RAW
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.PROFILE_TWOFISH256CBC_RAW
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.PROFILE_TWOFISH256CBC_RAW
  nameWithType: EncryptionTwofish256CbcAlgorithm.PROFILE_TWOFISH256CBC_RAW
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionTwofish256CbcAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256CbcAlgorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256CbcAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionTwofish256CbcAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm
  name: EncryptionTwofish256GcmAlgorithm
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm
  nameWithType: EncryptionTwofish256GcmAlgorithm
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.ALGORITHM_NAME
  nameWithType: EncryptionTwofish256GcmAlgorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.ALGORITHM_VALUE
  nameWithType: EncryptionTwofish256GcmAlgorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BLOCK_SIZE
  nameWithType: EncryptionTwofish256GcmAlgorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BlockSize
  nameWithType: EncryptionTwofish256GcmAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.BlockSize
  nameWithType: EncryptionTwofish256GcmAlgorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionTwofish256GcmAlgorithm.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: EncryptionTwofish256GcmAlgorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateCipher
  nameWithType: EncryptionTwofish256GcmAlgorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateTwofish(wan24.Crypto.CryptoOptions)
  name: CreateTwofish(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_CreateTwofish_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateTwofish(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateTwofish(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionTwofish256GcmAlgorithm.CreateTwofish(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateTwofish*
  name: CreateTwofish
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_CreateTwofish_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateTwofish
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.CreateTwofish
  nameWithType: EncryptionTwofish256GcmAlgorithm.CreateTwofish
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DISPLAY_NAME
  nameWithType: EncryptionTwofish256GcmAlgorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DisplayName
  nameWithType: EncryptionTwofish256GcmAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.DisplayName
  nameWithType: EncryptionTwofish256GcmAlgorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(byte[])
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength(byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength(Byte())
  nameWithType: EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength(byte[])
  nameWithType.vb: EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength
  nameWithType: EncryptionTwofish256GcmAlgorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IV_SIZE
  nameWithType: EncryptionTwofish256GcmAlgorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(int)
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid(System.Int32)
  name.vb: IsKeyLengthValid(Integer)
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid(int)
  fullName.vb: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid(Integer)
  nameWithType: EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid(int)
  nameWithType.vb: EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid(Integer)
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid
  nameWithType: EncryptionTwofish256GcmAlgorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsPostQuantum
  nameWithType: EncryptionTwofish256GcmAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IsPostQuantum
  nameWithType: EncryptionTwofish256GcmAlgorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IvSize
  nameWithType: EncryptionTwofish256GcmAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.IvSize
  nameWithType: EncryptionTwofish256GcmAlgorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KEY_SIZE
  nameWithType: EncryptionTwofish256GcmAlgorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KeySize
  nameWithType: EncryptionTwofish256GcmAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.KeySize
  nameWithType: EncryptionTwofish256GcmAlgorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  name: MAX_CIPHER_DATA_LENGTH
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_MAX_CIPHER_DATA_LENGTH
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
  nameWithType: EncryptionTwofish256GcmAlgorithm.MAX_CIPHER_DATA_LENGTH
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MAX_KEY_USAGE_COUNT
  nameWithType: EncryptionTwofish256GcmAlgorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxCipherDataLength
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_MaxCipherDataLength
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxCipherDataLength
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionTwofish256GcmAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxCipherDataLength*
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_MaxCipherDataLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxCipherDataLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxCipherDataLength
  nameWithType: EncryptionTwofish256GcmAlgorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionTwofish256GcmAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.MaxKeyUsageCount
  nameWithType: EncryptionTwofish256GcmAlgorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.PROFILE_TWOFISH256GCM_RAW
  name: PROFILE_TWOFISH256GCM_RAW
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_PROFILE_TWOFISH256GCM_RAW
  commentId: F:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.PROFILE_TWOFISH256GCM_RAW
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.PROFILE_TWOFISH256GCM_RAW
  nameWithType: EncryptionTwofish256GcmAlgorithm.PROFILE_TWOFISH256GCM_RAW
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionTwofish256GcmAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.html#wan24_Crypto_BC_EncryptionTwofish256GcmAlgorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionTwofish256GcmAlgorithm.RequireMacAuthentication
  nameWithType: EncryptionTwofish256GcmAlgorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm
  name: EncryptionXSalsa20Algorithm
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html
  commentId: T:wan24.Crypto.BC.EncryptionXSalsa20Algorithm
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm
  nameWithType: EncryptionXSalsa20Algorithm
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_NAME
  nameWithType: EncryptionXSalsa20Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.ALGORITHM_VALUE
  nameWithType: EncryptionXSalsa20Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BLOCK_SIZE
  name: BLOCK_SIZE
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_BLOCK_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BLOCK_SIZE
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BLOCK_SIZE
  nameWithType: EncryptionXSalsa20Algorithm.BLOCK_SIZE
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_BlockSize
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  nameWithType: EncryptionXSalsa20Algorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize*
  name: BlockSize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_BlockSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.BlockSize
  nameWithType: EncryptionXSalsa20Algorithm.BlockSize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name: CreateCipher(bool, CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_CreateCipher_System_Boolean_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher(System.Boolean,wan24.Crypto.CryptoOptions)
  name.vb: CreateCipher(Boolean, CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher(bool, wan24.Crypto.CryptoOptions)
  fullName.vb: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher(Boolean, wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionXSalsa20Algorithm.CreateCipher(bool, CryptoOptions)
  nameWithType.vb: EncryptionXSalsa20Algorithm.CreateCipher(Boolean, CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher*
  name: CreateCipher
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_CreateCipher_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateCipher
  nameWithType: EncryptionXSalsa20Algorithm.CreateCipher
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20(wan24.Crypto.CryptoOptions)
  name: CreateXSalsa20(CryptoOptions)
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_CreateXSalsa20_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20(wan24.Crypto.CryptoOptions)
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20(wan24.Crypto.CryptoOptions)
  nameWithType: EncryptionXSalsa20Algorithm.CreateXSalsa20(CryptoOptions)
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20*
  name: CreateXSalsa20
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_CreateXSalsa20_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.CreateXSalsa20
  nameWithType: EncryptionXSalsa20Algorithm.CreateXSalsa20
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DISPLAY_NAME
  nameWithType: EncryptionXSalsa20Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  nameWithType: EncryptionXSalsa20Algorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.DisplayName
  nameWithType: EncryptionXSalsa20Algorithm.DisplayName
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength(System.Byte[])
  name: EnsureValidKeyLength(byte[])
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_EnsureValidKeyLength_System_Byte___
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength(System.Byte[])
  name.vb: EnsureValidKeyLength(Byte())
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength(byte[])
  fullName.vb: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength(Byte())
  nameWithType: EncryptionXSalsa20Algorithm.EnsureValidKeyLength(byte[])
  nameWithType.vb: EncryptionXSalsa20Algorithm.EnsureValidKeyLength(Byte())
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength*
  name: EnsureValidKeyLength
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_EnsureValidKeyLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.EnsureValidKeyLength
  nameWithType: EncryptionXSalsa20Algorithm.EnsureValidKeyLength
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IV_SIZE
  name: IV_SIZE
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IV_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IV_SIZE
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IV_SIZE
  nameWithType: EncryptionXSalsa20Algorithm.IV_SIZE
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid(System.Int32)
  name: IsKeyLengthValid(int)
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IsKeyLengthValid_System_Int32_
  commentId: M:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid(System.Int32)
  name.vb: IsKeyLengthValid(Integer)
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid(int)
  fullName.vb: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid(Integer)
  nameWithType: EncryptionXSalsa20Algorithm.IsKeyLengthValid(int)
  nameWithType.vb: EncryptionXSalsa20Algorithm.IsKeyLengthValid(Integer)
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid*
  name: IsKeyLengthValid
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IsKeyLengthValid_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsKeyLengthValid
  nameWithType: EncryptionXSalsa20Algorithm.IsKeyLengthValid
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  nameWithType: EncryptionXSalsa20Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IsPostQuantum
  nameWithType: EncryptionXSalsa20Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IvSize
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  nameWithType: EncryptionXSalsa20Algorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize*
  name: IvSize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_IvSize_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.IvSize
  nameWithType: EncryptionXSalsa20Algorithm.IvSize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KEY_SIZE
  name: KEY_SIZE
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_KEY_SIZE
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KEY_SIZE
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KEY_SIZE
  nameWithType: EncryptionXSalsa20Algorithm.KEY_SIZE
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_KeySize
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  nameWithType: EncryptionXSalsa20Algorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize*
  name: KeySize
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_KeySize_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.KeySize
  nameWithType: EncryptionXSalsa20Algorithm.KeySize
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MAX_CIPHER_DATA_LENGTH
  name: MAX_CIPHER_DATA_LENGTH
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_MAX_CIPHER_DATA_LENGTH
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MAX_CIPHER_DATA_LENGTH
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MAX_CIPHER_DATA_LENGTH
  nameWithType: EncryptionXSalsa20Algorithm.MAX_CIPHER_DATA_LENGTH
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MAX_KEY_USAGE_COUNT
  name: MAX_KEY_USAGE_COUNT
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_MAX_KEY_USAGE_COUNT
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MAX_KEY_USAGE_COUNT
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MAX_KEY_USAGE_COUNT
  nameWithType: EncryptionXSalsa20Algorithm.MAX_KEY_USAGE_COUNT
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxCipherDataLength
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_MaxCipherDataLength
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxCipherDataLength
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxCipherDataLength
  nameWithType: EncryptionXSalsa20Algorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxCipherDataLength*
  name: MaxCipherDataLength
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_MaxCipherDataLength_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxCipherDataLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxCipherDataLength
  nameWithType: EncryptionXSalsa20Algorithm.MaxCipherDataLength
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxKeyUsageCount
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_MaxKeyUsageCount
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxKeyUsageCount
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxKeyUsageCount
  nameWithType: EncryptionXSalsa20Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxKeyUsageCount*
  name: MaxKeyUsageCount
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_MaxKeyUsageCount_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxKeyUsageCount
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.MaxKeyUsageCount
  nameWithType: EncryptionXSalsa20Algorithm.MaxKeyUsageCount
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.PROFILE_XSALSA20_RAW
  name: PROFILE_XSALSA20_RAW
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_PROFILE_XSALSA20_RAW
  commentId: F:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.PROFILE_XSALSA20_RAW
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.PROFILE_XSALSA20_RAW
  nameWithType: EncryptionXSalsa20Algorithm.PROFILE_XSALSA20_RAW
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_RequireMacAuthentication
  commentId: P:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  nameWithType: EncryptionXSalsa20Algorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication*
  name: RequireMacAuthentication
  href: api/wan24.Crypto.BC.EncryptionXSalsa20Algorithm.html#wan24_Crypto_BC_EncryptionXSalsa20Algorithm_RequireMacAuthentication_
  commentId: Overload:wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  isSpec: "True"
  fullName: wan24.Crypto.BC.EncryptionXSalsa20Algorithm.RequireMacAuthentication
  nameWithType: EncryptionXSalsa20Algorithm.RequireMacAuthentication
- uid: wan24.Crypto.BC.Extensions
  name: Extensions
  href: api/wan24.Crypto.BC.Extensions.html
  commentId: T:wan24.Crypto.BC.Extensions
  fullName: wan24.Crypto.BC.Extensions
  nameWithType: Extensions
- uid: wan24.Crypto.BC.Extensions.GetState(Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator)
  name: GetState(VmpcRandomGenerator)
  href: api/wan24.Crypto.BC.Extensions.html#wan24_Crypto_BC_Extensions_GetState_Org_BouncyCastle_Crypto_Prng_VmpcRandomGenerator_
  commentId: M:wan24.Crypto.BC.Extensions.GetState(Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator)
  fullName: wan24.Crypto.BC.Extensions.GetState(Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator)
  nameWithType: Extensions.GetState(VmpcRandomGenerator)
- uid: wan24.Crypto.BC.Extensions.GetState*
  name: GetState
  href: api/wan24.Crypto.BC.Extensions.html#wan24_Crypto_BC_Extensions_GetState_
  commentId: Overload:wan24.Crypto.BC.Extensions.GetState
  isSpec: "True"
  fullName: wan24.Crypto.BC.Extensions.GetState
  nameWithType: Extensions.GetState
- uid: wan24.Crypto.BC.Extensions.RestoreState(Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator,System.ReadOnlySpan{System.Byte})
  name: RestoreState(VmpcRandomGenerator, ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.Extensions.html#wan24_Crypto_BC_Extensions_RestoreState_Org_BouncyCastle_Crypto_Prng_VmpcRandomGenerator_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.Extensions.RestoreState(Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator,System.ReadOnlySpan{System.Byte})
  name.vb: RestoreState(VmpcRandomGenerator, ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.Extensions.RestoreState(Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator, System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.Extensions.RestoreState(Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator, System.ReadOnlySpan(Of Byte))
  nameWithType: Extensions.RestoreState(VmpcRandomGenerator, ReadOnlySpan<byte>)
  nameWithType.vb: Extensions.RestoreState(VmpcRandomGenerator, ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.Extensions.RestoreState*
  name: RestoreState
  href: api/wan24.Crypto.BC.Extensions.html#wan24_Crypto_BC_Extensions_RestoreState_
  commentId: Overload:wan24.Crypto.BC.Extensions.RestoreState
  isSpec: "True"
  fullName: wan24.Crypto.BC.Extensions.RestoreState
  nameWithType: Extensions.RestoreState
- uid: wan24.Crypto.BC.Extensions.ToX25519PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  name: ToX25519PrivateKey(Ed25519PrivateKeyParameters)
  href: api/wan24.Crypto.BC.Extensions.html#wan24_Crypto_BC_Extensions_ToX25519PrivateKey_Org_BouncyCastle_Crypto_Parameters_Ed25519PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.Extensions.ToX25519PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  fullName: wan24.Crypto.BC.Extensions.ToX25519PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters)
  nameWithType: Extensions.ToX25519PrivateKey(Ed25519PrivateKeyParameters)
- uid: wan24.Crypto.BC.Extensions.ToX25519PrivateKey*
  name: ToX25519PrivateKey
  href: api/wan24.Crypto.BC.Extensions.html#wan24_Crypto_BC_Extensions_ToX25519PrivateKey_
  commentId: Overload:wan24.Crypto.BC.Extensions.ToX25519PrivateKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.Extensions.ToX25519PrivateKey
  nameWithType: Extensions.ToX25519PrivateKey
- uid: wan24.Crypto.BC.Extensions.ToX448PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  name: ToX448PrivateKey(Ed448PrivateKeyParameters)
  href: api/wan24.Crypto.BC.Extensions.html#wan24_Crypto_BC_Extensions_ToX448PrivateKey_Org_BouncyCastle_Crypto_Parameters_Ed448PrivateKeyParameters_
  commentId: M:wan24.Crypto.BC.Extensions.ToX448PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  fullName: wan24.Crypto.BC.Extensions.ToX448PrivateKey(Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters)
  nameWithType: Extensions.ToX448PrivateKey(Ed448PrivateKeyParameters)
- uid: wan24.Crypto.BC.Extensions.ToX448PrivateKey*
  name: ToX448PrivateKey
  href: api/wan24.Crypto.BC.Extensions.html#wan24_Crypto_BC_Extensions_ToX448PrivateKey_
  commentId: Overload:wan24.Crypto.BC.Extensions.ToX448PrivateKey
  isSpec: "True"
  fullName: wan24.Crypto.BC.Extensions.ToX448PrivateKey
  nameWithType: Extensions.ToX448PrivateKey
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm
  name: HashBcSha3_256Algorithm
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html
  commentId: T:wan24.Crypto.BC.HashBcSha3_256Algorithm
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm
  nameWithType: HashBcSha3_256Algorithm
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.HashBcSha3_256Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.ALGORITHM_NAME
  nameWithType: HashBcSha3_256Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.HashBcSha3_256Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.ALGORITHM_VALUE
  nameWithType: HashBcSha3_256Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.HashBcSha3_256Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.DISPLAY_NAME
  nameWithType: HashBcSha3_256Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.HashBcSha3_256Algorithm.DisplayName
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.DisplayName
  nameWithType: HashBcSha3_256Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_256Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.DisplayName
  nameWithType: HashBcSha3_256Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name: GetHashAlgorithmInt(CryptoOptions?)
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_GetHashAlgorithmInt_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.HashBcSha3_256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name.vb: GetHashAlgorithmInt(CryptoOptions)
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.HashBcSha3_256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  nameWithType: HashBcSha3_256Algorithm.GetHashAlgorithmInt(CryptoOptions?)
  nameWithType.vb: HashBcSha3_256Algorithm.GetHashAlgorithmInt(CryptoOptions)
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.GetHashAlgorithmInt*
  name: GetHashAlgorithmInt
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_GetHashAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_256Algorithm.GetHashAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.GetHashAlgorithmInt
  nameWithType: HashBcSha3_256Algorithm.GetHashAlgorithmInt
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.HASH_LENGTH
  name: HASH_LENGTH
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_HASH_LENGTH
  commentId: F:wan24.Crypto.BC.HashBcSha3_256Algorithm.HASH_LENGTH
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.HASH_LENGTH
  nameWithType: HashBcSha3_256Algorithm.HASH_LENGTH
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.HashLength
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_HashLength
  commentId: P:wan24.Crypto.BC.HashBcSha3_256Algorithm.HashLength
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.HashLength
  nameWithType: HashBcSha3_256Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.HashLength*
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_HashLength_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_256Algorithm.HashLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.HashLength
  nameWithType: HashBcSha3_256Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.HashBcSha3_256Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.IsPostQuantum
  nameWithType: HashBcSha3_256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_256Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.IsPostQuantum
  nameWithType: HashBcSha3_256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256
  name: HashBcSha3_256Algorithm.SHA3_256
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.html
  commentId: T:wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256
  nameWithType: HashBcSha3_256Algorithm.SHA3_256
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.#ctor
  name: SHA3_256()
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_SHA3_256__ctor
  commentId: M:wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.SHA3_256()
  fullName.vb: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.New()
  nameWithType: HashBcSha3_256Algorithm.SHA3_256.SHA3_256()
  nameWithType.vb: HashBcSha3_256Algorithm.SHA3_256.New()
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.#ctor*
  name: SHA3_256
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_SHA3_256__ctor_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.SHA3_256
  fullName.vb: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.New
  nameWithType: HashBcSha3_256Algorithm.SHA3_256.SHA3_256
  nameWithType.vb: HashBcSha3_256Algorithm.SHA3_256.New
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.Register
  name: Register()
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_SHA3_256_Register
  commentId: M:wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.Register
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.Register()
  nameWithType: HashBcSha3_256Algorithm.SHA3_256.Register()
- uid: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.Register*
  name: Register
  href: api/wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.html#wan24_Crypto_BC_HashBcSha3_256Algorithm_SHA3_256_Register_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_256Algorithm.SHA3_256.Register
  nameWithType: HashBcSha3_256Algorithm.SHA3_256.Register
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm
  name: HashBcSha3_384Algorithm
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html
  commentId: T:wan24.Crypto.BC.HashBcSha3_384Algorithm
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm
  nameWithType: HashBcSha3_384Algorithm
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.HashBcSha3_384Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.ALGORITHM_NAME
  nameWithType: HashBcSha3_384Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.HashBcSha3_384Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.ALGORITHM_VALUE
  nameWithType: HashBcSha3_384Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.HashBcSha3_384Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.DISPLAY_NAME
  nameWithType: HashBcSha3_384Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.HashBcSha3_384Algorithm.DisplayName
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.DisplayName
  nameWithType: HashBcSha3_384Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_384Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.DisplayName
  nameWithType: HashBcSha3_384Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name: GetHashAlgorithmInt(CryptoOptions?)
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_GetHashAlgorithmInt_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.HashBcSha3_384Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name.vb: GetHashAlgorithmInt(CryptoOptions)
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.HashBcSha3_384Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  nameWithType: HashBcSha3_384Algorithm.GetHashAlgorithmInt(CryptoOptions?)
  nameWithType.vb: HashBcSha3_384Algorithm.GetHashAlgorithmInt(CryptoOptions)
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.GetHashAlgorithmInt*
  name: GetHashAlgorithmInt
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_GetHashAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_384Algorithm.GetHashAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.GetHashAlgorithmInt
  nameWithType: HashBcSha3_384Algorithm.GetHashAlgorithmInt
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.HASH_LENGTH
  name: HASH_LENGTH
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_HASH_LENGTH
  commentId: F:wan24.Crypto.BC.HashBcSha3_384Algorithm.HASH_LENGTH
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.HASH_LENGTH
  nameWithType: HashBcSha3_384Algorithm.HASH_LENGTH
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.HashLength
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_HashLength
  commentId: P:wan24.Crypto.BC.HashBcSha3_384Algorithm.HashLength
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.HashLength
  nameWithType: HashBcSha3_384Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.HashLength*
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_HashLength_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_384Algorithm.HashLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.HashLength
  nameWithType: HashBcSha3_384Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.HashBcSha3_384Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.IsPostQuantum
  nameWithType: HashBcSha3_384Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_384Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.IsPostQuantum
  nameWithType: HashBcSha3_384Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384
  name: HashBcSha3_384Algorithm.SHA3_384
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.html
  commentId: T:wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384
  nameWithType: HashBcSha3_384Algorithm.SHA3_384
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.#ctor
  name: SHA3_384()
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_SHA3_384__ctor
  commentId: M:wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.SHA3_384()
  fullName.vb: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.New()
  nameWithType: HashBcSha3_384Algorithm.SHA3_384.SHA3_384()
  nameWithType.vb: HashBcSha3_384Algorithm.SHA3_384.New()
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.#ctor*
  name: SHA3_384
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_SHA3_384__ctor_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.SHA3_384
  fullName.vb: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.New
  nameWithType: HashBcSha3_384Algorithm.SHA3_384.SHA3_384
  nameWithType.vb: HashBcSha3_384Algorithm.SHA3_384.New
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.Register
  name: Register()
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_SHA3_384_Register
  commentId: M:wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.Register
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.Register()
  nameWithType: HashBcSha3_384Algorithm.SHA3_384.Register()
- uid: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.Register*
  name: Register
  href: api/wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.html#wan24_Crypto_BC_HashBcSha3_384Algorithm_SHA3_384_Register_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_384Algorithm.SHA3_384.Register
  nameWithType: HashBcSha3_384Algorithm.SHA3_384.Register
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm
  name: HashBcSha3_512Algorithm
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html
  commentId: T:wan24.Crypto.BC.HashBcSha3_512Algorithm
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm
  nameWithType: HashBcSha3_512Algorithm
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.HashBcSha3_512Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.ALGORITHM_NAME
  nameWithType: HashBcSha3_512Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.HashBcSha3_512Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.ALGORITHM_VALUE
  nameWithType: HashBcSha3_512Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.HashBcSha3_512Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.DISPLAY_NAME
  nameWithType: HashBcSha3_512Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.HashBcSha3_512Algorithm.DisplayName
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.DisplayName
  nameWithType: HashBcSha3_512Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_512Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.DisplayName
  nameWithType: HashBcSha3_512Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name: GetHashAlgorithmInt(CryptoOptions?)
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_GetHashAlgorithmInt_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.HashBcSha3_512Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name.vb: GetHashAlgorithmInt(CryptoOptions)
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.HashBcSha3_512Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  nameWithType: HashBcSha3_512Algorithm.GetHashAlgorithmInt(CryptoOptions?)
  nameWithType.vb: HashBcSha3_512Algorithm.GetHashAlgorithmInt(CryptoOptions)
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.GetHashAlgorithmInt*
  name: GetHashAlgorithmInt
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_GetHashAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_512Algorithm.GetHashAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.GetHashAlgorithmInt
  nameWithType: HashBcSha3_512Algorithm.GetHashAlgorithmInt
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.HASH_LENGTH
  name: HASH_LENGTH
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_HASH_LENGTH
  commentId: F:wan24.Crypto.BC.HashBcSha3_512Algorithm.HASH_LENGTH
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.HASH_LENGTH
  nameWithType: HashBcSha3_512Algorithm.HASH_LENGTH
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.HashLength
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_HashLength
  commentId: P:wan24.Crypto.BC.HashBcSha3_512Algorithm.HashLength
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.HashLength
  nameWithType: HashBcSha3_512Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.HashLength*
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_HashLength_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_512Algorithm.HashLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.HashLength
  nameWithType: HashBcSha3_512Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.HashBcSha3_512Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.IsPostQuantum
  nameWithType: HashBcSha3_512Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_512Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.IsPostQuantum
  nameWithType: HashBcSha3_512Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512
  name: HashBcSha3_512Algorithm.SHA3_512
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.html
  commentId: T:wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512
  nameWithType: HashBcSha3_512Algorithm.SHA3_512
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.#ctor
  name: SHA3_512()
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_SHA3_512__ctor
  commentId: M:wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.SHA3_512()
  fullName.vb: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.New()
  nameWithType: HashBcSha3_512Algorithm.SHA3_512.SHA3_512()
  nameWithType.vb: HashBcSha3_512Algorithm.SHA3_512.New()
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.#ctor*
  name: SHA3_512
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_SHA3_512__ctor_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.SHA3_512
  fullName.vb: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.New
  nameWithType: HashBcSha3_512Algorithm.SHA3_512.SHA3_512
  nameWithType.vb: HashBcSha3_512Algorithm.SHA3_512.New
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.Register
  name: Register()
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_SHA3_512_Register
  commentId: M:wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.Register
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.Register()
  nameWithType: HashBcSha3_512Algorithm.SHA3_512.Register()
- uid: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.Register*
  name: Register
  href: api/wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.html#wan24_Crypto_BC_HashBcSha3_512Algorithm_SHA3_512_Register_
  commentId: Overload:wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcSha3_512Algorithm.SHA3_512.Register
  nameWithType: HashBcSha3_512Algorithm.SHA3_512.Register
- uid: wan24.Crypto.BC.HashBcShake128Algorithm
  name: HashBcShake128Algorithm
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html
  commentId: T:wan24.Crypto.BC.HashBcShake128Algorithm
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm
  nameWithType: HashBcShake128Algorithm
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.HashBcShake128Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.ALGORITHM_NAME
  nameWithType: HashBcShake128Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.HashBcShake128Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.ALGORITHM_VALUE
  nameWithType: HashBcShake128Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.HashBcShake128Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.DISPLAY_NAME
  nameWithType: HashBcShake128Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.HashBcShake128Algorithm.DisplayName
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.DisplayName
  nameWithType: HashBcShake128Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.HashBcShake128Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.DisplayName
  nameWithType: HashBcShake128Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name: GetHashAlgorithmInt(CryptoOptions?)
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_GetHashAlgorithmInt_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.HashBcShake128Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name.vb: GetHashAlgorithmInt(CryptoOptions)
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.HashBcShake128Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  nameWithType: HashBcShake128Algorithm.GetHashAlgorithmInt(CryptoOptions?)
  nameWithType.vb: HashBcShake128Algorithm.GetHashAlgorithmInt(CryptoOptions)
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.GetHashAlgorithmInt*
  name: GetHashAlgorithmInt
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_GetHashAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.HashBcShake128Algorithm.GetHashAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.GetHashAlgorithmInt
  nameWithType: HashBcShake128Algorithm.GetHashAlgorithmInt
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.HASH_LENGTH
  name: HASH_LENGTH
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_HASH_LENGTH
  commentId: F:wan24.Crypto.BC.HashBcShake128Algorithm.HASH_LENGTH
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.HASH_LENGTH
  nameWithType: HashBcShake128Algorithm.HASH_LENGTH
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.HashLength
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_HashLength
  commentId: P:wan24.Crypto.BC.HashBcShake128Algorithm.HashLength
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.HashLength
  nameWithType: HashBcShake128Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.HashLength*
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_HashLength_
  commentId: Overload:wan24.Crypto.BC.HashBcShake128Algorithm.HashLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.HashLength
  nameWithType: HashBcShake128Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.HashBcShake128Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.IsPostQuantum
  nameWithType: HashBcShake128Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcShake128Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcShake128Algorithm.html#wan24_Crypto_BC_HashBcShake128Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.HashBcShake128Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcShake128Algorithm.IsPostQuantum
  nameWithType: HashBcShake128Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcShake256Algorithm
  name: HashBcShake256Algorithm
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html
  commentId: T:wan24.Crypto.BC.HashBcShake256Algorithm
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm
  nameWithType: HashBcShake256Algorithm
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.HashBcShake256Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.ALGORITHM_NAME
  nameWithType: HashBcShake256Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.HashBcShake256Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.ALGORITHM_VALUE
  nameWithType: HashBcShake256Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.HashBcShake256Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.DISPLAY_NAME
  nameWithType: HashBcShake256Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.HashBcShake256Algorithm.DisplayName
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.DisplayName
  nameWithType: HashBcShake256Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.HashBcShake256Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.DisplayName
  nameWithType: HashBcShake256Algorithm.DisplayName
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name: GetHashAlgorithmInt(CryptoOptions?)
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_GetHashAlgorithmInt_wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.HashBcShake256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  name.vb: GetHashAlgorithmInt(CryptoOptions)
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.HashBcShake256Algorithm.GetHashAlgorithmInt(wan24.Crypto.CryptoOptions)
  nameWithType: HashBcShake256Algorithm.GetHashAlgorithmInt(CryptoOptions?)
  nameWithType.vb: HashBcShake256Algorithm.GetHashAlgorithmInt(CryptoOptions)
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.GetHashAlgorithmInt*
  name: GetHashAlgorithmInt
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_GetHashAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.HashBcShake256Algorithm.GetHashAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.GetHashAlgorithmInt
  nameWithType: HashBcShake256Algorithm.GetHashAlgorithmInt
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.HASH_LENGTH
  name: HASH_LENGTH
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_HASH_LENGTH
  commentId: F:wan24.Crypto.BC.HashBcShake256Algorithm.HASH_LENGTH
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.HASH_LENGTH
  nameWithType: HashBcShake256Algorithm.HASH_LENGTH
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.HashLength
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_HashLength
  commentId: P:wan24.Crypto.BC.HashBcShake256Algorithm.HashLength
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.HashLength
  nameWithType: HashBcShake256Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.HashLength*
  name: HashLength
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_HashLength_
  commentId: Overload:wan24.Crypto.BC.HashBcShake256Algorithm.HashLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.HashLength
  nameWithType: HashBcShake256Algorithm.HashLength
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.HashBcShake256Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.IsPostQuantum
  nameWithType: HashBcShake256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.HashBcShake256Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.HashBcShake256Algorithm.html#wan24_Crypto_BC_HashBcShake256Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.HashBcShake256Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.HashBcShake256Algorithm.IsPostQuantum
  nameWithType: HashBcShake256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.IBouncyCastleRng
  name: IBouncyCastleRng
  href: api/wan24.Crypto.BC.IBouncyCastleRng.html
  commentId: T:wan24.Crypto.BC.IBouncyCastleRng
  fullName: wan24.Crypto.BC.IBouncyCastleRng
  nameWithType: IBouncyCastleRng
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm
  name: MacBcHmacSha3_256Algorithm
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html
  commentId: T:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm
  nameWithType: MacBcHmacSha3_256Algorithm
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.ALGORITHM_NAME
  nameWithType: MacBcHmacSha3_256Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.ALGORITHM_VALUE
  nameWithType: MacBcHmacSha3_256Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DISPLAY_NAME
  nameWithType: MacBcHmacSha3_256Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DisplayName
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DisplayName
  nameWithType: MacBcHmacSha3_256Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.DisplayName
  nameWithType: MacBcHmacSha3_256Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name: GetMacAlgorithmInt(byte[], CryptoOptions?)
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_GetMacAlgorithmInt_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: GetMacAlgorithmInt(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt(byte[], wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt(byte[], CryptoOptions?)
  nameWithType.vb: MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt*
  name: GetMacAlgorithmInt
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_GetMacAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt
  nameWithType: MacBcHmacSha3_256Algorithm.GetMacAlgorithmInt
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256
  name: MacBcHmacSha3_256Algorithm.HMACSHA3_256
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.html
  commentId: T:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256
  nameWithType: MacBcHmacSha3_256Algorithm.HMACSHA3_256
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.#ctor(System.Byte[])
  name: HMACSHA3_256(byte[])
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_HMACSHA3_256__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.HMACSHA3_256(byte[])
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.New(Byte())
  nameWithType: MacBcHmacSha3_256Algorithm.HMACSHA3_256.HMACSHA3_256(byte[])
  nameWithType.vb: MacBcHmacSha3_256Algorithm.HMACSHA3_256.New(Byte())
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.#ctor*
  name: HMACSHA3_256
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_HMACSHA3_256__ctor_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.HMACSHA3_256
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.New
  nameWithType: MacBcHmacSha3_256Algorithm.HMACSHA3_256.HMACSHA3_256
  nameWithType.vb: MacBcHmacSha3_256Algorithm.HMACSHA3_256.New
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.Register
  name: Register()
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_HMACSHA3_256_Register
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.Register
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.Register()
  nameWithType: MacBcHmacSha3_256Algorithm.HMACSHA3_256.Register()
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.Register*
  name: Register
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_HMACSHA3_256_Register_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.HMACSHA3_256.Register
  nameWithType: MacBcHmacSha3_256Algorithm.HMACSHA3_256.Register
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.IsPostQuantum
  nameWithType: MacBcHmacSha3_256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.IsPostQuantum
  nameWithType: MacBcHmacSha3_256Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MAC_LENGTH
  name: MAC_LENGTH
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_MAC_LENGTH
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MAC_LENGTH
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MAC_LENGTH
  nameWithType: MacBcHmacSha3_256Algorithm.MAC_LENGTH
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MacLength
  name: MacLength
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_MacLength
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MacLength
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MacLength
  nameWithType: MacBcHmacSha3_256Algorithm.MacLength
- uid: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MacLength*
  name: MacLength
  href: api/wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_256Algorithm_MacLength_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MacLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_256Algorithm.MacLength
  nameWithType: MacBcHmacSha3_256Algorithm.MacLength
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm
  name: MacBcHmacSha3_384Algorithm
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html
  commentId: T:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm
  nameWithType: MacBcHmacSha3_384Algorithm
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.ALGORITHM_NAME
  nameWithType: MacBcHmacSha3_384Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.ALGORITHM_VALUE
  nameWithType: MacBcHmacSha3_384Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DISPLAY_NAME
  nameWithType: MacBcHmacSha3_384Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DisplayName
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DisplayName
  nameWithType: MacBcHmacSha3_384Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.DisplayName
  nameWithType: MacBcHmacSha3_384Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name: GetMacAlgorithmInt(byte[], CryptoOptions?)
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_GetMacAlgorithmInt_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: GetMacAlgorithmInt(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt(byte[], wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt(byte[], CryptoOptions?)
  nameWithType.vb: MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt*
  name: GetMacAlgorithmInt
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_GetMacAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt
  nameWithType: MacBcHmacSha3_384Algorithm.GetMacAlgorithmInt
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384
  name: MacBcHmacSha3_384Algorithm.HMACSHA3_384
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.html
  commentId: T:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384
  nameWithType: MacBcHmacSha3_384Algorithm.HMACSHA3_384
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.#ctor(System.Byte[])
  name: HMACSHA3_384(byte[])
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_HMACSHA3_384__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.HMACSHA3_384(byte[])
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.New(Byte())
  nameWithType: MacBcHmacSha3_384Algorithm.HMACSHA3_384.HMACSHA3_384(byte[])
  nameWithType.vb: MacBcHmacSha3_384Algorithm.HMACSHA3_384.New(Byte())
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.#ctor*
  name: HMACSHA3_384
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_HMACSHA3_384__ctor_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.HMACSHA3_384
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.New
  nameWithType: MacBcHmacSha3_384Algorithm.HMACSHA3_384.HMACSHA3_384
  nameWithType.vb: MacBcHmacSha3_384Algorithm.HMACSHA3_384.New
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.Register
  name: Register()
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_HMACSHA3_384_Register
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.Register
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.Register()
  nameWithType: MacBcHmacSha3_384Algorithm.HMACSHA3_384.Register()
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.Register*
  name: Register
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_HMACSHA3_384_Register_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.HMACSHA3_384.Register
  nameWithType: MacBcHmacSha3_384Algorithm.HMACSHA3_384.Register
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.IsPostQuantum
  nameWithType: MacBcHmacSha3_384Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.IsPostQuantum
  nameWithType: MacBcHmacSha3_384Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MAC_LENGTH
  name: MAC_LENGTH
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_MAC_LENGTH
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MAC_LENGTH
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MAC_LENGTH
  nameWithType: MacBcHmacSha3_384Algorithm.MAC_LENGTH
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MacLength
  name: MacLength
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_MacLength
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MacLength
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MacLength
  nameWithType: MacBcHmacSha3_384Algorithm.MacLength
- uid: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MacLength*
  name: MacLength
  href: api/wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_384Algorithm_MacLength_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MacLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_384Algorithm.MacLength
  nameWithType: MacBcHmacSha3_384Algorithm.MacLength
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm
  name: MacBcHmacSha3_512Algorithm
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html
  commentId: T:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm
  nameWithType: MacBcHmacSha3_512Algorithm
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.ALGORITHM_NAME
  name: ALGORITHM_NAME
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_ALGORITHM_NAME
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.ALGORITHM_NAME
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.ALGORITHM_NAME
  nameWithType: MacBcHmacSha3_512Algorithm.ALGORITHM_NAME
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.ALGORITHM_VALUE
  name: ALGORITHM_VALUE
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_ALGORITHM_VALUE
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.ALGORITHM_VALUE
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.ALGORITHM_VALUE
  nameWithType: MacBcHmacSha3_512Algorithm.ALGORITHM_VALUE
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DISPLAY_NAME
  name: DISPLAY_NAME
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_DISPLAY_NAME
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DISPLAY_NAME
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DISPLAY_NAME
  nameWithType: MacBcHmacSha3_512Algorithm.DISPLAY_NAME
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DisplayName
  name: DisplayName
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_DisplayName
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DisplayName
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DisplayName
  nameWithType: MacBcHmacSha3_512Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DisplayName*
  name: DisplayName
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_DisplayName_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DisplayName
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.DisplayName
  nameWithType: MacBcHmacSha3_512Algorithm.DisplayName
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name: GetMacAlgorithmInt(byte[], CryptoOptions?)
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_GetMacAlgorithmInt_System_Byte___wan24_Crypto_CryptoOptions_
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt(System.Byte[],wan24.Crypto.CryptoOptions)
  name.vb: GetMacAlgorithmInt(Byte(), CryptoOptions)
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt(byte[], wan24.Crypto.CryptoOptions?)
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt(Byte(), wan24.Crypto.CryptoOptions)
  nameWithType: MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt(byte[], CryptoOptions?)
  nameWithType.vb: MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt(Byte(), CryptoOptions)
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt*
  name: GetMacAlgorithmInt
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_GetMacAlgorithmInt_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt
  nameWithType: MacBcHmacSha3_512Algorithm.GetMacAlgorithmInt
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512
  name: MacBcHmacSha3_512Algorithm.HMACSHA3_512
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.html
  commentId: T:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512
  nameWithType: MacBcHmacSha3_512Algorithm.HMACSHA3_512
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.#ctor(System.Byte[])
  name: HMACSHA3_512(byte[])
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_HMACSHA3_512__ctor_System_Byte___
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.HMACSHA3_512(byte[])
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.New(Byte())
  nameWithType: MacBcHmacSha3_512Algorithm.HMACSHA3_512.HMACSHA3_512(byte[])
  nameWithType.vb: MacBcHmacSha3_512Algorithm.HMACSHA3_512.New(Byte())
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.#ctor*
  name: HMACSHA3_512
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_HMACSHA3_512__ctor_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.HMACSHA3_512
  fullName.vb: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.New
  nameWithType: MacBcHmacSha3_512Algorithm.HMACSHA3_512.HMACSHA3_512
  nameWithType.vb: MacBcHmacSha3_512Algorithm.HMACSHA3_512.New
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.Register
  name: Register()
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_HMACSHA3_512_Register
  commentId: M:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.Register
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.Register()
  nameWithType: MacBcHmacSha3_512Algorithm.HMACSHA3_512.Register()
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.Register*
  name: Register
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_HMACSHA3_512_Register_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.Register
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.HMACSHA3_512.Register
  nameWithType: MacBcHmacSha3_512Algorithm.HMACSHA3_512.Register
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.IsPostQuantum
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_IsPostQuantum
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.IsPostQuantum
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.IsPostQuantum
  nameWithType: MacBcHmacSha3_512Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.IsPostQuantum*
  name: IsPostQuantum
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_IsPostQuantum_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.IsPostQuantum
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.IsPostQuantum
  nameWithType: MacBcHmacSha3_512Algorithm.IsPostQuantum
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MAC_LENGTH
  name: MAC_LENGTH
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_MAC_LENGTH
  commentId: F:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MAC_LENGTH
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MAC_LENGTH
  nameWithType: MacBcHmacSha3_512Algorithm.MAC_LENGTH
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MacLength
  name: MacLength
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_MacLength
  commentId: P:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MacLength
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MacLength
  nameWithType: MacBcHmacSha3_512Algorithm.MacLength
- uid: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MacLength*
  name: MacLength
  href: api/wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.html#wan24_Crypto_BC_MacBcHmacSha3_512Algorithm_MacLength_
  commentId: Overload:wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MacLength
  isSpec: "True"
  fullName: wan24.Crypto.BC.MacBcHmacSha3_512Algorithm.MacLength
  nameWithType: MacBcHmacSha3_512Algorithm.MacLength
- uid: wan24.Crypto.BC.RandomDataProvider
  name: RandomDataProvider
  href: api/wan24.Crypto.BC.RandomDataProvider.html
  commentId: T:wan24.Crypto.BC.RandomDataProvider
  fullName: wan24.Crypto.BC.RandomDataProvider
  nameWithType: RandomDataProvider
- uid: wan24.Crypto.BC.RandomDataProvider.#ctor(System.Int32@,wan24.Crypto.BC.RandomDataProvider@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,wan24.Crypto.ISeedableRng@)
  name: RandomDataProvider(in int, in RandomDataProvider?, in int?, in int?, in ISeedableRng?)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider__ctor_System_Int32__wan24_Crypto_BC_RandomDataProvider__System_Nullable_System_Int32___System_Nullable_System_Int32___wan24_Crypto_ISeedableRng__
  commentId: M:wan24.Crypto.BC.RandomDataProvider.#ctor(System.Int32@,wan24.Crypto.BC.RandomDataProvider@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,wan24.Crypto.ISeedableRng@)
  name.vb: New(Integer, RandomDataProvider, Integer?, Integer?, ISeedableRng)
  fullName: wan24.Crypto.BC.RandomDataProvider.RandomDataProvider(in int, in wan24.Crypto.BC.RandomDataProvider?, in int?, in int?, in wan24.Crypto.ISeedableRng?)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.New(Integer, wan24.Crypto.BC.RandomDataProvider, Integer?, Integer?, wan24.Crypto.ISeedableRng)
  nameWithType: RandomDataProvider.RandomDataProvider(in int, in RandomDataProvider?, in int?, in int?, in ISeedableRng?)
  nameWithType.vb: RandomDataProvider.New(Integer, RandomDataProvider, Integer?, Integer?, ISeedableRng)
- uid: wan24.Crypto.BC.RandomDataProvider.#ctor(wan24.Crypto.BC.RandomDataProvider@,System.Int32@,System.Nullable{System.Int32}@,wan24.Crypto.ISeedableRng@)
  name: RandomDataProvider(in RandomDataProvider?, in int, in int?, in ISeedableRng?)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider__ctor_wan24_Crypto_BC_RandomDataProvider__System_Int32__System_Nullable_System_Int32___wan24_Crypto_ISeedableRng__
  commentId: M:wan24.Crypto.BC.RandomDataProvider.#ctor(wan24.Crypto.BC.RandomDataProvider@,System.Int32@,System.Nullable{System.Int32}@,wan24.Crypto.ISeedableRng@)
  name.vb: New(RandomDataProvider, Integer, Integer?, ISeedableRng)
  fullName: wan24.Crypto.BC.RandomDataProvider.RandomDataProvider(in wan24.Crypto.BC.RandomDataProvider?, in int, in int?, in wan24.Crypto.ISeedableRng?)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.New(wan24.Crypto.BC.RandomDataProvider, Integer, Integer?, wan24.Crypto.ISeedableRng)
  nameWithType: RandomDataProvider.RandomDataProvider(in RandomDataProvider?, in int, in int?, in ISeedableRng?)
  nameWithType.vb: RandomDataProvider.New(RandomDataProvider, Integer, Integer?, ISeedableRng)
- uid: wan24.Crypto.BC.RandomDataProvider.#ctor*
  name: RandomDataProvider
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider__ctor_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.RandomDataProvider.RandomDataProvider
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.New
  nameWithType: RandomDataProvider.RandomDataProvider
  nameWithType.vb: RandomDataProvider.New
- uid: wan24.Crypto.BC.RandomDataProvider.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.RandomDataProvider.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.RandomDataProvider.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: RandomDataProvider.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: RandomDataProvider.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.RandomDataProvider.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_AddSeed_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.AddSeed
  nameWithType: RandomDataProvider.AddSeed
- uid: wan24.Crypto.BC.RandomDataProvider.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.RandomDataProvider.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.RandomDataProvider.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: RandomDataProvider.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: RandomDataProvider.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.RandomDataProvider.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.AddSeedAsync
  nameWithType: RandomDataProvider.AddSeedAsync
- uid: wan24.Crypto.BC.RandomDataProvider.CreateAsync(System.Int32,wan24.Crypto.BC.RandomDataProvider,System.Nullable{System.Int32},System.Nullable{System.Int32},wan24.Crypto.ISeedableRng,System.Threading.CancellationToken)
  name: CreateAsync(int, RandomDataProvider?, int?, int?, ISeedableRng?, CancellationToken)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_CreateAsync_System_Int32_wan24_Crypto_BC_RandomDataProvider_System_Nullable_System_Int32__System_Nullable_System_Int32__wan24_Crypto_ISeedableRng_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.RandomDataProvider.CreateAsync(System.Int32,wan24.Crypto.BC.RandomDataProvider,System.Nullable{System.Int32},System.Nullable{System.Int32},wan24.Crypto.ISeedableRng,System.Threading.CancellationToken)
  name.vb: CreateAsync(Integer, RandomDataProvider, Integer?, Integer?, ISeedableRng, CancellationToken)
  fullName: wan24.Crypto.BC.RandomDataProvider.CreateAsync(int, wan24.Crypto.BC.RandomDataProvider?, int?, int?, wan24.Crypto.ISeedableRng?, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.CreateAsync(Integer, wan24.Crypto.BC.RandomDataProvider, Integer?, Integer?, wan24.Crypto.ISeedableRng, System.Threading.CancellationToken)
  nameWithType: RandomDataProvider.CreateAsync(int, RandomDataProvider?, int?, int?, ISeedableRng?, CancellationToken)
  nameWithType.vb: RandomDataProvider.CreateAsync(Integer, RandomDataProvider, Integer?, Integer?, ISeedableRng, CancellationToken)
- uid: wan24.Crypto.BC.RandomDataProvider.CreateAsync*
  name: CreateAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_CreateAsync_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.CreateAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.CreateAsync
  nameWithType: RandomDataProvider.CreateAsync
- uid: wan24.Crypto.BC.RandomDataProvider.CreateFork(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,wan24.Crypto.ISeedableRng@)
  name: CreateFork(in int?, in int?, in int?, in ISeedableRng?)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_CreateFork_System_Nullable_System_Int32___System_Nullable_System_Int32___System_Nullable_System_Int32___wan24_Crypto_ISeedableRng__
  commentId: M:wan24.Crypto.BC.RandomDataProvider.CreateFork(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,wan24.Crypto.ISeedableRng@)
  name.vb: CreateFork(Integer?, Integer?, Integer?, ISeedableRng)
  fullName: wan24.Crypto.BC.RandomDataProvider.CreateFork(in int?, in int?, in int?, in wan24.Crypto.ISeedableRng?)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.CreateFork(Integer?, Integer?, Integer?, wan24.Crypto.ISeedableRng)
  nameWithType: RandomDataProvider.CreateFork(in int?, in int?, in int?, in ISeedableRng?)
  nameWithType.vb: RandomDataProvider.CreateFork(Integer?, Integer?, Integer?, ISeedableRng)
- uid: wan24.Crypto.BC.RandomDataProvider.CreateFork*
  name: CreateFork
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_CreateFork_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.CreateFork
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.CreateFork
  nameWithType: RandomDataProvider.CreateFork
- uid: wan24.Crypto.BC.RandomDataProvider.CreateForkAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},wan24.Crypto.ISeedableRng,System.Threading.CancellationToken)
  name: CreateForkAsync(int?, int?, int?, ISeedableRng?, CancellationToken)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_CreateForkAsync_System_Nullable_System_Int32__System_Nullable_System_Int32__System_Nullable_System_Int32__wan24_Crypto_ISeedableRng_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.RandomDataProvider.CreateForkAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},wan24.Crypto.ISeedableRng,System.Threading.CancellationToken)
  name.vb: CreateForkAsync(Integer?, Integer?, Integer?, ISeedableRng, CancellationToken)
  fullName: wan24.Crypto.BC.RandomDataProvider.CreateForkAsync(int?, int?, int?, wan24.Crypto.ISeedableRng?, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.CreateForkAsync(Integer?, Integer?, Integer?, wan24.Crypto.ISeedableRng, System.Threading.CancellationToken)
  nameWithType: RandomDataProvider.CreateForkAsync(int?, int?, int?, ISeedableRng?, CancellationToken)
  nameWithType.vb: RandomDataProvider.CreateForkAsync(Integer?, Integer?, Integer?, ISeedableRng, CancellationToken)
- uid: wan24.Crypto.BC.RandomDataProvider.CreateForkAsync*
  name: CreateForkAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_CreateForkAsync_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.CreateForkAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.CreateForkAsync
  nameWithType: RandomDataProvider.CreateForkAsync
- uid: wan24.Crypto.BC.RandomDataProvider.DidInit
  name: DidInit
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_DidInit
  commentId: F:wan24.Crypto.BC.RandomDataProvider.DidInit
  fullName: wan24.Crypto.BC.RandomDataProvider.DidInit
  nameWithType: RandomDataProvider.DidInit
- uid: wan24.Crypto.BC.RandomDataProvider.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.RandomDataProvider.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.RandomDataProvider.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.Dispose(Boolean)
  nameWithType: RandomDataProvider.Dispose(bool)
  nameWithType.vb: RandomDataProvider.Dispose(Boolean)
- uid: wan24.Crypto.BC.RandomDataProvider.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_Dispose_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.Dispose
  nameWithType: RandomDataProvider.Dispose
- uid: wan24.Crypto.BC.RandomDataProvider.DisposeCore
  name: DisposeCore()
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_DisposeCore
  commentId: M:wan24.Crypto.BC.RandomDataProvider.DisposeCore
  fullName: wan24.Crypto.BC.RandomDataProvider.DisposeCore()
  nameWithType: RandomDataProvider.DisposeCore()
- uid: wan24.Crypto.BC.RandomDataProvider.DisposeCore*
  name: DisposeCore
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_DisposeCore_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.DisposeCore
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.DisposeCore
  nameWithType: RandomDataProvider.DisposeCore
- uid: wan24.Crypto.BC.RandomDataProvider.HandleSeedAsync(wan24.Crypto.BC.RandomDataProvider,wan24.Crypto.BC.RandomDataProvider.SeedEventArgs,System.Threading.CancellationToken)
  name: HandleSeedAsync(RandomDataProvider, SeedEventArgs, CancellationToken)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_HandleSeedAsync_wan24_Crypto_BC_RandomDataProvider_wan24_Crypto_BC_RandomDataProvider_SeedEventArgs_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.RandomDataProvider.HandleSeedAsync(wan24.Crypto.BC.RandomDataProvider,wan24.Crypto.BC.RandomDataProvider.SeedEventArgs,System.Threading.CancellationToken)
  fullName: wan24.Crypto.BC.RandomDataProvider.HandleSeedAsync(wan24.Crypto.BC.RandomDataProvider, wan24.Crypto.BC.RandomDataProvider.SeedEventArgs, System.Threading.CancellationToken)
  nameWithType: RandomDataProvider.HandleSeedAsync(RandomDataProvider, RandomDataProvider.SeedEventArgs, CancellationToken)
- uid: wan24.Crypto.BC.RandomDataProvider.HandleSeedAsync*
  name: HandleSeedAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_HandleSeedAsync_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.HandleSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.HandleSeedAsync
  nameWithType: RandomDataProvider.HandleSeedAsync
- uid: wan24.Crypto.BC.RandomDataProvider.HandleSeedProviderDisposing(wan24.Core.IDisposableObject,System.EventArgs)
  name: HandleSeedProviderDisposing(IDisposableObject, EventArgs)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_HandleSeedProviderDisposing_wan24_Core_IDisposableObject_System_EventArgs_
  commentId: M:wan24.Crypto.BC.RandomDataProvider.HandleSeedProviderDisposing(wan24.Core.IDisposableObject,System.EventArgs)
  fullName: wan24.Crypto.BC.RandomDataProvider.HandleSeedProviderDisposing(wan24.Core.IDisposableObject, System.EventArgs)
  nameWithType: RandomDataProvider.HandleSeedProviderDisposing(IDisposableObject, EventArgs)
- uid: wan24.Crypto.BC.RandomDataProvider.HandleSeedProviderDisposing*
  name: HandleSeedProviderDisposing
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_HandleSeedProviderDisposing_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.HandleSeedProviderDisposing
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.HandleSeedProviderDisposing
  nameWithType: RandomDataProvider.HandleSeedProviderDisposing
- uid: wan24.Crypto.BC.RandomDataProvider.InitialSeed(System.Int32@)
  name: InitialSeed(in int)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_InitialSeed_System_Int32__
  commentId: M:wan24.Crypto.BC.RandomDataProvider.InitialSeed(System.Int32@)
  name.vb: InitialSeed(Integer)
  fullName: wan24.Crypto.BC.RandomDataProvider.InitialSeed(in int)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.InitialSeed(Integer)
  nameWithType: RandomDataProvider.InitialSeed(in int)
  nameWithType.vb: RandomDataProvider.InitialSeed(Integer)
- uid: wan24.Crypto.BC.RandomDataProvider.InitialSeed*
  name: InitialSeed
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_InitialSeed_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.InitialSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.InitialSeed
  nameWithType: RandomDataProvider.InitialSeed
- uid: wan24.Crypto.BC.RandomDataProvider.InitialSeedAsync(System.Int32,System.Threading.CancellationToken)
  name: InitialSeedAsync(int, CancellationToken)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_InitialSeedAsync_System_Int32_System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.RandomDataProvider.InitialSeedAsync(System.Int32,System.Threading.CancellationToken)
  name.vb: InitialSeedAsync(Integer, CancellationToken)
  fullName: wan24.Crypto.BC.RandomDataProvider.InitialSeedAsync(int, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.InitialSeedAsync(Integer, System.Threading.CancellationToken)
  nameWithType: RandomDataProvider.InitialSeedAsync(int, CancellationToken)
  nameWithType.vb: RandomDataProvider.InitialSeedAsync(Integer, CancellationToken)
- uid: wan24.Crypto.BC.RandomDataProvider.InitialSeedAsync*
  name: InitialSeedAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_InitialSeedAsync_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.InitialSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.InitialSeedAsync
  nameWithType: RandomDataProvider.InitialSeedAsync
- uid: wan24.Crypto.BC.RandomDataProvider.OnSeed
  name: OnSeed
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_OnSeed
  commentId: E:wan24.Crypto.BC.RandomDataProvider.OnSeed
  fullName: wan24.Crypto.BC.RandomDataProvider.OnSeed
  nameWithType: RandomDataProvider.OnSeed
- uid: wan24.Crypto.BC.RandomDataProvider.OnSeedAsync
  name: OnSeedAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_OnSeedAsync
  commentId: P:wan24.Crypto.BC.RandomDataProvider.OnSeedAsync
  fullName: wan24.Crypto.BC.RandomDataProvider.OnSeedAsync
  nameWithType: RandomDataProvider.OnSeedAsync
- uid: wan24.Crypto.BC.RandomDataProvider.OnSeedAsync*
  name: OnSeedAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_OnSeedAsync_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.OnSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.OnSeedAsync
  nameWithType: RandomDataProvider.OnSeedAsync
- uid: wan24.Crypto.BC.RandomDataProvider.RNG
  name: RNG
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_RNG
  commentId: F:wan24.Crypto.BC.RandomDataProvider.RNG
  fullName: wan24.Crypto.BC.RandomDataProvider.RNG
  nameWithType: RandomDataProvider.RNG
- uid: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeed(System.ReadOnlyMemory{System.Byte}@)
  name: RaiseOnSeed(in ReadOnlyMemory<byte>)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_RaiseOnSeed_System_ReadOnlyMemory_System_Byte___
  commentId: M:wan24.Crypto.BC.RandomDataProvider.RaiseOnSeed(System.ReadOnlyMemory{System.Byte}@)
  name.vb: RaiseOnSeed(ReadOnlyMemory(Of Byte))
  fullName: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeed(in System.ReadOnlyMemory<byte>)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeed(System.ReadOnlyMemory(Of Byte))
  nameWithType: RandomDataProvider.RaiseOnSeed(in ReadOnlyMemory<byte>)
  nameWithType.vb: RandomDataProvider.RaiseOnSeed(ReadOnlyMemory(Of Byte))
- uid: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeed*
  name: RaiseOnSeed
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_RaiseOnSeed_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.RaiseOnSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeed
  nameWithType: RandomDataProvider.RaiseOnSeed
- uid: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: RaiseOnSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_RaiseOnSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.RandomDataProvider.RaiseOnSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: RaiseOnSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: RandomDataProvider.RaiseOnSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: RandomDataProvider.RaiseOnSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeedAsync*
  name: RaiseOnSeedAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_RaiseOnSeedAsync_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.RaiseOnSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.RaiseOnSeedAsync
  nameWithType: RandomDataProvider.RaiseOnSeedAsync
- uid: wan24.Crypto.BC.RandomDataProvider.RngSync
  name: RngSync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_RngSync
  commentId: F:wan24.Crypto.BC.RandomDataProvider.RngSync
  fullName: wan24.Crypto.BC.RandomDataProvider.RngSync
  nameWithType: RandomDataProvider.RngSync
- uid: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs
  name: RandomDataProvider.SeedEventArgs
  href: api/wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.html
  commentId: T:wan24.Crypto.BC.RandomDataProvider.SeedEventArgs
  fullName: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs
  nameWithType: RandomDataProvider.SeedEventArgs
- uid: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.#ctor
  name: SeedEventArgs()
  href: api/wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.html#wan24_Crypto_BC_RandomDataProvider_SeedEventArgs__ctor
  commentId: M:wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.#ctor
  name.vb: New()
  fullName: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.SeedEventArgs()
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.New()
  nameWithType: RandomDataProvider.SeedEventArgs.SeedEventArgs()
  nameWithType.vb: RandomDataProvider.SeedEventArgs.New()
- uid: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.#ctor(System.ReadOnlyMemory{System.Byte}@)
  name: SeedEventArgs(in ReadOnlyMemory<byte>)
  href: api/wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.html#wan24_Crypto_BC_RandomDataProvider_SeedEventArgs__ctor_System_ReadOnlyMemory_System_Byte___
  commentId: M:wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.#ctor(System.ReadOnlyMemory{System.Byte}@)
  name.vb: New(ReadOnlyMemory(Of Byte))
  fullName: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.SeedEventArgs(in System.ReadOnlyMemory<byte>)
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.New(System.ReadOnlyMemory(Of Byte))
  nameWithType: RandomDataProvider.SeedEventArgs.SeedEventArgs(in ReadOnlyMemory<byte>)
  nameWithType.vb: RandomDataProvider.SeedEventArgs.New(ReadOnlyMemory(Of Byte))
- uid: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.#ctor*
  name: SeedEventArgs
  href: api/wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.html#wan24_Crypto_BC_RandomDataProvider_SeedEventArgs__ctor_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.SeedEventArgs
  fullName.vb: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.New
  nameWithType: RandomDataProvider.SeedEventArgs.SeedEventArgs
  nameWithType.vb: RandomDataProvider.SeedEventArgs.New
- uid: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.Seed
  name: Seed
  href: api/wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.html#wan24_Crypto_BC_RandomDataProvider_SeedEventArgs_Seed
  commentId: P:wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.Seed
  fullName: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.Seed
  nameWithType: RandomDataProvider.SeedEventArgs.Seed
- uid: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.Seed*
  name: Seed
  href: api/wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.html#wan24_Crypto_BC_RandomDataProvider_SeedEventArgs_Seed_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.Seed
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.SeedEventArgs.Seed
  nameWithType: RandomDataProvider.SeedEventArgs.Seed
- uid: wan24.Crypto.BC.RandomDataProvider.SeedProvider
  name: SeedProvider
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_SeedProvider
  commentId: F:wan24.Crypto.BC.RandomDataProvider.SeedProvider
  fullName: wan24.Crypto.BC.RandomDataProvider.SeedProvider
  nameWithType: RandomDataProvider.SeedProvider
- uid: wan24.Crypto.BC.RandomDataProvider.Seed_Delegate
  name: RandomDataProvider.Seed_Delegate
  href: api/wan24.Crypto.BC.RandomDataProvider.Seed_Delegate.html
  commentId: T:wan24.Crypto.BC.RandomDataProvider.Seed_Delegate
  fullName: wan24.Crypto.BC.RandomDataProvider.Seed_Delegate
  nameWithType: RandomDataProvider.Seed_Delegate
- uid: wan24.Crypto.BC.RandomDataProvider.WorkerAsync
  name: WorkerAsync()
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_WorkerAsync
  commentId: M:wan24.Crypto.BC.RandomDataProvider.WorkerAsync
  fullName: wan24.Crypto.BC.RandomDataProvider.WorkerAsync()
  nameWithType: RandomDataProvider.WorkerAsync()
- uid: wan24.Crypto.BC.RandomDataProvider.WorkerAsync*
  name: WorkerAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_WorkerAsync_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.WorkerAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.WorkerAsync
  nameWithType: RandomDataProvider.WorkerAsync
- uid: wan24.Crypto.BC.RandomDataProvider.WorkerBufferSize
  name: WorkerBufferSize
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_WorkerBufferSize
  commentId: P:wan24.Crypto.BC.RandomDataProvider.WorkerBufferSize
  fullName: wan24.Crypto.BC.RandomDataProvider.WorkerBufferSize
  nameWithType: RandomDataProvider.WorkerBufferSize
- uid: wan24.Crypto.BC.RandomDataProvider.WorkerBufferSize*
  name: WorkerBufferSize
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider_WorkerBufferSize_
  commentId: Overload:wan24.Crypto.BC.RandomDataProvider.WorkerBufferSize
  isSpec: "True"
  fullName: wan24.Crypto.BC.RandomDataProvider.WorkerBufferSize
  nameWithType: RandomDataProvider.WorkerBufferSize
- uid: wan24.Crypto.BC.RandomDataProvider._OnSeedAsync
  name: _OnSeedAsync
  href: api/wan24.Crypto.BC.RandomDataProvider.html#wan24_Crypto_BC_RandomDataProvider__OnSeedAsync
  commentId: F:wan24.Crypto.BC.RandomDataProvider._OnSeedAsync
  fullName: wan24.Crypto.BC.RandomDataProvider._OnSeedAsync
  nameWithType: RandomDataProvider._OnSeedAsync
- uid: wan24.Crypto.BC.StreamCipherRng
  name: StreamCipherRng
  href: api/wan24.Crypto.BC.StreamCipherRng.html
  commentId: T:wan24.Crypto.BC.StreamCipherRng
  fullName: wan24.Crypto.BC.StreamCipherRng
  nameWithType: StreamCipherRng
- uid: wan24.Crypto.BC.StreamCipherRng.#ctor(wan24.Crypto.EncryptionAlgorithmBase@,wan24.Crypto.ISeedableRng,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  name: StreamCipherRng(in EncryptionAlgorithmBase, ISeedableRng?, in int?, in int?)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng__ctor_wan24_Crypto_EncryptionAlgorithmBase__wan24_Crypto_ISeedableRng_System_Nullable_System_Int32___System_Nullable_System_Int32___
  commentId: M:wan24.Crypto.BC.StreamCipherRng.#ctor(wan24.Crypto.EncryptionAlgorithmBase@,wan24.Crypto.ISeedableRng,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  name.vb: New(EncryptionAlgorithmBase, ISeedableRng, Integer?, Integer?)
  fullName: wan24.Crypto.BC.StreamCipherRng.StreamCipherRng(in wan24.Crypto.EncryptionAlgorithmBase, wan24.Crypto.ISeedableRng?, in int?, in int?)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.New(wan24.Crypto.EncryptionAlgorithmBase, wan24.Crypto.ISeedableRng, Integer?, Integer?)
  nameWithType: StreamCipherRng.StreamCipherRng(in EncryptionAlgorithmBase, ISeedableRng?, in int?, in int?)
  nameWithType.vb: StreamCipherRng.New(EncryptionAlgorithmBase, ISeedableRng, Integer?, Integer?)
- uid: wan24.Crypto.BC.StreamCipherRng.#ctor*
  name: StreamCipherRng
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng__ctor_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.StreamCipherRng.StreamCipherRng
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.New
  nameWithType: StreamCipherRng.StreamCipherRng
  nameWithType.vb: StreamCipherRng.New
- uid: wan24.Crypto.BC.StreamCipherRng.AddSeed(System.ReadOnlySpan{System.Byte})
  name: AddSeed(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_AddSeed_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.StreamCipherRng.AddSeed(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeed(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.StreamCipherRng.AddSeed(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.AddSeed(System.ReadOnlySpan(Of Byte))
  nameWithType: StreamCipherRng.AddSeed(ReadOnlySpan<byte>)
  nameWithType.vb: StreamCipherRng.AddSeed(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.StreamCipherRng.AddSeed*
  name: AddSeed
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_AddSeed_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.AddSeed
  isSpec: "True"
  fullName: wan24.Crypto.BC.StreamCipherRng.AddSeed
  nameWithType: StreamCipherRng.AddSeed
- uid: wan24.Crypto.BC.StreamCipherRng.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_AddSeedAsync_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.StreamCipherRng.AddSeedAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.StreamCipherRng.AddSeedAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.AddSeedAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: StreamCipherRng.AddSeedAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: StreamCipherRng.AddSeedAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.StreamCipherRng.AddSeedAsync*
  name: AddSeedAsync
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_AddSeedAsync_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.AddSeedAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.StreamCipherRng.AddSeedAsync
  nameWithType: StreamCipherRng.AddSeedAsync
- uid: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(System.Byte[])
  name: AddSeedMaterial(byte[])
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_AddSeedMaterial_System_Byte___
  commentId: M:wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(System.Byte[])
  name.vb: AddSeedMaterial(Byte())
  fullName: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(byte[])
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(Byte())
  nameWithType: StreamCipherRng.AddSeedMaterial(byte[])
  nameWithType.vb: StreamCipherRng.AddSeedMaterial(Byte())
- uid: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(System.Int64)
  name: AddSeedMaterial(long)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_AddSeedMaterial_System_Int64_
  commentId: M:wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(System.Int64)
  name.vb: AddSeedMaterial(Long)
  fullName: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(long)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(Long)
  nameWithType: StreamCipherRng.AddSeedMaterial(long)
  nameWithType.vb: StreamCipherRng.AddSeedMaterial(Long)
- uid: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name: AddSeedMaterial(ReadOnlySpan<byte>)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_AddSeedMaterial_System_ReadOnlySpan_System_Byte__
  commentId: M:wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(System.ReadOnlySpan{System.Byte})
  name.vb: AddSeedMaterial(ReadOnlySpan(Of Byte))
  fullName: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(System.ReadOnlySpan<byte>)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial(System.ReadOnlySpan(Of Byte))
  nameWithType: StreamCipherRng.AddSeedMaterial(ReadOnlySpan<byte>)
  nameWithType.vb: StreamCipherRng.AddSeedMaterial(ReadOnlySpan(Of Byte))
- uid: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial*
  name: AddSeedMaterial
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_AddSeedMaterial_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial
  isSpec: "True"
  fullName: wan24.Crypto.BC.StreamCipherRng.AddSeedMaterial
  nameWithType: StreamCipherRng.AddSeedMaterial
- uid: wan24.Crypto.BC.StreamCipherRng.Algorithm
  name: Algorithm
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_Algorithm
  commentId: P:wan24.Crypto.BC.StreamCipherRng.Algorithm
  fullName: wan24.Crypto.BC.StreamCipherRng.Algorithm
  nameWithType: StreamCipherRng.Algorithm
- uid: wan24.Crypto.BC.StreamCipherRng.Algorithm*
  name: Algorithm
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_Algorithm_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.Algorithm
  isSpec: "True"
  fullName: wan24.Crypto.BC.StreamCipherRng.Algorithm
  nameWithType: StreamCipherRng.Algorithm
- uid: wan24.Crypto.BC.StreamCipherRng.Buffer
  name: Buffer
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_Buffer
  commentId: F:wan24.Crypto.BC.StreamCipherRng.Buffer
  fullName: wan24.Crypto.BC.StreamCipherRng.Buffer
  nameWithType: StreamCipherRng.Buffer
- uid: wan24.Crypto.BC.StreamCipherRng.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_Dispose_System_Boolean_
  commentId: M:wan24.Crypto.BC.StreamCipherRng.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: wan24.Crypto.BC.StreamCipherRng.Dispose(bool)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.Dispose(Boolean)
  nameWithType: StreamCipherRng.Dispose(bool)
  nameWithType.vb: StreamCipherRng.Dispose(Boolean)
- uid: wan24.Crypto.BC.StreamCipherRng.Dispose*
  name: Dispose
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_Dispose_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.Dispose
  isSpec: "True"
  fullName: wan24.Crypto.BC.StreamCipherRng.Dispose
  nameWithType: StreamCipherRng.Dispose
- uid: wan24.Crypto.BC.StreamCipherRng.Encryption
  name: Encryption
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_Encryption
  commentId: F:wan24.Crypto.BC.StreamCipherRng.Encryption
  fullName: wan24.Crypto.BC.StreamCipherRng.Encryption
  nameWithType: StreamCipherRng.Encryption
- uid: wan24.Crypto.BC.StreamCipherRng.FillBytes(System.Span{System.Byte}@)
  name: FillBytes(in Span<byte>)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_FillBytes_System_Span_System_Byte___
  commentId: M:wan24.Crypto.BC.StreamCipherRng.FillBytes(System.Span{System.Byte}@)
  name.vb: FillBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.StreamCipherRng.FillBytes(in System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.FillBytes(System.Span(Of Byte))
  nameWithType: StreamCipherRng.FillBytes(in Span<byte>)
  nameWithType.vb: StreamCipherRng.FillBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.StreamCipherRng.FillBytes*
  name: FillBytes
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_FillBytes_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.FillBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.StreamCipherRng.FillBytes
  nameWithType: StreamCipherRng.FillBytes
- uid: wan24.Crypto.BC.StreamCipherRng.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name: FillBytesAsync(Memory<byte>, CancellationToken)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_FillBytesAsync_System_Memory_System_Byte__System_Threading_CancellationToken_
  commentId: M:wan24.Crypto.BC.StreamCipherRng.FillBytesAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  name.vb: FillBytesAsync(Memory(Of Byte), CancellationToken)
  fullName: wan24.Crypto.BC.StreamCipherRng.FillBytesAsync(System.Memory<byte>, System.Threading.CancellationToken)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.FillBytesAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  nameWithType: StreamCipherRng.FillBytesAsync(Memory<byte>, CancellationToken)
  nameWithType.vb: StreamCipherRng.FillBytesAsync(Memory(Of Byte), CancellationToken)
- uid: wan24.Crypto.BC.StreamCipherRng.FillBytesAsync*
  name: FillBytesAsync
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_FillBytesAsync_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.FillBytesAsync
  isSpec: "True"
  fullName: wan24.Crypto.BC.StreamCipherRng.FillBytesAsync
  nameWithType: StreamCipherRng.FillBytesAsync
- uid: wan24.Crypto.BC.StreamCipherRng.NextBytes(System.Byte[])
  name: NextBytes(byte[])
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_NextBytes_System_Byte___
  commentId: M:wan24.Crypto.BC.StreamCipherRng.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: wan24.Crypto.BC.StreamCipherRng.NextBytes(byte[])
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.NextBytes(Byte())
  nameWithType: StreamCipherRng.NextBytes(byte[])
  nameWithType.vb: StreamCipherRng.NextBytes(Byte())
- uid: wan24.Crypto.BC.StreamCipherRng.NextBytes(System.Byte[],System.Int32,System.Int32)
  name: NextBytes(byte[], int, int)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_NextBytes_System_Byte___System_Int32_System_Int32_
  commentId: M:wan24.Crypto.BC.StreamCipherRng.NextBytes(System.Byte[],System.Int32,System.Int32)
  name.vb: NextBytes(Byte(), Integer, Integer)
  fullName: wan24.Crypto.BC.StreamCipherRng.NextBytes(byte[], int, int)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.NextBytes(Byte(), Integer, Integer)
  nameWithType: StreamCipherRng.NextBytes(byte[], int, int)
  nameWithType.vb: StreamCipherRng.NextBytes(Byte(), Integer, Integer)
- uid: wan24.Crypto.BC.StreamCipherRng.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<byte>)
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_NextBytes_System_Span_System_Byte__
  commentId: M:wan24.Crypto.BC.StreamCipherRng.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: wan24.Crypto.BC.StreamCipherRng.NextBytes(System.Span<byte>)
  fullName.vb: wan24.Crypto.BC.StreamCipherRng.NextBytes(System.Span(Of Byte))
  nameWithType: StreamCipherRng.NextBytes(Span<byte>)
  nameWithType.vb: StreamCipherRng.NextBytes(Span(Of Byte))
- uid: wan24.Crypto.BC.StreamCipherRng.NextBytes*
  name: NextBytes
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_NextBytes_
  commentId: Overload:wan24.Crypto.BC.StreamCipherRng.NextBytes
  isSpec: "True"
  fullName: wan24.Crypto.BC.StreamCipherRng.NextBytes
  nameWithType: StreamCipherRng.NextBytes
- uid: wan24.Crypto.BC.StreamCipherRng.RNG
  name: RNG
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_RNG
  commentId: F:wan24.Crypto.BC.StreamCipherRng.RNG
  fullName: wan24.Crypto.BC.StreamCipherRng.RNG
  nameWithType: StreamCipherRng.RNG
- uid: wan24.Crypto.BC.StreamCipherRng.RngSync
  name: RngSync
  href: api/wan24.Crypto.BC.StreamCipherRng.html#wan24_Crypto_BC_StreamCipherRng_RngSync
  commentId: F:wan24.Crypto.BC.StreamCipherRng.RngSync
  fullName: wan24.Crypto.BC.StreamCipherRng.RngSync
  nameWithType: StreamCipherRng.RngSync
- uid: wan24.Crypto.BC.XSalsa20Rng
  name: XSalsa20Rng
  href: api/wan24.Crypto.BC.XSalsa20Rng.html
  commentId: T:wan24.Crypto.BC.XSalsa20Rng
  fullName: wan24.Crypto.BC.XSalsa20Rng
  nameWithType: XSalsa20Rng
- uid: wan24.Crypto.BC.XSalsa20Rng.#ctor(wan24.Crypto.ISeedableRng@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  name: XSalsa20Rng(in ISeedableRng?, in int?, in int?)
  href: api/wan24.Crypto.BC.XSalsa20Rng.html#wan24_Crypto_BC_XSalsa20Rng__ctor_wan24_Crypto_ISeedableRng__System_Nullable_System_Int32___System_Nullable_System_Int32___
  commentId: M:wan24.Crypto.BC.XSalsa20Rng.#ctor(wan24.Crypto.ISeedableRng@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  name.vb: New(ISeedableRng, Integer?, Integer?)
  fullName: wan24.Crypto.BC.XSalsa20Rng.XSalsa20Rng(in wan24.Crypto.ISeedableRng?, in int?, in int?)
  fullName.vb: wan24.Crypto.BC.XSalsa20Rng.New(wan24.Crypto.ISeedableRng, Integer?, Integer?)
  nameWithType: XSalsa20Rng.XSalsa20Rng(in ISeedableRng?, in int?, in int?)
  nameWithType.vb: XSalsa20Rng.New(ISeedableRng, Integer?, Integer?)
- uid: wan24.Crypto.BC.XSalsa20Rng.#ctor*
  name: XSalsa20Rng
  href: api/wan24.Crypto.BC.XSalsa20Rng.html#wan24_Crypto_BC_XSalsa20Rng__ctor_
  commentId: Overload:wan24.Crypto.BC.XSalsa20Rng.#ctor
  isSpec: "True"
  name.vb: New
  fullName: wan24.Crypto.BC.XSalsa20Rng.XSalsa20Rng
  fullName.vb: wan24.Crypto.BC.XSalsa20Rng.New
  nameWithType: XSalsa20Rng.XSalsa20Rng
  nameWithType.vb: XSalsa20Rng.New
